2024-12-20 17:50:27,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-20 17:50:27,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-20 17:50:27,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-20 17:50:27,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-20 17:51:48,567:INFO:PyCaret RegressionExperiment
2024-12-20 17:51:48,567:INFO:Logging name: reg-default-name
2024-12-20 17:51:48,567:INFO:ML Usecase: MLUsecase.REGRESSION
2024-12-20 17:51:48,567:INFO:version 3.3.2
2024-12-20 17:51:48,567:INFO:Initializing setup()
2024-12-20 17:51:48,567:INFO:self.USI: 1ab3
2024-12-20 17:51:48,567:INFO:self._variable_keys: {'_available_plots', 'exp_id', 'seed', '_ml_usecase', 'fold_generator', 'log_plots_param', 'logging_param', 'USI', 'transform_target_param', 'fold_shuffle_param', 'html_param', 'X_train', 'idx', 'exp_name_log', 'gpu_param', 'memory', 'pipeline', 'fold_groups_param', 'target_param', 'data', 'gpu_n_jobs_param', 'X_test', 'X', 'y', 'y_train', 'y_test', 'n_jobs_param'}
2024-12-20 17:51:48,567:INFO:Checking environment
2024-12-20 17:51:48,567:INFO:python_version: 3.11.7
2024-12-20 17:51:48,567:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-12-20 17:51:48,567:INFO:machine: AMD64
2024-12-20 17:51:48,567:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-20 17:51:48,567:INFO:Memory: svmem(total=16539455488, available=5244452864, percent=68.3, used=11295002624, free=5244452864)
2024-12-20 17:51:48,568:INFO:Physical Core: 8
2024-12-20 17:51:48,568:INFO:Logical Core: 16
2024-12-20 17:51:48,568:INFO:Checking libraries
2024-12-20 17:51:48,568:INFO:System:
2024-12-20 17:51:48,568:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-12-20 17:51:48,568:INFO:executable: C:\Users\MOKSH\anaconda3\python.exe
2024-12-20 17:51:48,568:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-20 17:51:48,568:INFO:PyCaret required dependencies:
2024-12-20 17:51:49,491:INFO:                 pip: 23.3.1
2024-12-20 17:51:49,491:INFO:          setuptools: 68.2.2
2024-12-20 17:51:49,491:INFO:             pycaret: 3.3.2
2024-12-20 17:51:49,491:INFO:             IPython: 8.20.0
2024-12-20 17:51:49,491:INFO:          ipywidgets: 7.6.5
2024-12-20 17:51:49,491:INFO:                tqdm: 4.65.0
2024-12-20 17:51:49,491:INFO:               numpy: 1.26.4
2024-12-20 17:51:49,491:INFO:              pandas: 2.1.4
2024-12-20 17:51:49,491:INFO:              jinja2: 3.1.3
2024-12-20 17:51:49,491:INFO:               scipy: 1.11.4
2024-12-20 17:51:49,491:INFO:              joblib: 1.2.0
2024-12-20 17:51:49,492:INFO:             sklearn: 1.4.2
2024-12-20 17:51:49,492:INFO:                pyod: 2.0.2
2024-12-20 17:51:49,492:INFO:            imblearn: 0.12.4
2024-12-20 17:51:49,492:INFO:   category_encoders: 2.6.4
2024-12-20 17:51:49,492:INFO:            lightgbm: 4.5.0
2024-12-20 17:51:49,492:INFO:               numba: 0.59.0
2024-12-20 17:51:49,492:INFO:            requests: 2.32.3
2024-12-20 17:51:49,492:INFO:          matplotlib: 3.7.5
2024-12-20 17:51:49,492:INFO:          scikitplot: 0.3.7
2024-12-20 17:51:49,492:INFO:         yellowbrick: 1.5
2024-12-20 17:51:49,492:INFO:              plotly: 5.24.1
2024-12-20 17:51:49,492:INFO:    plotly-resampler: Not installed
2024-12-20 17:51:49,492:INFO:             kaleido: 0.2.1
2024-12-20 17:51:49,492:INFO:           schemdraw: 0.15
2024-12-20 17:51:49,492:INFO:         statsmodels: 0.14.0
2024-12-20 17:51:49,492:INFO:              sktime: 0.26.0
2024-12-20 17:51:49,492:INFO:               tbats: 1.1.3
2024-12-20 17:51:49,492:INFO:            pmdarima: 2.0.4
2024-12-20 17:51:49,492:INFO:              psutil: 5.9.0
2024-12-20 17:51:49,492:INFO:          markupsafe: 2.1.3
2024-12-20 17:51:49,492:INFO:             pickle5: Not installed
2024-12-20 17:51:49,492:INFO:         cloudpickle: 2.2.1
2024-12-20 17:51:49,492:INFO:         deprecation: 2.1.0
2024-12-20 17:51:49,492:INFO:              xxhash: 3.5.0
2024-12-20 17:51:49,492:INFO:           wurlitzer: Not installed
2024-12-20 17:51:49,492:INFO:PyCaret optional dependencies:
2024-12-20 17:51:49,504:INFO:                shap: Not installed
2024-12-20 17:51:49,504:INFO:           interpret: Not installed
2024-12-20 17:51:49,504:INFO:                umap: Not installed
2024-12-20 17:51:49,504:INFO:     ydata_profiling: Not installed
2024-12-20 17:51:49,504:INFO:  explainerdashboard: Not installed
2024-12-20 17:51:49,504:INFO:             autoviz: Not installed
2024-12-20 17:51:49,504:INFO:           fairlearn: Not installed
2024-12-20 17:51:49,504:INFO:          deepchecks: Not installed
2024-12-20 17:51:49,504:INFO:             xgboost: Not installed
2024-12-20 17:51:49,504:INFO:            catboost: Not installed
2024-12-20 17:51:49,504:INFO:              kmodes: Not installed
2024-12-20 17:51:49,504:INFO:             mlxtend: Not installed
2024-12-20 17:51:49,504:INFO:       statsforecast: Not installed
2024-12-20 17:51:49,504:INFO:        tune_sklearn: Not installed
2024-12-20 17:51:49,504:INFO:                 ray: Not installed
2024-12-20 17:51:49,504:INFO:            hyperopt: Not installed
2024-12-20 17:51:49,504:INFO:              optuna: Not installed
2024-12-20 17:51:49,504:INFO:               skopt: Not installed
2024-12-20 17:51:49,504:INFO:              mlflow: Not installed
2024-12-20 17:51:49,504:INFO:              gradio: Not installed
2024-12-20 17:51:49,504:INFO:             fastapi: Not installed
2024-12-20 17:51:49,504:INFO:             uvicorn: Not installed
2024-12-20 17:51:49,504:INFO:              m2cgen: Not installed
2024-12-20 17:51:49,504:INFO:           evidently: Not installed
2024-12-20 17:51:49,504:INFO:               fugue: Not installed
2024-12-20 17:51:49,504:INFO:           streamlit: 1.30.0
2024-12-20 17:51:49,504:INFO:             prophet: Not installed
2024-12-20 17:51:49,504:INFO:None
2024-12-20 17:51:49,504:INFO:Set up data.
2024-12-20 17:51:49,504:INFO:Set up folding strategy.
2024-12-20 17:51:49,504:INFO:Set up train/test split.
2024-12-20 17:51:49,519:INFO:Set up index.
2024-12-20 17:51:49,519:INFO:Assigning column types.
2024-12-20 17:51:49,519:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-20 17:51:49,519:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,519:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,519:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,566:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,609:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,609:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,625:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,672:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,703:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,703:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-12-20 17:51:49,703:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,719:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,762:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,793:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,793:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,810:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,856:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,903:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,903:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-12-20 17:51:49,903:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,950:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 17:51:49,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:49,997:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 17:51:50,059:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:50,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 17:51:50,090:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,090:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-12-20 17:51:50,165:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:50,212:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 17:51:50,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,260:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:50,307:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 17:51:50,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,307:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-20 17:51:50,354:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:50,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,448:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 17:51:50,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,479:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-12-20 17:51:50,573:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,663:INFO:Preparing preprocessing pipeline...
2024-12-20 17:51:50,663:INFO:Set up simple imputation.
2024-12-20 17:51:50,663:INFO:Set up column transformation.
2024-12-20 17:51:50,663:INFO:Set up feature normalization.
2024-12-20 17:51:50,726:INFO:Finished creating preprocessing pipeline.
2024-12-20 17:51:50,726:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOKSH\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-12-20 17:51:50,726:INFO:Creating final display dataframe.
2024-12-20 17:51:50,804:INFO:Setup _display_container:                     Description             Value
0                    Session id               287
1                        Target           Target1
2                   Target type        Regression
3           Original data shape        (1000, 16)
4        Transformed data shape        (1000, 16)
5   Transformed train set shape         (700, 16)
6    Transformed test set shape         (300, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Transformation              True
13        Transformation method       yeo-johnson
14                    Normalize              True
15             Normalize method            zscore
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              1ab3
2024-12-20 17:51:50,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:50,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:51,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:51,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:51:51,048:INFO:setup() successfully completed in 2.49s...............
2024-12-20 17:52:34,587:INFO:Initializing compare_models()
2024-12-20 17:52:34,587:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-20 17:52:34,587:INFO:Checking exceptions
2024-12-20 17:52:34,587:INFO:Preparing display monitor
2024-12-20 17:52:34,602:INFO:Initializing Linear Regression
2024-12-20 17:52:34,602:INFO:Total runtime is 0.0 minutes
2024-12-20 17:52:34,602:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:34,602:INFO:Initializing create_model()
2024-12-20 17:52:34,602:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:34,602:INFO:Checking exceptions
2024-12-20 17:52:34,602:INFO:Importing libraries
2024-12-20 17:52:34,602:INFO:Copying training dataset
2024-12-20 17:52:34,618:INFO:Defining folds
2024-12-20 17:52:34,618:INFO:Declaring metric variables
2024-12-20 17:52:34,618:INFO:Importing untrained model
2024-12-20 17:52:34,618:INFO:Linear Regression Imported successfully
2024-12-20 17:52:34,634:INFO:Starting cross validation
2024-12-20 17:52:34,634:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:40,102:INFO:Calculating mean and std
2024-12-20 17:52:40,109:INFO:Creating metrics dataframe
2024-12-20 17:52:40,109:INFO:Uploading results into container
2024-12-20 17:52:40,109:INFO:Uploading model into container now
2024-12-20 17:52:40,109:INFO:_master_model_container: 1
2024-12-20 17:52:40,109:INFO:_display_container: 2
2024-12-20 17:52:40,109:INFO:LinearRegression(n_jobs=-1)
2024-12-20 17:52:40,109:INFO:create_model() successfully completed......................................
2024-12-20 17:52:40,322:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:40,322:INFO:Creating metrics dataframe
2024-12-20 17:52:40,322:INFO:Initializing Lasso Regression
2024-12-20 17:52:40,322:INFO:Total runtime is 0.09532132148742675 minutes
2024-12-20 17:52:40,322:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:40,322:INFO:Initializing create_model()
2024-12-20 17:52:40,322:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:40,322:INFO:Checking exceptions
2024-12-20 17:52:40,322:INFO:Importing libraries
2024-12-20 17:52:40,322:INFO:Copying training dataset
2024-12-20 17:52:40,338:INFO:Defining folds
2024-12-20 17:52:40,338:INFO:Declaring metric variables
2024-12-20 17:52:40,338:INFO:Importing untrained model
2024-12-20 17:52:40,338:INFO:Lasso Regression Imported successfully
2024-12-20 17:52:40,338:INFO:Starting cross validation
2024-12-20 17:52:40,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:44,423:INFO:Calculating mean and std
2024-12-20 17:52:44,424:INFO:Creating metrics dataframe
2024-12-20 17:52:44,426:INFO:Uploading results into container
2024-12-20 17:52:44,426:INFO:Uploading model into container now
2024-12-20 17:52:44,426:INFO:_master_model_container: 2
2024-12-20 17:52:44,426:INFO:_display_container: 2
2024-12-20 17:52:44,427:INFO:Lasso(random_state=287)
2024-12-20 17:52:44,427:INFO:create_model() successfully completed......................................
2024-12-20 17:52:44,525:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:44,525:INFO:Creating metrics dataframe
2024-12-20 17:52:44,531:INFO:Initializing Ridge Regression
2024-12-20 17:52:44,531:INFO:Total runtime is 0.16548416217168171 minutes
2024-12-20 17:52:44,533:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:44,533:INFO:Initializing create_model()
2024-12-20 17:52:44,533:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:44,534:INFO:Checking exceptions
2024-12-20 17:52:44,534:INFO:Importing libraries
2024-12-20 17:52:44,534:INFO:Copying training dataset
2024-12-20 17:52:44,537:INFO:Defining folds
2024-12-20 17:52:44,537:INFO:Declaring metric variables
2024-12-20 17:52:44,540:INFO:Importing untrained model
2024-12-20 17:52:44,541:INFO:Ridge Regression Imported successfully
2024-12-20 17:52:44,548:INFO:Starting cross validation
2024-12-20 17:52:44,548:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:44,637:INFO:Calculating mean and std
2024-12-20 17:52:44,637:INFO:Creating metrics dataframe
2024-12-20 17:52:44,637:INFO:Uploading results into container
2024-12-20 17:52:44,637:INFO:Uploading model into container now
2024-12-20 17:52:44,637:INFO:_master_model_container: 3
2024-12-20 17:52:44,637:INFO:_display_container: 2
2024-12-20 17:52:44,637:INFO:Ridge(random_state=287)
2024-12-20 17:52:44,637:INFO:create_model() successfully completed......................................
2024-12-20 17:52:44,731:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:44,731:INFO:Creating metrics dataframe
2024-12-20 17:52:44,731:INFO:Initializing Elastic Net
2024-12-20 17:52:44,731:INFO:Total runtime is 0.16881410678227743 minutes
2024-12-20 17:52:44,740:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:44,740:INFO:Initializing create_model()
2024-12-20 17:52:44,741:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:44,741:INFO:Checking exceptions
2024-12-20 17:52:44,741:INFO:Importing libraries
2024-12-20 17:52:44,741:INFO:Copying training dataset
2024-12-20 17:52:44,741:INFO:Defining folds
2024-12-20 17:52:44,741:INFO:Declaring metric variables
2024-12-20 17:52:44,741:INFO:Importing untrained model
2024-12-20 17:52:44,741:INFO:Elastic Net Imported successfully
2024-12-20 17:52:44,741:INFO:Starting cross validation
2024-12-20 17:52:44,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:44,836:INFO:Calculating mean and std
2024-12-20 17:52:44,836:INFO:Creating metrics dataframe
2024-12-20 17:52:44,836:INFO:Uploading results into container
2024-12-20 17:52:44,836:INFO:Uploading model into container now
2024-12-20 17:52:44,836:INFO:_master_model_container: 4
2024-12-20 17:52:44,836:INFO:_display_container: 2
2024-12-20 17:52:44,836:INFO:ElasticNet(random_state=287)
2024-12-20 17:52:44,836:INFO:create_model() successfully completed......................................
2024-12-20 17:52:44,930:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:44,930:INFO:Creating metrics dataframe
2024-12-20 17:52:44,930:INFO:Initializing Least Angle Regression
2024-12-20 17:52:44,930:INFO:Total runtime is 0.17212640444437663 minutes
2024-12-20 17:52:44,930:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:44,930:INFO:Initializing create_model()
2024-12-20 17:52:44,930:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:44,930:INFO:Checking exceptions
2024-12-20 17:52:44,930:INFO:Importing libraries
2024-12-20 17:52:44,930:INFO:Copying training dataset
2024-12-20 17:52:44,948:INFO:Defining folds
2024-12-20 17:52:44,948:INFO:Declaring metric variables
2024-12-20 17:52:44,949:INFO:Importing untrained model
2024-12-20 17:52:44,949:INFO:Least Angle Regression Imported successfully
2024-12-20 17:52:44,949:INFO:Starting cross validation
2024-12-20 17:52:44,949:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:45,053:INFO:Calculating mean and std
2024-12-20 17:52:45,054:INFO:Creating metrics dataframe
2024-12-20 17:52:45,055:INFO:Uploading results into container
2024-12-20 17:52:45,055:INFO:Uploading model into container now
2024-12-20 17:52:45,056:INFO:_master_model_container: 5
2024-12-20 17:52:45,056:INFO:_display_container: 2
2024-12-20 17:52:45,056:INFO:Lars(random_state=287)
2024-12-20 17:52:45,056:INFO:create_model() successfully completed......................................
2024-12-20 17:52:45,151:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:45,151:INFO:Creating metrics dataframe
2024-12-20 17:52:45,158:INFO:Initializing Lasso Least Angle Regression
2024-12-20 17:52:45,158:INFO:Total runtime is 0.1759245713551839 minutes
2024-12-20 17:52:45,158:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:45,158:INFO:Initializing create_model()
2024-12-20 17:52:45,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:45,158:INFO:Checking exceptions
2024-12-20 17:52:45,158:INFO:Importing libraries
2024-12-20 17:52:45,158:INFO:Copying training dataset
2024-12-20 17:52:45,165:INFO:Defining folds
2024-12-20 17:52:45,165:INFO:Declaring metric variables
2024-12-20 17:52:45,168:INFO:Importing untrained model
2024-12-20 17:52:45,168:INFO:Lasso Least Angle Regression Imported successfully
2024-12-20 17:52:45,175:INFO:Starting cross validation
2024-12-20 17:52:45,175:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:45,276:INFO:Calculating mean and std
2024-12-20 17:52:45,277:INFO:Creating metrics dataframe
2024-12-20 17:52:45,278:INFO:Uploading results into container
2024-12-20 17:52:45,279:INFO:Uploading model into container now
2024-12-20 17:52:45,279:INFO:_master_model_container: 6
2024-12-20 17:52:45,279:INFO:_display_container: 2
2024-12-20 17:52:45,280:INFO:LassoLars(random_state=287)
2024-12-20 17:52:45,280:INFO:create_model() successfully completed......................................
2024-12-20 17:52:45,373:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:45,373:INFO:Creating metrics dataframe
2024-12-20 17:52:45,380:INFO:Initializing Orthogonal Matching Pursuit
2024-12-20 17:52:45,380:INFO:Total runtime is 0.17962663173675536 minutes
2024-12-20 17:52:45,386:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:45,386:INFO:Initializing create_model()
2024-12-20 17:52:45,386:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:45,386:INFO:Checking exceptions
2024-12-20 17:52:45,387:INFO:Importing libraries
2024-12-20 17:52:45,387:INFO:Copying training dataset
2024-12-20 17:52:45,387:INFO:Defining folds
2024-12-20 17:52:45,387:INFO:Declaring metric variables
2024-12-20 17:52:45,394:INFO:Importing untrained model
2024-12-20 17:52:45,396:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-20 17:52:45,404:INFO:Starting cross validation
2024-12-20 17:52:45,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:45,505:INFO:Calculating mean and std
2024-12-20 17:52:45,505:INFO:Creating metrics dataframe
2024-12-20 17:52:45,505:INFO:Uploading results into container
2024-12-20 17:52:45,505:INFO:Uploading model into container now
2024-12-20 17:52:45,505:INFO:_master_model_container: 7
2024-12-20 17:52:45,505:INFO:_display_container: 2
2024-12-20 17:52:45,505:INFO:OrthogonalMatchingPursuit()
2024-12-20 17:52:45,505:INFO:create_model() successfully completed......................................
2024-12-20 17:52:45,609:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:45,609:INFO:Creating metrics dataframe
2024-12-20 17:52:45,619:INFO:Initializing Bayesian Ridge
2024-12-20 17:52:45,620:INFO:Total runtime is 0.18362458944320678 minutes
2024-12-20 17:52:45,620:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:45,620:INFO:Initializing create_model()
2024-12-20 17:52:45,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:45,620:INFO:Checking exceptions
2024-12-20 17:52:45,620:INFO:Importing libraries
2024-12-20 17:52:45,620:INFO:Copying training dataset
2024-12-20 17:52:45,624:INFO:Defining folds
2024-12-20 17:52:45,624:INFO:Declaring metric variables
2024-12-20 17:52:45,631:INFO:Importing untrained model
2024-12-20 17:52:45,634:INFO:Bayesian Ridge Imported successfully
2024-12-20 17:52:45,639:INFO:Starting cross validation
2024-12-20 17:52:45,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:45,740:INFO:Calculating mean and std
2024-12-20 17:52:45,741:INFO:Creating metrics dataframe
2024-12-20 17:52:45,741:INFO:Uploading results into container
2024-12-20 17:52:45,741:INFO:Uploading model into container now
2024-12-20 17:52:45,741:INFO:_master_model_container: 8
2024-12-20 17:52:45,741:INFO:_display_container: 2
2024-12-20 17:52:45,741:INFO:BayesianRidge()
2024-12-20 17:52:45,741:INFO:create_model() successfully completed......................................
2024-12-20 17:52:45,845:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:45,845:INFO:Creating metrics dataframe
2024-12-20 17:52:45,853:INFO:Initializing Passive Aggressive Regressor
2024-12-20 17:52:45,853:INFO:Total runtime is 0.18750956058502197 minutes
2024-12-20 17:52:45,853:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:45,853:INFO:Initializing create_model()
2024-12-20 17:52:45,853:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:45,853:INFO:Checking exceptions
2024-12-20 17:52:45,858:INFO:Importing libraries
2024-12-20 17:52:45,858:INFO:Copying training dataset
2024-12-20 17:52:45,865:INFO:Defining folds
2024-12-20 17:52:45,865:INFO:Declaring metric variables
2024-12-20 17:52:45,868:INFO:Importing untrained model
2024-12-20 17:52:45,873:INFO:Passive Aggressive Regressor Imported successfully
2024-12-20 17:52:45,881:INFO:Starting cross validation
2024-12-20 17:52:45,882:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:45,979:INFO:Calculating mean and std
2024-12-20 17:52:45,980:INFO:Creating metrics dataframe
2024-12-20 17:52:45,981:INFO:Uploading results into container
2024-12-20 17:52:45,982:INFO:Uploading model into container now
2024-12-20 17:52:45,982:INFO:_master_model_container: 9
2024-12-20 17:52:45,982:INFO:_display_container: 2
2024-12-20 17:52:45,982:INFO:PassiveAggressiveRegressor(random_state=287)
2024-12-20 17:52:45,983:INFO:create_model() successfully completed......................................
2024-12-20 17:52:46,072:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:46,073:INFO:Creating metrics dataframe
2024-12-20 17:52:46,079:INFO:Initializing Huber Regressor
2024-12-20 17:52:46,079:INFO:Total runtime is 0.19127719004948934 minutes
2024-12-20 17:52:46,081:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:46,082:INFO:Initializing create_model()
2024-12-20 17:52:46,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:46,082:INFO:Checking exceptions
2024-12-20 17:52:46,082:INFO:Importing libraries
2024-12-20 17:52:46,082:INFO:Copying training dataset
2024-12-20 17:52:46,086:INFO:Defining folds
2024-12-20 17:52:46,086:INFO:Declaring metric variables
2024-12-20 17:52:46,088:INFO:Importing untrained model
2024-12-20 17:52:46,089:INFO:Huber Regressor Imported successfully
2024-12-20 17:52:46,095:INFO:Starting cross validation
2024-12-20 17:52:46,095:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:46,194:INFO:Calculating mean and std
2024-12-20 17:52:46,195:INFO:Creating metrics dataframe
2024-12-20 17:52:46,196:INFO:Uploading results into container
2024-12-20 17:52:46,197:INFO:Uploading model into container now
2024-12-20 17:52:46,197:INFO:_master_model_container: 10
2024-12-20 17:52:46,197:INFO:_display_container: 2
2024-12-20 17:52:46,198:INFO:HuberRegressor()
2024-12-20 17:52:46,198:INFO:create_model() successfully completed......................................
2024-12-20 17:52:46,276:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:46,276:INFO:Creating metrics dataframe
2024-12-20 17:52:46,292:INFO:Initializing K Neighbors Regressor
2024-12-20 17:52:46,292:INFO:Total runtime is 0.19483185211817425 minutes
2024-12-20 17:52:46,292:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:46,292:INFO:Initializing create_model()
2024-12-20 17:52:46,292:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:46,292:INFO:Checking exceptions
2024-12-20 17:52:46,292:INFO:Importing libraries
2024-12-20 17:52:46,292:INFO:Copying training dataset
2024-12-20 17:52:46,303:INFO:Defining folds
2024-12-20 17:52:46,303:INFO:Declaring metric variables
2024-12-20 17:52:46,303:INFO:Importing untrained model
2024-12-20 17:52:46,303:INFO:K Neighbors Regressor Imported successfully
2024-12-20 17:52:46,303:INFO:Starting cross validation
2024-12-20 17:52:46,303:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:46,407:INFO:Calculating mean and std
2024-12-20 17:52:46,407:INFO:Creating metrics dataframe
2024-12-20 17:52:46,407:INFO:Uploading results into container
2024-12-20 17:52:46,407:INFO:Uploading model into container now
2024-12-20 17:52:46,407:INFO:_master_model_container: 11
2024-12-20 17:52:46,407:INFO:_display_container: 2
2024-12-20 17:52:46,407:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-20 17:52:46,407:INFO:create_model() successfully completed......................................
2024-12-20 17:52:46,497:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:46,497:INFO:Creating metrics dataframe
2024-12-20 17:52:46,513:INFO:Initializing Decision Tree Regressor
2024-12-20 17:52:46,513:INFO:Total runtime is 0.19851104021072388 minutes
2024-12-20 17:52:46,513:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:46,513:INFO:Initializing create_model()
2024-12-20 17:52:46,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:46,513:INFO:Checking exceptions
2024-12-20 17:52:46,513:INFO:Importing libraries
2024-12-20 17:52:46,513:INFO:Copying training dataset
2024-12-20 17:52:46,526:INFO:Defining folds
2024-12-20 17:52:46,526:INFO:Declaring metric variables
2024-12-20 17:52:46,528:INFO:Importing untrained model
2024-12-20 17:52:46,528:INFO:Decision Tree Regressor Imported successfully
2024-12-20 17:52:46,532:INFO:Starting cross validation
2024-12-20 17:52:46,532:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:46,630:INFO:Calculating mean and std
2024-12-20 17:52:46,630:INFO:Creating metrics dataframe
2024-12-20 17:52:46,630:INFO:Uploading results into container
2024-12-20 17:52:46,630:INFO:Uploading model into container now
2024-12-20 17:52:46,630:INFO:_master_model_container: 12
2024-12-20 17:52:46,630:INFO:_display_container: 2
2024-12-20 17:52:46,630:INFO:DecisionTreeRegressor(random_state=287)
2024-12-20 17:52:46,630:INFO:create_model() successfully completed......................................
2024-12-20 17:52:46,724:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:46,724:INFO:Creating metrics dataframe
2024-12-20 17:52:46,724:INFO:Initializing Random Forest Regressor
2024-12-20 17:52:46,724:INFO:Total runtime is 0.2020306905110677 minutes
2024-12-20 17:52:46,724:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:46,724:INFO:Initializing create_model()
2024-12-20 17:52:46,724:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:46,724:INFO:Checking exceptions
2024-12-20 17:52:46,724:INFO:Importing libraries
2024-12-20 17:52:46,724:INFO:Copying training dataset
2024-12-20 17:52:46,738:INFO:Defining folds
2024-12-20 17:52:46,738:INFO:Declaring metric variables
2024-12-20 17:52:46,741:INFO:Importing untrained model
2024-12-20 17:52:46,741:INFO:Random Forest Regressor Imported successfully
2024-12-20 17:52:46,741:INFO:Starting cross validation
2024-12-20 17:52:46,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:47,331:INFO:Calculating mean and std
2024-12-20 17:52:47,331:INFO:Creating metrics dataframe
2024-12-20 17:52:47,331:INFO:Uploading results into container
2024-12-20 17:52:47,331:INFO:Uploading model into container now
2024-12-20 17:52:47,331:INFO:_master_model_container: 13
2024-12-20 17:52:47,331:INFO:_display_container: 2
2024-12-20 17:52:47,331:INFO:RandomForestRegressor(n_jobs=-1, random_state=287)
2024-12-20 17:52:47,331:INFO:create_model() successfully completed......................................
2024-12-20 17:52:47,428:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:47,428:INFO:Creating metrics dataframe
2024-12-20 17:52:47,435:INFO:Initializing Extra Trees Regressor
2024-12-20 17:52:47,435:INFO:Total runtime is 0.2138785441716512 minutes
2024-12-20 17:52:47,442:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:47,442:INFO:Initializing create_model()
2024-12-20 17:52:47,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:47,442:INFO:Checking exceptions
2024-12-20 17:52:47,442:INFO:Importing libraries
2024-12-20 17:52:47,442:INFO:Copying training dataset
2024-12-20 17:52:47,442:INFO:Defining folds
2024-12-20 17:52:47,449:INFO:Declaring metric variables
2024-12-20 17:52:47,451:INFO:Importing untrained model
2024-12-20 17:52:47,451:INFO:Extra Trees Regressor Imported successfully
2024-12-20 17:52:47,458:INFO:Starting cross validation
2024-12-20 17:52:47,458:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:47,814:INFO:Calculating mean and std
2024-12-20 17:52:47,814:INFO:Creating metrics dataframe
2024-12-20 17:52:47,814:INFO:Uploading results into container
2024-12-20 17:52:47,814:INFO:Uploading model into container now
2024-12-20 17:52:47,814:INFO:_master_model_container: 14
2024-12-20 17:52:47,814:INFO:_display_container: 2
2024-12-20 17:52:47,814:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=287)
2024-12-20 17:52:47,814:INFO:create_model() successfully completed......................................
2024-12-20 17:52:47,908:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:47,908:INFO:Creating metrics dataframe
2024-12-20 17:52:47,908:INFO:Initializing AdaBoost Regressor
2024-12-20 17:52:47,908:INFO:Total runtime is 0.2217651605606079 minutes
2024-12-20 17:52:47,908:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:47,908:INFO:Initializing create_model()
2024-12-20 17:52:47,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:47,908:INFO:Checking exceptions
2024-12-20 17:52:47,908:INFO:Importing libraries
2024-12-20 17:52:47,908:INFO:Copying training dataset
2024-12-20 17:52:47,927:INFO:Defining folds
2024-12-20 17:52:47,927:INFO:Declaring metric variables
2024-12-20 17:52:47,928:INFO:Importing untrained model
2024-12-20 17:52:47,928:INFO:AdaBoost Regressor Imported successfully
2024-12-20 17:52:47,928:INFO:Starting cross validation
2024-12-20 17:52:47,928:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:48,167:INFO:Calculating mean and std
2024-12-20 17:52:48,167:INFO:Creating metrics dataframe
2024-12-20 17:52:48,167:INFO:Uploading results into container
2024-12-20 17:52:48,167:INFO:Uploading model into container now
2024-12-20 17:52:48,167:INFO:_master_model_container: 15
2024-12-20 17:52:48,167:INFO:_display_container: 2
2024-12-20 17:52:48,167:INFO:AdaBoostRegressor(random_state=287)
2024-12-20 17:52:48,167:INFO:create_model() successfully completed......................................
2024-12-20 17:52:48,261:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:48,261:INFO:Creating metrics dataframe
2024-12-20 17:52:48,276:INFO:Initializing Gradient Boosting Regressor
2024-12-20 17:52:48,276:INFO:Total runtime is 0.22789655526479086 minutes
2024-12-20 17:52:48,276:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:48,276:INFO:Initializing create_model()
2024-12-20 17:52:48,276:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:48,276:INFO:Checking exceptions
2024-12-20 17:52:48,276:INFO:Importing libraries
2024-12-20 17:52:48,276:INFO:Copying training dataset
2024-12-20 17:52:48,283:INFO:Defining folds
2024-12-20 17:52:48,283:INFO:Declaring metric variables
2024-12-20 17:52:48,283:INFO:Importing untrained model
2024-12-20 17:52:48,283:INFO:Gradient Boosting Regressor Imported successfully
2024-12-20 17:52:48,283:INFO:Starting cross validation
2024-12-20 17:52:48,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:48,643:INFO:Calculating mean and std
2024-12-20 17:52:48,643:INFO:Creating metrics dataframe
2024-12-20 17:52:48,643:INFO:Uploading results into container
2024-12-20 17:52:48,643:INFO:Uploading model into container now
2024-12-20 17:52:48,643:INFO:_master_model_container: 16
2024-12-20 17:52:48,643:INFO:_display_container: 2
2024-12-20 17:52:48,643:INFO:GradientBoostingRegressor(random_state=287)
2024-12-20 17:52:48,643:INFO:create_model() successfully completed......................................
2024-12-20 17:52:48,736:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:48,736:INFO:Creating metrics dataframe
2024-12-20 17:52:48,736:INFO:Initializing Light Gradient Boosting Machine
2024-12-20 17:52:48,736:INFO:Total runtime is 0.23556617101033528 minutes
2024-12-20 17:52:48,736:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:48,736:INFO:Initializing create_model()
2024-12-20 17:52:48,736:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:48,736:INFO:Checking exceptions
2024-12-20 17:52:48,736:INFO:Importing libraries
2024-12-20 17:52:48,736:INFO:Copying training dataset
2024-12-20 17:52:48,753:INFO:Defining folds
2024-12-20 17:52:48,753:INFO:Declaring metric variables
2024-12-20 17:52:48,755:INFO:Importing untrained model
2024-12-20 17:52:48,755:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-20 17:52:48,755:INFO:Starting cross validation
2024-12-20 17:52:48,755:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:49,393:INFO:Calculating mean and std
2024-12-20 17:52:49,400:INFO:Creating metrics dataframe
2024-12-20 17:52:49,400:INFO:Uploading results into container
2024-12-20 17:52:49,400:INFO:Uploading model into container now
2024-12-20 17:52:49,400:INFO:_master_model_container: 17
2024-12-20 17:52:49,400:INFO:_display_container: 2
2024-12-20 17:52:49,400:INFO:LGBMRegressor(n_jobs=-1, random_state=287)
2024-12-20 17:52:49,400:INFO:create_model() successfully completed......................................
2024-12-20 17:52:49,514:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:49,514:INFO:Creating metrics dataframe
2024-12-20 17:52:49,530:INFO:Initializing Dummy Regressor
2024-12-20 17:52:49,530:INFO:Total runtime is 0.24878984292348225 minutes
2024-12-20 17:52:49,530:INFO:SubProcess create_model() called ==================================
2024-12-20 17:52:49,530:INFO:Initializing create_model()
2024-12-20 17:52:49,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:49,530:INFO:Checking exceptions
2024-12-20 17:52:49,530:INFO:Importing libraries
2024-12-20 17:52:49,530:INFO:Copying training dataset
2024-12-20 17:52:49,540:INFO:Defining folds
2024-12-20 17:52:49,540:INFO:Declaring metric variables
2024-12-20 17:52:49,540:INFO:Importing untrained model
2024-12-20 17:52:49,540:INFO:Dummy Regressor Imported successfully
2024-12-20 17:52:49,540:INFO:Starting cross validation
2024-12-20 17:52:49,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:52:49,637:INFO:Calculating mean and std
2024-12-20 17:52:49,637:INFO:Creating metrics dataframe
2024-12-20 17:52:49,653:INFO:Uploading results into container
2024-12-20 17:52:49,653:INFO:Uploading model into container now
2024-12-20 17:52:49,653:INFO:_master_model_container: 18
2024-12-20 17:52:49,653:INFO:_display_container: 2
2024-12-20 17:52:49,653:INFO:DummyRegressor()
2024-12-20 17:52:49,653:INFO:create_model() successfully completed......................................
2024-12-20 17:52:49,747:INFO:SubProcess create_model() end ==================================
2024-12-20 17:52:49,747:INFO:Creating metrics dataframe
2024-12-20 17:52:49,761:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-20 17:52:49,767:INFO:Initializing create_model()
2024-12-20 17:52:49,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:52:49,767:INFO:Checking exceptions
2024-12-20 17:52:49,767:INFO:Importing libraries
2024-12-20 17:52:49,767:INFO:Copying training dataset
2024-12-20 17:52:49,767:INFO:Defining folds
2024-12-20 17:52:49,767:INFO:Declaring metric variables
2024-12-20 17:52:49,767:INFO:Importing untrained model
2024-12-20 17:52:49,767:INFO:Declaring custom model
2024-12-20 17:52:49,767:INFO:Bayesian Ridge Imported successfully
2024-12-20 17:52:49,767:INFO:Cross validation set to False
2024-12-20 17:52:49,767:INFO:Fitting Model
2024-12-20 17:52:49,819:INFO:BayesianRidge()
2024-12-20 17:52:49,819:INFO:create_model() successfully completed......................................
2024-12-20 17:52:49,936:INFO:_master_model_container: 18
2024-12-20 17:52:49,936:INFO:_display_container: 2
2024-12-20 17:52:49,936:INFO:BayesianRidge()
2024-12-20 17:52:49,936:INFO:compare_models() successfully completed......................................
2024-12-20 17:57:15,306:INFO:gpu_param set to False
2024-12-20 17:57:15,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:57:15,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:57:15,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:57:15,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 17:59:29,019:INFO:Initializing compare_models()
2024-12-20 17:59:29,019:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-20 17:59:29,019:INFO:Checking exceptions
2024-12-20 17:59:29,021:INFO:Preparing display monitor
2024-12-20 17:59:29,040:INFO:Initializing Linear Regression
2024-12-20 17:59:29,040:INFO:Total runtime is 0.0 minutes
2024-12-20 17:59:29,040:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:29,040:INFO:Initializing create_model()
2024-12-20 17:59:29,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:29,040:INFO:Checking exceptions
2024-12-20 17:59:29,040:INFO:Importing libraries
2024-12-20 17:59:29,040:INFO:Copying training dataset
2024-12-20 17:59:29,050:INFO:Defining folds
2024-12-20 17:59:29,050:INFO:Declaring metric variables
2024-12-20 17:59:29,053:INFO:Importing untrained model
2024-12-20 17:59:29,055:INFO:Linear Regression Imported successfully
2024-12-20 17:59:29,062:INFO:Starting cross validation
2024-12-20 17:59:29,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:29,318:INFO:Calculating mean and std
2024-12-20 17:59:29,318:INFO:Creating metrics dataframe
2024-12-20 17:59:29,318:INFO:Uploading results into container
2024-12-20 17:59:29,318:INFO:Uploading model into container now
2024-12-20 17:59:29,318:INFO:_master_model_container: 19
2024-12-20 17:59:29,318:INFO:_display_container: 3
2024-12-20 17:59:29,318:INFO:LinearRegression(n_jobs=-1)
2024-12-20 17:59:29,318:INFO:create_model() successfully completed......................................
2024-12-20 17:59:29,489:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:29,489:INFO:Creating metrics dataframe
2024-12-20 17:59:29,489:INFO:Initializing Lasso Regression
2024-12-20 17:59:29,489:INFO:Total runtime is 0.007479719320933024 minutes
2024-12-20 17:59:29,489:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:29,489:INFO:Initializing create_model()
2024-12-20 17:59:29,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:29,489:INFO:Checking exceptions
2024-12-20 17:59:29,489:INFO:Importing libraries
2024-12-20 17:59:29,504:INFO:Copying training dataset
2024-12-20 17:59:29,505:INFO:Defining folds
2024-12-20 17:59:29,505:INFO:Declaring metric variables
2024-12-20 17:59:29,505:INFO:Importing untrained model
2024-12-20 17:59:29,505:INFO:Lasso Regression Imported successfully
2024-12-20 17:59:29,521:INFO:Starting cross validation
2024-12-20 17:59:29,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:29,740:INFO:Calculating mean and std
2024-12-20 17:59:29,740:INFO:Creating metrics dataframe
2024-12-20 17:59:29,740:INFO:Uploading results into container
2024-12-20 17:59:29,740:INFO:Uploading model into container now
2024-12-20 17:59:29,740:INFO:_master_model_container: 20
2024-12-20 17:59:29,740:INFO:_display_container: 3
2024-12-20 17:59:29,740:INFO:Lasso(random_state=287)
2024-12-20 17:59:29,740:INFO:create_model() successfully completed......................................
2024-12-20 17:59:29,860:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:29,860:INFO:Creating metrics dataframe
2024-12-20 17:59:29,860:INFO:Initializing Ridge Regression
2024-12-20 17:59:29,860:INFO:Total runtime is 0.013660124937693278 minutes
2024-12-20 17:59:29,875:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:29,875:INFO:Initializing create_model()
2024-12-20 17:59:29,875:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:29,875:INFO:Checking exceptions
2024-12-20 17:59:29,875:INFO:Importing libraries
2024-12-20 17:59:29,875:INFO:Copying training dataset
2024-12-20 17:59:29,879:INFO:Defining folds
2024-12-20 17:59:29,879:INFO:Declaring metric variables
2024-12-20 17:59:29,880:INFO:Importing untrained model
2024-12-20 17:59:29,880:INFO:Ridge Regression Imported successfully
2024-12-20 17:59:29,880:INFO:Starting cross validation
2024-12-20 17:59:29,880:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:33,129:INFO:Calculating mean and std
2024-12-20 17:59:33,129:INFO:Creating metrics dataframe
2024-12-20 17:59:33,129:INFO:Uploading results into container
2024-12-20 17:59:33,129:INFO:Uploading model into container now
2024-12-20 17:59:33,129:INFO:_master_model_container: 21
2024-12-20 17:59:33,129:INFO:_display_container: 3
2024-12-20 17:59:33,129:INFO:Ridge(random_state=287)
2024-12-20 17:59:33,129:INFO:create_model() successfully completed......................................
2024-12-20 17:59:33,254:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:33,254:INFO:Creating metrics dataframe
2024-12-20 17:59:33,254:INFO:Initializing Elastic Net
2024-12-20 17:59:33,254:INFO:Total runtime is 0.07023770014444987 minutes
2024-12-20 17:59:33,270:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:33,270:INFO:Initializing create_model()
2024-12-20 17:59:33,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:33,270:INFO:Checking exceptions
2024-12-20 17:59:33,270:INFO:Importing libraries
2024-12-20 17:59:33,270:INFO:Copying training dataset
2024-12-20 17:59:33,276:INFO:Defining folds
2024-12-20 17:59:33,276:INFO:Declaring metric variables
2024-12-20 17:59:33,279:INFO:Importing untrained model
2024-12-20 17:59:33,279:INFO:Elastic Net Imported successfully
2024-12-20 17:59:33,286:INFO:Starting cross validation
2024-12-20 17:59:33,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:36,770:INFO:Calculating mean and std
2024-12-20 17:59:36,770:INFO:Creating metrics dataframe
2024-12-20 17:59:36,770:INFO:Uploading results into container
2024-12-20 17:59:36,770:INFO:Uploading model into container now
2024-12-20 17:59:36,770:INFO:_master_model_container: 22
2024-12-20 17:59:36,770:INFO:_display_container: 3
2024-12-20 17:59:36,770:INFO:ElasticNet(random_state=287)
2024-12-20 17:59:36,770:INFO:create_model() successfully completed......................................
2024-12-20 17:59:36,915:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:36,915:INFO:Creating metrics dataframe
2024-12-20 17:59:36,922:INFO:Initializing Least Angle Regression
2024-12-20 17:59:36,922:INFO:Total runtime is 0.13136787414550782 minutes
2024-12-20 17:59:36,922:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:36,922:INFO:Initializing create_model()
2024-12-20 17:59:36,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:36,922:INFO:Checking exceptions
2024-12-20 17:59:36,922:INFO:Importing libraries
2024-12-20 17:59:36,922:INFO:Copying training dataset
2024-12-20 17:59:36,922:INFO:Defining folds
2024-12-20 17:59:36,929:INFO:Declaring metric variables
2024-12-20 17:59:36,931:INFO:Importing untrained model
2024-12-20 17:59:36,932:INFO:Least Angle Regression Imported successfully
2024-12-20 17:59:36,938:INFO:Starting cross validation
2024-12-20 17:59:36,938:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:37,020:INFO:Calculating mean and std
2024-12-20 17:59:37,020:INFO:Creating metrics dataframe
2024-12-20 17:59:37,035:INFO:Uploading results into container
2024-12-20 17:59:37,035:INFO:Uploading model into container now
2024-12-20 17:59:37,035:INFO:_master_model_container: 23
2024-12-20 17:59:37,035:INFO:_display_container: 3
2024-12-20 17:59:37,035:INFO:Lars(random_state=287)
2024-12-20 17:59:37,035:INFO:create_model() successfully completed......................................
2024-12-20 17:59:37,113:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:37,113:INFO:Creating metrics dataframe
2024-12-20 17:59:37,129:INFO:Initializing Lasso Least Angle Regression
2024-12-20 17:59:37,129:INFO:Total runtime is 0.13481489817301434 minutes
2024-12-20 17:59:37,129:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:37,129:INFO:Initializing create_model()
2024-12-20 17:59:37,129:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:37,129:INFO:Checking exceptions
2024-12-20 17:59:37,129:INFO:Importing libraries
2024-12-20 17:59:37,129:INFO:Copying training dataset
2024-12-20 17:59:37,129:INFO:Defining folds
2024-12-20 17:59:37,129:INFO:Declaring metric variables
2024-12-20 17:59:37,144:INFO:Importing untrained model
2024-12-20 17:59:37,147:INFO:Lasso Least Angle Regression Imported successfully
2024-12-20 17:59:37,153:INFO:Starting cross validation
2024-12-20 17:59:37,153:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:37,242:INFO:Calculating mean and std
2024-12-20 17:59:37,242:INFO:Creating metrics dataframe
2024-12-20 17:59:37,242:INFO:Uploading results into container
2024-12-20 17:59:37,242:INFO:Uploading model into container now
2024-12-20 17:59:37,242:INFO:_master_model_container: 24
2024-12-20 17:59:37,242:INFO:_display_container: 3
2024-12-20 17:59:37,242:INFO:LassoLars(random_state=287)
2024-12-20 17:59:37,242:INFO:create_model() successfully completed......................................
2024-12-20 17:59:37,332:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:37,332:INFO:Creating metrics dataframe
2024-12-20 17:59:37,348:INFO:Initializing Orthogonal Matching Pursuit
2024-12-20 17:59:37,348:INFO:Total runtime is 0.1384616772333781 minutes
2024-12-20 17:59:37,348:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:37,348:INFO:Initializing create_model()
2024-12-20 17:59:37,348:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:37,348:INFO:Checking exceptions
2024-12-20 17:59:37,348:INFO:Importing libraries
2024-12-20 17:59:37,348:INFO:Copying training dataset
2024-12-20 17:59:37,348:INFO:Defining folds
2024-12-20 17:59:37,348:INFO:Declaring metric variables
2024-12-20 17:59:37,361:INFO:Importing untrained model
2024-12-20 17:59:37,361:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-20 17:59:37,368:INFO:Starting cross validation
2024-12-20 17:59:37,368:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:37,456:INFO:Calculating mean and std
2024-12-20 17:59:37,456:INFO:Creating metrics dataframe
2024-12-20 17:59:37,456:INFO:Uploading results into container
2024-12-20 17:59:37,456:INFO:Uploading model into container now
2024-12-20 17:59:37,456:INFO:_master_model_container: 25
2024-12-20 17:59:37,456:INFO:_display_container: 3
2024-12-20 17:59:37,456:INFO:OrthogonalMatchingPursuit()
2024-12-20 17:59:37,456:INFO:create_model() successfully completed......................................
2024-12-20 17:59:37,549:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:37,549:INFO:Creating metrics dataframe
2024-12-20 17:59:37,549:INFO:Initializing Bayesian Ridge
2024-12-20 17:59:37,549:INFO:Total runtime is 0.14181894063949585 minutes
2024-12-20 17:59:37,549:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:37,549:INFO:Initializing create_model()
2024-12-20 17:59:37,549:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:37,549:INFO:Checking exceptions
2024-12-20 17:59:37,549:INFO:Importing libraries
2024-12-20 17:59:37,549:INFO:Copying training dataset
2024-12-20 17:59:37,549:INFO:Defining folds
2024-12-20 17:59:37,549:INFO:Declaring metric variables
2024-12-20 17:59:37,565:INFO:Importing untrained model
2024-12-20 17:59:37,568:INFO:Bayesian Ridge Imported successfully
2024-12-20 17:59:37,570:INFO:Starting cross validation
2024-12-20 17:59:37,574:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:37,658:INFO:Calculating mean and std
2024-12-20 17:59:37,658:INFO:Creating metrics dataframe
2024-12-20 17:59:37,658:INFO:Uploading results into container
2024-12-20 17:59:37,658:INFO:Uploading model into container now
2024-12-20 17:59:37,658:INFO:_master_model_container: 26
2024-12-20 17:59:37,658:INFO:_display_container: 3
2024-12-20 17:59:37,658:INFO:BayesianRidge()
2024-12-20 17:59:37,658:INFO:create_model() successfully completed......................................
2024-12-20 17:59:37,763:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:37,763:INFO:Creating metrics dataframe
2024-12-20 17:59:37,769:INFO:Initializing Passive Aggressive Regressor
2024-12-20 17:59:37,769:INFO:Total runtime is 0.14548741579055785 minutes
2024-12-20 17:59:37,769:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:37,769:INFO:Initializing create_model()
2024-12-20 17:59:37,769:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:37,769:INFO:Checking exceptions
2024-12-20 17:59:37,769:INFO:Importing libraries
2024-12-20 17:59:37,769:INFO:Copying training dataset
2024-12-20 17:59:37,779:INFO:Defining folds
2024-12-20 17:59:37,779:INFO:Declaring metric variables
2024-12-20 17:59:37,782:INFO:Importing untrained model
2024-12-20 17:59:37,782:INFO:Passive Aggressive Regressor Imported successfully
2024-12-20 17:59:37,790:INFO:Starting cross validation
2024-12-20 17:59:37,791:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:37,888:INFO:Calculating mean and std
2024-12-20 17:59:37,894:INFO:Creating metrics dataframe
2024-12-20 17:59:37,894:INFO:Uploading results into container
2024-12-20 17:59:37,894:INFO:Uploading model into container now
2024-12-20 17:59:37,894:INFO:_master_model_container: 27
2024-12-20 17:59:37,894:INFO:_display_container: 3
2024-12-20 17:59:37,894:INFO:PassiveAggressiveRegressor(random_state=287)
2024-12-20 17:59:37,894:INFO:create_model() successfully completed......................................
2024-12-20 17:59:37,991:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:37,991:INFO:Creating metrics dataframe
2024-12-20 17:59:37,998:INFO:Initializing Huber Regressor
2024-12-20 17:59:37,998:INFO:Total runtime is 0.1493045171101888 minutes
2024-12-20 17:59:37,998:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:37,998:INFO:Initializing create_model()
2024-12-20 17:59:37,998:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:37,998:INFO:Checking exceptions
2024-12-20 17:59:37,998:INFO:Importing libraries
2024-12-20 17:59:37,998:INFO:Copying training dataset
2024-12-20 17:59:38,005:INFO:Defining folds
2024-12-20 17:59:38,005:INFO:Declaring metric variables
2024-12-20 17:59:38,008:INFO:Importing untrained model
2024-12-20 17:59:38,008:INFO:Huber Regressor Imported successfully
2024-12-20 17:59:38,015:INFO:Starting cross validation
2024-12-20 17:59:38,015:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:38,105:INFO:Calculating mean and std
2024-12-20 17:59:38,121:INFO:Creating metrics dataframe
2024-12-20 17:59:38,121:INFO:Uploading results into container
2024-12-20 17:59:38,121:INFO:Uploading model into container now
2024-12-20 17:59:38,121:INFO:_master_model_container: 28
2024-12-20 17:59:38,121:INFO:_display_container: 3
2024-12-20 17:59:38,121:INFO:HuberRegressor()
2024-12-20 17:59:38,121:INFO:create_model() successfully completed......................................
2024-12-20 17:59:38,215:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:38,215:INFO:Creating metrics dataframe
2024-12-20 17:59:38,215:INFO:Initializing K Neighbors Regressor
2024-12-20 17:59:38,215:INFO:Total runtime is 0.15290555953979493 minutes
2024-12-20 17:59:38,230:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:38,230:INFO:Initializing create_model()
2024-12-20 17:59:38,230:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:38,230:INFO:Checking exceptions
2024-12-20 17:59:38,230:INFO:Importing libraries
2024-12-20 17:59:38,230:INFO:Copying training dataset
2024-12-20 17:59:38,235:INFO:Defining folds
2024-12-20 17:59:38,235:INFO:Declaring metric variables
2024-12-20 17:59:38,238:INFO:Importing untrained model
2024-12-20 17:59:38,241:INFO:K Neighbors Regressor Imported successfully
2024-12-20 17:59:38,244:INFO:Starting cross validation
2024-12-20 17:59:38,244:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:38,360:INFO:Calculating mean and std
2024-12-20 17:59:38,360:INFO:Creating metrics dataframe
2024-12-20 17:59:38,360:INFO:Uploading results into container
2024-12-20 17:59:38,360:INFO:Uploading model into container now
2024-12-20 17:59:38,360:INFO:_master_model_container: 29
2024-12-20 17:59:38,360:INFO:_display_container: 3
2024-12-20 17:59:38,360:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-20 17:59:38,360:INFO:create_model() successfully completed......................................
2024-12-20 17:59:38,438:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:38,453:INFO:Creating metrics dataframe
2024-12-20 17:59:38,453:INFO:Initializing Decision Tree Regressor
2024-12-20 17:59:38,453:INFO:Total runtime is 0.15688822666803998 minutes
2024-12-20 17:59:38,453:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:38,453:INFO:Initializing create_model()
2024-12-20 17:59:38,453:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:38,453:INFO:Checking exceptions
2024-12-20 17:59:38,453:INFO:Importing libraries
2024-12-20 17:59:38,453:INFO:Copying training dataset
2024-12-20 17:59:38,453:INFO:Defining folds
2024-12-20 17:59:38,453:INFO:Declaring metric variables
2024-12-20 17:59:38,453:INFO:Importing untrained model
2024-12-20 17:59:38,471:INFO:Decision Tree Regressor Imported successfully
2024-12-20 17:59:38,473:INFO:Starting cross validation
2024-12-20 17:59:38,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:38,567:INFO:Calculating mean and std
2024-12-20 17:59:38,567:INFO:Creating metrics dataframe
2024-12-20 17:59:38,583:INFO:Uploading results into container
2024-12-20 17:59:38,583:INFO:Uploading model into container now
2024-12-20 17:59:38,583:INFO:_master_model_container: 30
2024-12-20 17:59:38,583:INFO:_display_container: 3
2024-12-20 17:59:38,583:INFO:DecisionTreeRegressor(random_state=287)
2024-12-20 17:59:38,583:INFO:create_model() successfully completed......................................
2024-12-20 17:59:38,661:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:38,661:INFO:Creating metrics dataframe
2024-12-20 17:59:38,676:INFO:Initializing Random Forest Regressor
2024-12-20 17:59:38,676:INFO:Total runtime is 0.16060320933659875 minutes
2024-12-20 17:59:38,676:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:38,676:INFO:Initializing create_model()
2024-12-20 17:59:38,676:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:38,676:INFO:Checking exceptions
2024-12-20 17:59:38,676:INFO:Importing libraries
2024-12-20 17:59:38,676:INFO:Copying training dataset
2024-12-20 17:59:38,687:INFO:Defining folds
2024-12-20 17:59:38,687:INFO:Declaring metric variables
2024-12-20 17:59:38,690:INFO:Importing untrained model
2024-12-20 17:59:38,693:INFO:Random Forest Regressor Imported successfully
2024-12-20 17:59:38,694:INFO:Starting cross validation
2024-12-20 17:59:38,694:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:39,283:INFO:Calculating mean and std
2024-12-20 17:59:39,283:INFO:Creating metrics dataframe
2024-12-20 17:59:39,283:INFO:Uploading results into container
2024-12-20 17:59:39,283:INFO:Uploading model into container now
2024-12-20 17:59:39,290:INFO:_master_model_container: 31
2024-12-20 17:59:39,290:INFO:_display_container: 3
2024-12-20 17:59:39,290:INFO:RandomForestRegressor(n_jobs=-1, random_state=287)
2024-12-20 17:59:39,290:INFO:create_model() successfully completed......................................
2024-12-20 17:59:39,377:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:39,377:INFO:Creating metrics dataframe
2024-12-20 17:59:39,393:INFO:Initializing Extra Trees Regressor
2024-12-20 17:59:39,393:INFO:Total runtime is 0.17254132032394412 minutes
2024-12-20 17:59:39,393:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:39,393:INFO:Initializing create_model()
2024-12-20 17:59:39,393:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:39,393:INFO:Checking exceptions
2024-12-20 17:59:39,393:INFO:Importing libraries
2024-12-20 17:59:39,393:INFO:Copying training dataset
2024-12-20 17:59:39,401:INFO:Defining folds
2024-12-20 17:59:39,401:INFO:Declaring metric variables
2024-12-20 17:59:39,404:INFO:Importing untrained model
2024-12-20 17:59:39,408:INFO:Extra Trees Regressor Imported successfully
2024-12-20 17:59:39,416:INFO:Starting cross validation
2024-12-20 17:59:39,418:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:39,765:INFO:Calculating mean and std
2024-12-20 17:59:39,765:INFO:Creating metrics dataframe
2024-12-20 17:59:39,765:INFO:Uploading results into container
2024-12-20 17:59:39,765:INFO:Uploading model into container now
2024-12-20 17:59:39,765:INFO:_master_model_container: 32
2024-12-20 17:59:39,765:INFO:_display_container: 3
2024-12-20 17:59:39,765:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=287)
2024-12-20 17:59:39,765:INFO:create_model() successfully completed......................................
2024-12-20 17:59:39,865:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:39,865:INFO:Creating metrics dataframe
2024-12-20 17:59:39,865:INFO:Initializing AdaBoost Regressor
2024-12-20 17:59:39,865:INFO:Total runtime is 0.1804133494695028 minutes
2024-12-20 17:59:39,865:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:39,865:INFO:Initializing create_model()
2024-12-20 17:59:39,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:39,865:INFO:Checking exceptions
2024-12-20 17:59:39,865:INFO:Importing libraries
2024-12-20 17:59:39,865:INFO:Copying training dataset
2024-12-20 17:59:39,865:INFO:Defining folds
2024-12-20 17:59:39,865:INFO:Declaring metric variables
2024-12-20 17:59:39,881:INFO:Importing untrained model
2024-12-20 17:59:39,883:INFO:AdaBoost Regressor Imported successfully
2024-12-20 17:59:39,890:INFO:Starting cross validation
2024-12-20 17:59:39,890:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:40,132:INFO:Calculating mean and std
2024-12-20 17:59:40,132:INFO:Creating metrics dataframe
2024-12-20 17:59:40,132:INFO:Uploading results into container
2024-12-20 17:59:40,132:INFO:Uploading model into container now
2024-12-20 17:59:40,132:INFO:_master_model_container: 33
2024-12-20 17:59:40,132:INFO:_display_container: 3
2024-12-20 17:59:40,132:INFO:AdaBoostRegressor(random_state=287)
2024-12-20 17:59:40,132:INFO:create_model() successfully completed......................................
2024-12-20 17:59:40,237:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:40,237:INFO:Creating metrics dataframe
2024-12-20 17:59:40,237:INFO:Initializing Gradient Boosting Regressor
2024-12-20 17:59:40,237:INFO:Total runtime is 0.18660604159037275 minutes
2024-12-20 17:59:40,237:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:40,237:INFO:Initializing create_model()
2024-12-20 17:59:40,237:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:40,237:INFO:Checking exceptions
2024-12-20 17:59:40,237:INFO:Importing libraries
2024-12-20 17:59:40,237:INFO:Copying training dataset
2024-12-20 17:59:40,252:INFO:Defining folds
2024-12-20 17:59:40,252:INFO:Declaring metric variables
2024-12-20 17:59:40,256:INFO:Importing untrained model
2024-12-20 17:59:40,258:INFO:Gradient Boosting Regressor Imported successfully
2024-12-20 17:59:40,264:INFO:Starting cross validation
2024-12-20 17:59:40,264:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:40,613:INFO:Calculating mean and std
2024-12-20 17:59:40,613:INFO:Creating metrics dataframe
2024-12-20 17:59:40,613:INFO:Uploading results into container
2024-12-20 17:59:40,613:INFO:Uploading model into container now
2024-12-20 17:59:40,613:INFO:_master_model_container: 34
2024-12-20 17:59:40,613:INFO:_display_container: 3
2024-12-20 17:59:40,613:INFO:GradientBoostingRegressor(random_state=287)
2024-12-20 17:59:40,613:INFO:create_model() successfully completed......................................
2024-12-20 17:59:40,707:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:40,707:INFO:Creating metrics dataframe
2024-12-20 17:59:40,707:INFO:Initializing Light Gradient Boosting Machine
2024-12-20 17:59:40,707:INFO:Total runtime is 0.19444270133972172 minutes
2024-12-20 17:59:40,707:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:40,707:INFO:Initializing create_model()
2024-12-20 17:59:40,707:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:40,707:INFO:Checking exceptions
2024-12-20 17:59:40,707:INFO:Importing libraries
2024-12-20 17:59:40,707:INFO:Copying training dataset
2024-12-20 17:59:40,722:INFO:Defining folds
2024-12-20 17:59:40,722:INFO:Declaring metric variables
2024-12-20 17:59:40,724:INFO:Importing untrained model
2024-12-20 17:59:40,727:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-20 17:59:40,729:INFO:Starting cross validation
2024-12-20 17:59:40,734:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:41,307:INFO:Calculating mean and std
2024-12-20 17:59:41,307:INFO:Creating metrics dataframe
2024-12-20 17:59:41,312:INFO:Uploading results into container
2024-12-20 17:59:41,312:INFO:Uploading model into container now
2024-12-20 17:59:41,312:INFO:_master_model_container: 35
2024-12-20 17:59:41,312:INFO:_display_container: 3
2024-12-20 17:59:41,312:INFO:LGBMRegressor(n_jobs=-1, random_state=287)
2024-12-20 17:59:41,312:INFO:create_model() successfully completed......................................
2024-12-20 17:59:41,429:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:41,429:INFO:Creating metrics dataframe
2024-12-20 17:59:41,436:INFO:Initializing Dummy Regressor
2024-12-20 17:59:41,436:INFO:Total runtime is 0.20659689903259282 minutes
2024-12-20 17:59:41,443:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:41,443:INFO:Initializing create_model()
2024-12-20 17:59:41,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F01BF210>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:41,443:INFO:Checking exceptions
2024-12-20 17:59:41,443:INFO:Importing libraries
2024-12-20 17:59:41,443:INFO:Copying training dataset
2024-12-20 17:59:41,443:INFO:Defining folds
2024-12-20 17:59:41,443:INFO:Declaring metric variables
2024-12-20 17:59:41,450:INFO:Importing untrained model
2024-12-20 17:59:41,452:INFO:Dummy Regressor Imported successfully
2024-12-20 17:59:41,459:INFO:Starting cross validation
2024-12-20 17:59:41,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:41,542:INFO:Calculating mean and std
2024-12-20 17:59:41,542:INFO:Creating metrics dataframe
2024-12-20 17:59:41,542:INFO:Uploading results into container
2024-12-20 17:59:41,542:INFO:Uploading model into container now
2024-12-20 17:59:41,542:INFO:_master_model_container: 36
2024-12-20 17:59:41,542:INFO:_display_container: 3
2024-12-20 17:59:41,542:INFO:DummyRegressor()
2024-12-20 17:59:41,542:INFO:create_model() successfully completed......................................
2024-12-20 17:59:41,644:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:41,644:INFO:Creating metrics dataframe
2024-12-20 17:59:41,644:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-20 17:59:41,658:INFO:Initializing create_model()
2024-12-20 17:59:41,658:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:41,659:INFO:Checking exceptions
2024-12-20 17:59:41,660:INFO:Importing libraries
2024-12-20 17:59:41,660:INFO:Copying training dataset
2024-12-20 17:59:41,663:INFO:Defining folds
2024-12-20 17:59:41,663:INFO:Declaring metric variables
2024-12-20 17:59:41,664:INFO:Importing untrained model
2024-12-20 17:59:41,664:INFO:Declaring custom model
2024-12-20 17:59:41,664:INFO:Bayesian Ridge Imported successfully
2024-12-20 17:59:41,665:INFO:Cross validation set to False
2024-12-20 17:59:41,665:INFO:Fitting Model
2024-12-20 17:59:41,686:INFO:BayesianRidge()
2024-12-20 17:59:41,686:INFO:create_model() successfully completed......................................
2024-12-20 17:59:41,818:INFO:_master_model_container: 36
2024-12-20 17:59:41,819:INFO:_display_container: 3
2024-12-20 17:59:41,819:INFO:BayesianRidge()
2024-12-20 17:59:41,819:INFO:compare_models() successfully completed......................................
2024-12-20 17:59:59,034:INFO:Initializing compare_models()
2024-12-20 17:59:59,034:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-20 17:59:59,035:INFO:Checking exceptions
2024-12-20 17:59:59,036:INFO:Preparing display monitor
2024-12-20 17:59:59,055:INFO:Initializing Linear Regression
2024-12-20 17:59:59,055:INFO:Total runtime is 0.0 minutes
2024-12-20 17:59:59,055:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:59,055:INFO:Initializing create_model()
2024-12-20 17:59:59,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:59,055:INFO:Checking exceptions
2024-12-20 17:59:59,055:INFO:Importing libraries
2024-12-20 17:59:59,055:INFO:Copying training dataset
2024-12-20 17:59:59,063:INFO:Defining folds
2024-12-20 17:59:59,063:INFO:Declaring metric variables
2024-12-20 17:59:59,064:INFO:Importing untrained model
2024-12-20 17:59:59,069:INFO:Linear Regression Imported successfully
2024-12-20 17:59:59,075:INFO:Starting cross validation
2024-12-20 17:59:59,075:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:59,158:INFO:Calculating mean and std
2024-12-20 17:59:59,158:INFO:Creating metrics dataframe
2024-12-20 17:59:59,158:INFO:Uploading results into container
2024-12-20 17:59:59,158:INFO:Uploading model into container now
2024-12-20 17:59:59,158:INFO:_master_model_container: 37
2024-12-20 17:59:59,158:INFO:_display_container: 4
2024-12-20 17:59:59,158:INFO:LinearRegression(n_jobs=-1)
2024-12-20 17:59:59,158:INFO:create_model() successfully completed......................................
2024-12-20 17:59:59,252:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:59,252:INFO:Creating metrics dataframe
2024-12-20 17:59:59,252:INFO:Initializing Lasso Regression
2024-12-20 17:59:59,252:INFO:Total runtime is 0.003291459878285726 minutes
2024-12-20 17:59:59,268:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:59,268:INFO:Initializing create_model()
2024-12-20 17:59:59,268:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:59,268:INFO:Checking exceptions
2024-12-20 17:59:59,268:INFO:Importing libraries
2024-12-20 17:59:59,268:INFO:Copying training dataset
2024-12-20 17:59:59,271:INFO:Defining folds
2024-12-20 17:59:59,271:INFO:Declaring metric variables
2024-12-20 17:59:59,273:INFO:Importing untrained model
2024-12-20 17:59:59,273:INFO:Lasso Regression Imported successfully
2024-12-20 17:59:59,273:INFO:Starting cross validation
2024-12-20 17:59:59,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:59,369:INFO:Calculating mean and std
2024-12-20 17:59:59,369:INFO:Creating metrics dataframe
2024-12-20 17:59:59,369:INFO:Uploading results into container
2024-12-20 17:59:59,369:INFO:Uploading model into container now
2024-12-20 17:59:59,369:INFO:_master_model_container: 38
2024-12-20 17:59:59,369:INFO:_display_container: 4
2024-12-20 17:59:59,369:INFO:Lasso(random_state=287)
2024-12-20 17:59:59,369:INFO:create_model() successfully completed......................................
2024-12-20 17:59:59,463:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:59,463:INFO:Creating metrics dataframe
2024-12-20 17:59:59,463:INFO:Initializing Ridge Regression
2024-12-20 17:59:59,463:INFO:Total runtime is 0.006805094083150227 minutes
2024-12-20 17:59:59,463:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:59,463:INFO:Initializing create_model()
2024-12-20 17:59:59,463:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:59,463:INFO:Checking exceptions
2024-12-20 17:59:59,463:INFO:Importing libraries
2024-12-20 17:59:59,463:INFO:Copying training dataset
2024-12-20 17:59:59,476:INFO:Defining folds
2024-12-20 17:59:59,476:INFO:Declaring metric variables
2024-12-20 17:59:59,477:INFO:Importing untrained model
2024-12-20 17:59:59,477:INFO:Ridge Regression Imported successfully
2024-12-20 17:59:59,477:INFO:Starting cross validation
2024-12-20 17:59:59,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:59,579:INFO:Calculating mean and std
2024-12-20 17:59:59,579:INFO:Creating metrics dataframe
2024-12-20 17:59:59,579:INFO:Uploading results into container
2024-12-20 17:59:59,579:INFO:Uploading model into container now
2024-12-20 17:59:59,579:INFO:_master_model_container: 39
2024-12-20 17:59:59,579:INFO:_display_container: 4
2024-12-20 17:59:59,579:INFO:Ridge(random_state=287)
2024-12-20 17:59:59,579:INFO:create_model() successfully completed......................................
2024-12-20 17:59:59,673:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:59,673:INFO:Creating metrics dataframe
2024-12-20 17:59:59,673:INFO:Initializing Elastic Net
2024-12-20 17:59:59,673:INFO:Total runtime is 0.010306199391682942 minutes
2024-12-20 17:59:59,673:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:59,673:INFO:Initializing create_model()
2024-12-20 17:59:59,673:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:59,673:INFO:Checking exceptions
2024-12-20 17:59:59,673:INFO:Importing libraries
2024-12-20 17:59:59,673:INFO:Copying training dataset
2024-12-20 17:59:59,687:INFO:Defining folds
2024-12-20 17:59:59,688:INFO:Declaring metric variables
2024-12-20 17:59:59,688:INFO:Importing untrained model
2024-12-20 17:59:59,693:INFO:Elastic Net Imported successfully
2024-12-20 17:59:59,693:INFO:Starting cross validation
2024-12-20 17:59:59,693:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 17:59:59,778:INFO:Calculating mean and std
2024-12-20 17:59:59,778:INFO:Creating metrics dataframe
2024-12-20 17:59:59,784:INFO:Uploading results into container
2024-12-20 17:59:59,784:INFO:Uploading model into container now
2024-12-20 17:59:59,784:INFO:_master_model_container: 40
2024-12-20 17:59:59,784:INFO:_display_container: 4
2024-12-20 17:59:59,784:INFO:ElasticNet(random_state=287)
2024-12-20 17:59:59,784:INFO:create_model() successfully completed......................................
2024-12-20 17:59:59,888:INFO:SubProcess create_model() end ==================================
2024-12-20 17:59:59,888:INFO:Creating metrics dataframe
2024-12-20 17:59:59,895:INFO:Initializing Least Angle Regression
2024-12-20 17:59:59,895:INFO:Total runtime is 0.014000590642293293 minutes
2024-12-20 17:59:59,895:INFO:SubProcess create_model() called ==================================
2024-12-20 17:59:59,895:INFO:Initializing create_model()
2024-12-20 17:59:59,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 17:59:59,895:INFO:Checking exceptions
2024-12-20 17:59:59,895:INFO:Importing libraries
2024-12-20 17:59:59,895:INFO:Copying training dataset
2024-12-20 17:59:59,902:INFO:Defining folds
2024-12-20 17:59:59,903:INFO:Declaring metric variables
2024-12-20 17:59:59,905:INFO:Importing untrained model
2024-12-20 17:59:59,908:INFO:Least Angle Regression Imported successfully
2024-12-20 17:59:59,912:INFO:Starting cross validation
2024-12-20 17:59:59,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:00,006:INFO:Calculating mean and std
2024-12-20 18:00:00,006:INFO:Creating metrics dataframe
2024-12-20 18:00:00,006:INFO:Uploading results into container
2024-12-20 18:00:00,006:INFO:Uploading model into container now
2024-12-20 18:00:00,006:INFO:_master_model_container: 41
2024-12-20 18:00:00,006:INFO:_display_container: 4
2024-12-20 18:00:00,006:INFO:Lars(random_state=287)
2024-12-20 18:00:00,006:INFO:create_model() successfully completed......................................
2024-12-20 18:00:00,113:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:00,113:INFO:Creating metrics dataframe
2024-12-20 18:00:00,118:INFO:Initializing Lasso Least Angle Regression
2024-12-20 18:00:00,118:INFO:Total runtime is 0.017727792263031006 minutes
2024-12-20 18:00:00,121:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:00,121:INFO:Initializing create_model()
2024-12-20 18:00:00,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:00,121:INFO:Checking exceptions
2024-12-20 18:00:00,121:INFO:Importing libraries
2024-12-20 18:00:00,121:INFO:Copying training dataset
2024-12-20 18:00:00,125:INFO:Defining folds
2024-12-20 18:00:00,125:INFO:Declaring metric variables
2024-12-20 18:00:00,129:INFO:Importing untrained model
2024-12-20 18:00:00,131:INFO:Lasso Least Angle Regression Imported successfully
2024-12-20 18:00:00,131:INFO:Starting cross validation
2024-12-20 18:00:00,137:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:00,232:INFO:Calculating mean and std
2024-12-20 18:00:00,233:INFO:Creating metrics dataframe
2024-12-20 18:00:00,235:INFO:Uploading results into container
2024-12-20 18:00:00,235:INFO:Uploading model into container now
2024-12-20 18:00:00,236:INFO:_master_model_container: 42
2024-12-20 18:00:00,236:INFO:_display_container: 4
2024-12-20 18:00:00,236:INFO:LassoLars(random_state=287)
2024-12-20 18:00:00,236:INFO:create_model() successfully completed......................................
2024-12-20 18:00:00,325:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:00,325:INFO:Creating metrics dataframe
2024-12-20 18:00:00,331:INFO:Initializing Orthogonal Matching Pursuit
2024-12-20 18:00:00,331:INFO:Total runtime is 0.021281270186106364 minutes
2024-12-20 18:00:00,333:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:00,334:INFO:Initializing create_model()
2024-12-20 18:00:00,334:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:00,334:INFO:Checking exceptions
2024-12-20 18:00:00,334:INFO:Importing libraries
2024-12-20 18:00:00,334:INFO:Copying training dataset
2024-12-20 18:00:00,337:INFO:Defining folds
2024-12-20 18:00:00,337:INFO:Declaring metric variables
2024-12-20 18:00:00,340:INFO:Importing untrained model
2024-12-20 18:00:00,342:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-20 18:00:00,346:INFO:Starting cross validation
2024-12-20 18:00:00,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:00,422:INFO:Calculating mean and std
2024-12-20 18:00:00,422:INFO:Creating metrics dataframe
2024-12-20 18:00:00,422:INFO:Uploading results into container
2024-12-20 18:00:00,422:INFO:Uploading model into container now
2024-12-20 18:00:00,422:INFO:_master_model_container: 43
2024-12-20 18:00:00,422:INFO:_display_container: 4
2024-12-20 18:00:00,422:INFO:OrthogonalMatchingPursuit()
2024-12-20 18:00:00,422:INFO:create_model() successfully completed......................................
2024-12-20 18:00:00,515:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:00,515:INFO:Creating metrics dataframe
2024-12-20 18:00:00,515:INFO:Initializing Bayesian Ridge
2024-12-20 18:00:00,515:INFO:Total runtime is 0.024339882532755534 minutes
2024-12-20 18:00:00,531:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:00,531:INFO:Initializing create_model()
2024-12-20 18:00:00,531:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:00,531:INFO:Checking exceptions
2024-12-20 18:00:00,531:INFO:Importing libraries
2024-12-20 18:00:00,531:INFO:Copying training dataset
2024-12-20 18:00:00,533:INFO:Defining folds
2024-12-20 18:00:00,533:INFO:Declaring metric variables
2024-12-20 18:00:00,533:INFO:Importing untrained model
2024-12-20 18:00:00,533:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:00:00,533:INFO:Starting cross validation
2024-12-20 18:00:00,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:00,632:INFO:Calculating mean and std
2024-12-20 18:00:00,632:INFO:Creating metrics dataframe
2024-12-20 18:00:00,632:INFO:Uploading results into container
2024-12-20 18:00:00,632:INFO:Uploading model into container now
2024-12-20 18:00:00,632:INFO:_master_model_container: 44
2024-12-20 18:00:00,632:INFO:_display_container: 4
2024-12-20 18:00:00,632:INFO:BayesianRidge()
2024-12-20 18:00:00,632:INFO:create_model() successfully completed......................................
2024-12-20 18:00:00,726:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:00,726:INFO:Creating metrics dataframe
2024-12-20 18:00:00,726:INFO:Initializing Passive Aggressive Regressor
2024-12-20 18:00:00,726:INFO:Total runtime is 0.027855213483174643 minutes
2024-12-20 18:00:00,726:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:00,726:INFO:Initializing create_model()
2024-12-20 18:00:00,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:00,726:INFO:Checking exceptions
2024-12-20 18:00:00,726:INFO:Importing libraries
2024-12-20 18:00:00,726:INFO:Copying training dataset
2024-12-20 18:00:00,740:INFO:Defining folds
2024-12-20 18:00:00,740:INFO:Declaring metric variables
2024-12-20 18:00:00,743:INFO:Importing untrained model
2024-12-20 18:00:00,743:INFO:Passive Aggressive Regressor Imported successfully
2024-12-20 18:00:00,743:INFO:Starting cross validation
2024-12-20 18:00:00,743:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:00,830:INFO:Calculating mean and std
2024-12-20 18:00:00,830:INFO:Creating metrics dataframe
2024-12-20 18:00:00,830:INFO:Uploading results into container
2024-12-20 18:00:00,830:INFO:Uploading model into container now
2024-12-20 18:00:00,830:INFO:_master_model_container: 45
2024-12-20 18:00:00,830:INFO:_display_container: 4
2024-12-20 18:00:00,830:INFO:PassiveAggressiveRegressor(random_state=287)
2024-12-20 18:00:00,830:INFO:create_model() successfully completed......................................
2024-12-20 18:00:00,924:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:00,924:INFO:Creating metrics dataframe
2024-12-20 18:00:00,924:INFO:Initializing Huber Regressor
2024-12-20 18:00:00,940:INFO:Total runtime is 0.03115456501642863 minutes
2024-12-20 18:00:00,940:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:00,940:INFO:Initializing create_model()
2024-12-20 18:00:00,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:00,940:INFO:Checking exceptions
2024-12-20 18:00:00,940:INFO:Importing libraries
2024-12-20 18:00:00,940:INFO:Copying training dataset
2024-12-20 18:00:00,946:INFO:Defining folds
2024-12-20 18:00:00,946:INFO:Declaring metric variables
2024-12-20 18:00:00,948:INFO:Importing untrained model
2024-12-20 18:00:00,948:INFO:Huber Regressor Imported successfully
2024-12-20 18:00:00,948:INFO:Starting cross validation
2024-12-20 18:00:00,948:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:01,047:INFO:Calculating mean and std
2024-12-20 18:00:01,047:INFO:Creating metrics dataframe
2024-12-20 18:00:01,047:INFO:Uploading results into container
2024-12-20 18:00:01,047:INFO:Uploading model into container now
2024-12-20 18:00:01,047:INFO:_master_model_container: 46
2024-12-20 18:00:01,047:INFO:_display_container: 4
2024-12-20 18:00:01,047:INFO:HuberRegressor()
2024-12-20 18:00:01,047:INFO:create_model() successfully completed......................................
2024-12-20 18:00:01,135:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:01,135:INFO:Creating metrics dataframe
2024-12-20 18:00:01,135:INFO:Initializing K Neighbors Regressor
2024-12-20 18:00:01,135:INFO:Total runtime is 0.03467019399007162 minutes
2024-12-20 18:00:01,135:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:01,135:INFO:Initializing create_model()
2024-12-20 18:00:01,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:01,135:INFO:Checking exceptions
2024-12-20 18:00:01,135:INFO:Importing libraries
2024-12-20 18:00:01,135:INFO:Copying training dataset
2024-12-20 18:00:01,152:INFO:Defining folds
2024-12-20 18:00:01,152:INFO:Declaring metric variables
2024-12-20 18:00:01,152:INFO:Importing untrained model
2024-12-20 18:00:01,152:INFO:K Neighbors Regressor Imported successfully
2024-12-20 18:00:01,152:INFO:Starting cross validation
2024-12-20 18:00:01,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:01,262:INFO:Calculating mean and std
2024-12-20 18:00:01,262:INFO:Creating metrics dataframe
2024-12-20 18:00:01,262:INFO:Uploading results into container
2024-12-20 18:00:01,262:INFO:Uploading model into container now
2024-12-20 18:00:01,262:INFO:_master_model_container: 47
2024-12-20 18:00:01,262:INFO:_display_container: 4
2024-12-20 18:00:01,262:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-20 18:00:01,262:INFO:create_model() successfully completed......................................
2024-12-20 18:00:01,357:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:01,357:INFO:Creating metrics dataframe
2024-12-20 18:00:01,357:INFO:Initializing Decision Tree Regressor
2024-12-20 18:00:01,357:INFO:Total runtime is 0.03837761878967286 minutes
2024-12-20 18:00:01,357:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:01,357:INFO:Initializing create_model()
2024-12-20 18:00:01,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:01,357:INFO:Checking exceptions
2024-12-20 18:00:01,357:INFO:Importing libraries
2024-12-20 18:00:01,357:INFO:Copying training dataset
2024-12-20 18:00:01,373:INFO:Defining folds
2024-12-20 18:00:01,373:INFO:Declaring metric variables
2024-12-20 18:00:01,373:INFO:Importing untrained model
2024-12-20 18:00:01,373:INFO:Decision Tree Regressor Imported successfully
2024-12-20 18:00:01,373:INFO:Starting cross validation
2024-12-20 18:00:01,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:01,478:INFO:Calculating mean and std
2024-12-20 18:00:01,478:INFO:Creating metrics dataframe
2024-12-20 18:00:01,478:INFO:Uploading results into container
2024-12-20 18:00:01,478:INFO:Uploading model into container now
2024-12-20 18:00:01,478:INFO:_master_model_container: 48
2024-12-20 18:00:01,478:INFO:_display_container: 4
2024-12-20 18:00:01,478:INFO:DecisionTreeRegressor(random_state=287)
2024-12-20 18:00:01,478:INFO:create_model() successfully completed......................................
2024-12-20 18:00:01,571:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:01,571:INFO:Creating metrics dataframe
2024-12-20 18:00:01,571:INFO:Initializing Random Forest Regressor
2024-12-20 18:00:01,571:INFO:Total runtime is 0.041946947574615485 minutes
2024-12-20 18:00:01,571:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:01,571:INFO:Initializing create_model()
2024-12-20 18:00:01,571:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:01,571:INFO:Checking exceptions
2024-12-20 18:00:01,571:INFO:Importing libraries
2024-12-20 18:00:01,571:INFO:Copying training dataset
2024-12-20 18:00:01,588:INFO:Defining folds
2024-12-20 18:00:01,588:INFO:Declaring metric variables
2024-12-20 18:00:01,589:INFO:Importing untrained model
2024-12-20 18:00:01,589:INFO:Random Forest Regressor Imported successfully
2024-12-20 18:00:01,589:INFO:Starting cross validation
2024-12-20 18:00:01,589:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:02,259:INFO:Calculating mean and std
2024-12-20 18:00:02,260:INFO:Creating metrics dataframe
2024-12-20 18:00:02,261:INFO:Uploading results into container
2024-12-20 18:00:02,262:INFO:Uploading model into container now
2024-12-20 18:00:02,262:INFO:_master_model_container: 49
2024-12-20 18:00:02,262:INFO:_display_container: 4
2024-12-20 18:00:02,263:INFO:RandomForestRegressor(n_jobs=-1, random_state=287)
2024-12-20 18:00:02,263:INFO:create_model() successfully completed......................................
2024-12-20 18:00:02,362:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:02,362:INFO:Creating metrics dataframe
2024-12-20 18:00:02,371:INFO:Initializing Extra Trees Regressor
2024-12-20 18:00:02,371:INFO:Total runtime is 0.05527899265289307 minutes
2024-12-20 18:00:02,373:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:02,374:INFO:Initializing create_model()
2024-12-20 18:00:02,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:02,374:INFO:Checking exceptions
2024-12-20 18:00:02,374:INFO:Importing libraries
2024-12-20 18:00:02,374:INFO:Copying training dataset
2024-12-20 18:00:02,379:INFO:Defining folds
2024-12-20 18:00:02,379:INFO:Declaring metric variables
2024-12-20 18:00:02,383:INFO:Importing untrained model
2024-12-20 18:00:02,387:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:00:02,396:INFO:Starting cross validation
2024-12-20 18:00:02,398:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:02,753:INFO:Calculating mean and std
2024-12-20 18:00:02,753:INFO:Creating metrics dataframe
2024-12-20 18:00:02,753:INFO:Uploading results into container
2024-12-20 18:00:02,753:INFO:Uploading model into container now
2024-12-20 18:00:02,753:INFO:_master_model_container: 50
2024-12-20 18:00:02,753:INFO:_display_container: 4
2024-12-20 18:00:02,768:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=287)
2024-12-20 18:00:02,768:INFO:create_model() successfully completed......................................
2024-12-20 18:00:02,847:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:02,847:INFO:Creating metrics dataframe
2024-12-20 18:00:02,862:INFO:Initializing AdaBoost Regressor
2024-12-20 18:00:02,862:INFO:Total runtime is 0.06346065600713094 minutes
2024-12-20 18:00:02,862:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:02,862:INFO:Initializing create_model()
2024-12-20 18:00:02,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:02,862:INFO:Checking exceptions
2024-12-20 18:00:02,862:INFO:Importing libraries
2024-12-20 18:00:02,862:INFO:Copying training dataset
2024-12-20 18:00:02,873:INFO:Defining folds
2024-12-20 18:00:02,873:INFO:Declaring metric variables
2024-12-20 18:00:02,874:INFO:Importing untrained model
2024-12-20 18:00:02,874:INFO:AdaBoost Regressor Imported successfully
2024-12-20 18:00:02,874:INFO:Starting cross validation
2024-12-20 18:00:02,874:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:03,088:INFO:Calculating mean and std
2024-12-20 18:00:03,103:INFO:Creating metrics dataframe
2024-12-20 18:00:03,103:INFO:Uploading results into container
2024-12-20 18:00:03,103:INFO:Uploading model into container now
2024-12-20 18:00:03,103:INFO:_master_model_container: 51
2024-12-20 18:00:03,103:INFO:_display_container: 4
2024-12-20 18:00:03,103:INFO:AdaBoostRegressor(random_state=287)
2024-12-20 18:00:03,103:INFO:create_model() successfully completed......................................
2024-12-20 18:00:03,182:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:03,182:INFO:Creating metrics dataframe
2024-12-20 18:00:03,197:INFO:Initializing Gradient Boosting Regressor
2024-12-20 18:00:03,197:INFO:Total runtime is 0.06904421250025432 minutes
2024-12-20 18:00:03,197:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:03,197:INFO:Initializing create_model()
2024-12-20 18:00:03,197:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:03,197:INFO:Checking exceptions
2024-12-20 18:00:03,197:INFO:Importing libraries
2024-12-20 18:00:03,197:INFO:Copying training dataset
2024-12-20 18:00:03,207:INFO:Defining folds
2024-12-20 18:00:03,207:INFO:Declaring metric variables
2024-12-20 18:00:03,207:INFO:Importing untrained model
2024-12-20 18:00:03,207:INFO:Gradient Boosting Regressor Imported successfully
2024-12-20 18:00:03,207:INFO:Starting cross validation
2024-12-20 18:00:03,207:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:03,545:INFO:Calculating mean and std
2024-12-20 18:00:03,545:INFO:Creating metrics dataframe
2024-12-20 18:00:03,560:INFO:Uploading results into container
2024-12-20 18:00:03,560:INFO:Uploading model into container now
2024-12-20 18:00:03,560:INFO:_master_model_container: 52
2024-12-20 18:00:03,560:INFO:_display_container: 4
2024-12-20 18:00:03,560:INFO:GradientBoostingRegressor(random_state=287)
2024-12-20 18:00:03,560:INFO:create_model() successfully completed......................................
2024-12-20 18:00:03,638:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:03,638:INFO:Creating metrics dataframe
2024-12-20 18:00:03,654:INFO:Initializing Light Gradient Boosting Machine
2024-12-20 18:00:03,654:INFO:Total runtime is 0.07665549119313558 minutes
2024-12-20 18:00:03,654:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:03,654:INFO:Initializing create_model()
2024-12-20 18:00:03,654:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:03,654:INFO:Checking exceptions
2024-12-20 18:00:03,654:INFO:Importing libraries
2024-12-20 18:00:03,654:INFO:Copying training dataset
2024-12-20 18:00:03,664:INFO:Defining folds
2024-12-20 18:00:03,664:INFO:Declaring metric variables
2024-12-20 18:00:03,665:INFO:Importing untrained model
2024-12-20 18:00:03,665:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-20 18:00:03,665:INFO:Starting cross validation
2024-12-20 18:00:03,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:04,381:INFO:Calculating mean and std
2024-12-20 18:00:04,381:INFO:Creating metrics dataframe
2024-12-20 18:00:04,387:INFO:Uploading results into container
2024-12-20 18:00:04,388:INFO:Uploading model into container now
2024-12-20 18:00:04,388:INFO:_master_model_container: 53
2024-12-20 18:00:04,388:INFO:_display_container: 4
2024-12-20 18:00:04,389:INFO:LGBMRegressor(n_jobs=-1, random_state=287)
2024-12-20 18:00:04,389:INFO:create_model() successfully completed......................................
2024-12-20 18:00:04,489:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:04,489:INFO:Creating metrics dataframe
2024-12-20 18:00:04,505:INFO:Initializing Dummy Regressor
2024-12-20 18:00:04,505:INFO:Total runtime is 0.0908319115638733 minutes
2024-12-20 18:00:04,505:INFO:SubProcess create_model() called ==================================
2024-12-20 18:00:04,505:INFO:Initializing create_model()
2024-12-20 18:00:04,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EDFB7CD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:04,505:INFO:Checking exceptions
2024-12-20 18:00:04,505:INFO:Importing libraries
2024-12-20 18:00:04,505:INFO:Copying training dataset
2024-12-20 18:00:04,515:INFO:Defining folds
2024-12-20 18:00:04,515:INFO:Declaring metric variables
2024-12-20 18:00:04,520:INFO:Importing untrained model
2024-12-20 18:00:04,520:INFO:Dummy Regressor Imported successfully
2024-12-20 18:00:04,520:INFO:Starting cross validation
2024-12-20 18:00:04,520:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:00:04,608:INFO:Calculating mean and std
2024-12-20 18:00:04,608:INFO:Creating metrics dataframe
2024-12-20 18:00:04,608:INFO:Uploading results into container
2024-12-20 18:00:04,608:INFO:Uploading model into container now
2024-12-20 18:00:04,608:INFO:_master_model_container: 54
2024-12-20 18:00:04,608:INFO:_display_container: 4
2024-12-20 18:00:04,608:INFO:DummyRegressor()
2024-12-20 18:00:04,608:INFO:create_model() successfully completed......................................
2024-12-20 18:00:04,717:INFO:SubProcess create_model() end ==================================
2024-12-20 18:00:04,717:INFO:Creating metrics dataframe
2024-12-20 18:00:04,717:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-20 18:00:04,736:INFO:Initializing create_model()
2024-12-20 18:00:04,737:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:04,737:INFO:Checking exceptions
2024-12-20 18:00:04,738:INFO:Importing libraries
2024-12-20 18:00:04,738:INFO:Copying training dataset
2024-12-20 18:00:04,741:INFO:Defining folds
2024-12-20 18:00:04,741:INFO:Declaring metric variables
2024-12-20 18:00:04,741:INFO:Importing untrained model
2024-12-20 18:00:04,741:INFO:Declaring custom model
2024-12-20 18:00:04,741:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:00:04,741:INFO:Cross validation set to False
2024-12-20 18:00:04,741:INFO:Fitting Model
2024-12-20 18:00:04,776:INFO:BayesianRidge()
2024-12-20 18:00:04,776:INFO:create_model() successfully completed......................................
2024-12-20 18:00:04,869:INFO:Initializing create_model()
2024-12-20 18:00:04,869:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:04,869:INFO:Checking exceptions
2024-12-20 18:00:04,869:INFO:Importing libraries
2024-12-20 18:00:04,869:INFO:Copying training dataset
2024-12-20 18:00:04,877:INFO:Defining folds
2024-12-20 18:00:04,877:INFO:Declaring metric variables
2024-12-20 18:00:04,877:INFO:Importing untrained model
2024-12-20 18:00:04,877:INFO:Declaring custom model
2024-12-20 18:00:04,877:INFO:Linear Regression Imported successfully
2024-12-20 18:00:04,877:INFO:Cross validation set to False
2024-12-20 18:00:04,877:INFO:Fitting Model
2024-12-20 18:00:04,901:INFO:LinearRegression(n_jobs=-1)
2024-12-20 18:00:04,901:INFO:create_model() successfully completed......................................
2024-12-20 18:00:04,994:INFO:Initializing create_model()
2024-12-20 18:00:04,994:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=Ridge(random_state=287), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:00:04,994:INFO:Checking exceptions
2024-12-20 18:00:04,994:INFO:Importing libraries
2024-12-20 18:00:04,994:INFO:Copying training dataset
2024-12-20 18:00:05,011:INFO:Defining folds
2024-12-20 18:00:05,011:INFO:Declaring metric variables
2024-12-20 18:00:05,011:INFO:Importing untrained model
2024-12-20 18:00:05,011:INFO:Declaring custom model
2024-12-20 18:00:05,011:INFO:Ridge Regression Imported successfully
2024-12-20 18:00:05,011:INFO:Cross validation set to False
2024-12-20 18:00:05,011:INFO:Fitting Model
2024-12-20 18:00:05,033:INFO:Ridge(random_state=287)
2024-12-20 18:00:05,033:INFO:create_model() successfully completed......................................
2024-12-20 18:00:05,144:INFO:_master_model_container: 54
2024-12-20 18:00:05,144:INFO:_display_container: 4
2024-12-20 18:00:05,144:INFO:[BayesianRidge(), LinearRegression(n_jobs=-1), Ridge(random_state=287)]
2024-12-20 18:00:05,144:INFO:compare_models() successfully completed......................................
2024-12-20 18:01:33,548:INFO:Initializing finalize_model()
2024-12-20 18:01:33,548:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:01:33,548:INFO:Finalizing BayesianRidge()
2024-12-20 18:01:33,563:INFO:Initializing create_model()
2024-12-20 18:01:33,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:01:33,563:INFO:Checking exceptions
2024-12-20 18:01:33,564:INFO:Importing libraries
2024-12-20 18:01:33,565:INFO:Copying training dataset
2024-12-20 18:01:33,565:INFO:Defining folds
2024-12-20 18:01:33,565:INFO:Declaring metric variables
2024-12-20 18:01:33,565:INFO:Importing untrained model
2024-12-20 18:01:33,565:INFO:Declaring custom model
2024-12-20 18:01:33,565:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:01:33,566:INFO:Cross validation set to False
2024-12-20 18:01:33,566:INFO:Fitting Model
2024-12-20 18:01:33,607:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:01:33,607:INFO:create_model() successfully completed......................................
2024-12-20 18:01:33,695:INFO:_master_model_container: 54
2024-12-20 18:01:33,695:INFO:_display_container: 4
2024-12-20 18:01:33,695:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:01:33,695:INFO:finalize_model() successfully completed......................................
2024-12-20 18:01:33,789:INFO:Initializing finalize_model()
2024-12-20 18:01:33,789:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:01:33,789:INFO:Finalizing LinearRegression(n_jobs=-1)
2024-12-20 18:01:33,789:INFO:Initializing create_model()
2024-12-20 18:01:33,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:01:33,789:INFO:Checking exceptions
2024-12-20 18:01:33,789:INFO:Importing libraries
2024-12-20 18:01:33,789:INFO:Copying training dataset
2024-12-20 18:01:33,789:INFO:Defining folds
2024-12-20 18:01:33,789:INFO:Declaring metric variables
2024-12-20 18:01:33,789:INFO:Importing untrained model
2024-12-20 18:01:33,789:INFO:Declaring custom model
2024-12-20 18:01:33,789:INFO:Linear Regression Imported successfully
2024-12-20 18:01:33,804:INFO:Cross validation set to False
2024-12-20 18:01:33,804:INFO:Fitting Model
2024-12-20 18:01:33,835:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:01:33,835:INFO:create_model() successfully completed......................................
2024-12-20 18:01:33,929:INFO:_master_model_container: 54
2024-12-20 18:01:33,929:INFO:_display_container: 4
2024-12-20 18:01:33,945:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:01:33,945:INFO:finalize_model() successfully completed......................................
2024-12-20 18:01:34,039:INFO:Initializing finalize_model()
2024-12-20 18:01:34,039:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=Ridge(random_state=287), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:01:34,039:INFO:Finalizing Ridge(random_state=287)
2024-12-20 18:01:34,039:INFO:Initializing create_model()
2024-12-20 18:01:34,039:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=Ridge(random_state=287), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:01:34,039:INFO:Checking exceptions
2024-12-20 18:01:34,039:INFO:Importing libraries
2024-12-20 18:01:34,039:INFO:Copying training dataset
2024-12-20 18:01:34,039:INFO:Defining folds
2024-12-20 18:01:34,039:INFO:Declaring metric variables
2024-12-20 18:01:34,039:INFO:Importing untrained model
2024-12-20 18:01:34,039:INFO:Declaring custom model
2024-12-20 18:01:34,039:INFO:Ridge Regression Imported successfully
2024-12-20 18:01:34,039:INFO:Cross validation set to False
2024-12-20 18:01:34,039:INFO:Fitting Model
2024-12-20 18:01:34,070:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=287))])
2024-12-20 18:01:34,070:INFO:create_model() successfully completed......................................
2024-12-20 18:01:34,186:INFO:_master_model_container: 54
2024-12-20 18:01:34,186:INFO:_display_container: 4
2024-12-20 18:01:34,193:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=287))])
2024-12-20 18:01:34,193:INFO:finalize_model() successfully completed......................................
2024-12-20 18:01:41,914:INFO:Initializing finalize_model()
2024-12-20 18:01:41,914:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:01:41,915:INFO:Finalizing BayesianRidge()
2024-12-20 18:01:41,917:INFO:Initializing create_model()
2024-12-20 18:01:41,918:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:01:41,918:INFO:Checking exceptions
2024-12-20 18:01:41,919:INFO:Importing libraries
2024-12-20 18:01:41,919:INFO:Copying training dataset
2024-12-20 18:01:41,920:INFO:Defining folds
2024-12-20 18:01:41,920:INFO:Declaring metric variables
2024-12-20 18:01:41,920:INFO:Importing untrained model
2024-12-20 18:01:41,920:INFO:Declaring custom model
2024-12-20 18:01:41,921:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:01:41,922:INFO:Cross validation set to False
2024-12-20 18:01:41,922:INFO:Fitting Model
2024-12-20 18:01:41,968:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:01:41,968:INFO:create_model() successfully completed......................................
2024-12-20 18:01:42,071:INFO:_master_model_container: 54
2024-12-20 18:01:42,071:INFO:_display_container: 4
2024-12-20 18:01:42,071:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:01:42,071:INFO:finalize_model() successfully completed......................................
2024-12-20 18:01:42,198:INFO:Initializing finalize_model()
2024-12-20 18:01:42,199:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:01:42,199:INFO:Finalizing LinearRegression(n_jobs=-1)
2024-12-20 18:01:42,202:INFO:Initializing create_model()
2024-12-20 18:01:42,202:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:01:42,202:INFO:Checking exceptions
2024-12-20 18:01:42,203:INFO:Importing libraries
2024-12-20 18:01:42,203:INFO:Copying training dataset
2024-12-20 18:01:42,203:INFO:Defining folds
2024-12-20 18:01:42,203:INFO:Declaring metric variables
2024-12-20 18:01:42,203:INFO:Importing untrained model
2024-12-20 18:01:42,203:INFO:Declaring custom model
2024-12-20 18:01:42,203:INFO:Linear Regression Imported successfully
2024-12-20 18:01:42,204:INFO:Cross validation set to False
2024-12-20 18:01:42,204:INFO:Fitting Model
2024-12-20 18:01:42,237:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:01:42,237:INFO:create_model() successfully completed......................................
2024-12-20 18:01:42,347:INFO:_master_model_container: 54
2024-12-20 18:01:42,347:INFO:_display_container: 4
2024-12-20 18:01:42,362:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:01:42,362:INFO:finalize_model() successfully completed......................................
2024-12-20 18:01:42,456:INFO:Initializing finalize_model()
2024-12-20 18:01:42,456:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=Ridge(random_state=287), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:01:42,456:INFO:Finalizing Ridge(random_state=287)
2024-12-20 18:01:42,456:INFO:Initializing create_model()
2024-12-20 18:01:42,456:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=Ridge(random_state=287), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:01:42,456:INFO:Checking exceptions
2024-12-20 18:01:42,456:INFO:Importing libraries
2024-12-20 18:01:42,456:INFO:Copying training dataset
2024-12-20 18:01:42,456:INFO:Defining folds
2024-12-20 18:01:42,456:INFO:Declaring metric variables
2024-12-20 18:01:42,456:INFO:Importing untrained model
2024-12-20 18:01:42,456:INFO:Declaring custom model
2024-12-20 18:01:42,456:INFO:Ridge Regression Imported successfully
2024-12-20 18:01:42,456:INFO:Cross validation set to False
2024-12-20 18:01:42,456:INFO:Fitting Model
2024-12-20 18:01:42,506:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=287))])
2024-12-20 18:01:42,506:INFO:create_model() successfully completed......................................
2024-12-20 18:01:42,617:INFO:_master_model_container: 54
2024-12-20 18:01:42,617:INFO:_display_container: 4
2024-12-20 18:01:42,623:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=287))])
2024-12-20 18:01:42,623:INFO:finalize_model() successfully completed......................................
2024-12-20 18:01:42,739:INFO:Initializing predict_model()
2024-12-20 18:01:42,739:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F03E3420>)
2024-12-20 18:01:42,739:INFO:Checking exceptions
2024-12-20 18:01:42,739:INFO:Preloading libraries
2024-12-20 18:01:42,796:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:01:42,898:INFO:Initializing predict_model()
2024-12-20 18:01:42,898:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F03E3420>)
2024-12-20 18:01:42,898:INFO:Checking exceptions
2024-12-20 18:01:42,898:INFO:Preloading libraries
2024-12-20 18:01:42,950:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:01:43,059:INFO:Initializing predict_model()
2024-12-20 18:01:43,059:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190E59ACA10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=287))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F03E3420>)
2024-12-20 18:01:43,059:INFO:Checking exceptions
2024-12-20 18:01:43,059:INFO:Preloading libraries
2024-12-20 18:01:43,103:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:03:34,922:INFO:PyCaret RegressionExperiment
2024-12-20 18:03:34,923:INFO:Logging name: reg-default-name
2024-12-20 18:03:34,923:INFO:ML Usecase: MLUsecase.REGRESSION
2024-12-20 18:03:34,923:INFO:version 3.3.2
2024-12-20 18:03:34,923:INFO:Initializing setup()
2024-12-20 18:03:34,923:INFO:self.USI: 54ce
2024-12-20 18:03:34,923:INFO:self._variable_keys: {'_available_plots', 'exp_id', 'seed', '_ml_usecase', 'fold_generator', 'log_plots_param', 'logging_param', 'USI', 'transform_target_param', 'fold_shuffle_param', 'html_param', 'X_train', 'idx', 'exp_name_log', 'gpu_param', 'memory', 'pipeline', 'fold_groups_param', 'target_param', 'data', 'gpu_n_jobs_param', 'X_test', 'X', 'y', 'y_train', 'y_test', 'n_jobs_param'}
2024-12-20 18:03:34,923:INFO:Checking environment
2024-12-20 18:03:34,923:INFO:python_version: 3.11.7
2024-12-20 18:03:34,923:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-12-20 18:03:34,923:INFO:machine: AMD64
2024-12-20 18:03:34,923:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-20 18:03:34,923:INFO:Memory: svmem(total=16539455488, available=2419052544, percent=85.4, used=14120402944, free=2419052544)
2024-12-20 18:03:34,923:INFO:Physical Core: 8
2024-12-20 18:03:34,923:INFO:Logical Core: 16
2024-12-20 18:03:34,923:INFO:Checking libraries
2024-12-20 18:03:34,923:INFO:System:
2024-12-20 18:03:34,923:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-12-20 18:03:34,923:INFO:executable: C:\Users\MOKSH\anaconda3\python.exe
2024-12-20 18:03:34,923:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-20 18:03:34,923:INFO:PyCaret required dependencies:
2024-12-20 18:03:34,923:INFO:                 pip: 23.3.1
2024-12-20 18:03:34,924:INFO:          setuptools: 68.2.2
2024-12-20 18:03:34,924:INFO:             pycaret: 3.3.2
2024-12-20 18:03:34,924:INFO:             IPython: 8.20.0
2024-12-20 18:03:34,924:INFO:          ipywidgets: 7.6.5
2024-12-20 18:03:34,924:INFO:                tqdm: 4.65.0
2024-12-20 18:03:34,924:INFO:               numpy: 1.26.4
2024-12-20 18:03:34,924:INFO:              pandas: 2.1.4
2024-12-20 18:03:34,924:INFO:              jinja2: 3.1.3
2024-12-20 18:03:34,924:INFO:               scipy: 1.11.4
2024-12-20 18:03:34,924:INFO:              joblib: 1.2.0
2024-12-20 18:03:34,924:INFO:             sklearn: 1.4.2
2024-12-20 18:03:34,924:INFO:                pyod: 2.0.2
2024-12-20 18:03:34,924:INFO:            imblearn: 0.12.4
2024-12-20 18:03:34,924:INFO:   category_encoders: 2.6.4
2024-12-20 18:03:34,924:INFO:            lightgbm: 4.5.0
2024-12-20 18:03:34,924:INFO:               numba: 0.59.0
2024-12-20 18:03:34,924:INFO:            requests: 2.32.3
2024-12-20 18:03:34,924:INFO:          matplotlib: 3.7.5
2024-12-20 18:03:34,924:INFO:          scikitplot: 0.3.7
2024-12-20 18:03:34,924:INFO:         yellowbrick: 1.5
2024-12-20 18:03:34,924:INFO:              plotly: 5.24.1
2024-12-20 18:03:34,924:INFO:    plotly-resampler: Not installed
2024-12-20 18:03:34,924:INFO:             kaleido: 0.2.1
2024-12-20 18:03:34,924:INFO:           schemdraw: 0.15
2024-12-20 18:03:34,924:INFO:         statsmodels: 0.14.0
2024-12-20 18:03:34,924:INFO:              sktime: 0.26.0
2024-12-20 18:03:34,925:INFO:               tbats: 1.1.3
2024-12-20 18:03:34,925:INFO:            pmdarima: 2.0.4
2024-12-20 18:03:34,925:INFO:              psutil: 5.9.0
2024-12-20 18:03:34,925:INFO:          markupsafe: 2.1.3
2024-12-20 18:03:34,925:INFO:             pickle5: Not installed
2024-12-20 18:03:34,925:INFO:         cloudpickle: 2.2.1
2024-12-20 18:03:34,925:INFO:         deprecation: 2.1.0
2024-12-20 18:03:34,925:INFO:              xxhash: 3.5.0
2024-12-20 18:03:34,925:INFO:           wurlitzer: Not installed
2024-12-20 18:03:34,925:INFO:PyCaret optional dependencies:
2024-12-20 18:03:34,925:INFO:                shap: Not installed
2024-12-20 18:03:34,925:INFO:           interpret: Not installed
2024-12-20 18:03:34,925:INFO:                umap: Not installed
2024-12-20 18:03:34,925:INFO:     ydata_profiling: Not installed
2024-12-20 18:03:34,925:INFO:  explainerdashboard: Not installed
2024-12-20 18:03:34,925:INFO:             autoviz: Not installed
2024-12-20 18:03:34,925:INFO:           fairlearn: Not installed
2024-12-20 18:03:34,925:INFO:          deepchecks: Not installed
2024-12-20 18:03:34,925:INFO:             xgboost: Not installed
2024-12-20 18:03:34,925:INFO:            catboost: Not installed
2024-12-20 18:03:34,925:INFO:              kmodes: Not installed
2024-12-20 18:03:34,925:INFO:             mlxtend: Not installed
2024-12-20 18:03:34,925:INFO:       statsforecast: Not installed
2024-12-20 18:03:34,925:INFO:        tune_sklearn: Not installed
2024-12-20 18:03:34,925:INFO:                 ray: Not installed
2024-12-20 18:03:34,925:INFO:            hyperopt: Not installed
2024-12-20 18:03:34,925:INFO:              optuna: Not installed
2024-12-20 18:03:34,925:INFO:               skopt: Not installed
2024-12-20 18:03:34,926:INFO:              mlflow: Not installed
2024-12-20 18:03:34,926:INFO:              gradio: Not installed
2024-12-20 18:03:34,926:INFO:             fastapi: Not installed
2024-12-20 18:03:34,926:INFO:             uvicorn: Not installed
2024-12-20 18:03:34,926:INFO:              m2cgen: Not installed
2024-12-20 18:03:34,926:INFO:           evidently: Not installed
2024-12-20 18:03:34,926:INFO:               fugue: Not installed
2024-12-20 18:03:34,927:INFO:           streamlit: 1.30.0
2024-12-20 18:03:34,927:INFO:             prophet: Not installed
2024-12-20 18:03:34,927:INFO:None
2024-12-20 18:03:34,927:INFO:Set up data.
2024-12-20 18:03:34,931:INFO:Set up folding strategy.
2024-12-20 18:03:34,931:INFO:Set up train/test split.
2024-12-20 18:03:34,932:INFO:Set up index.
2024-12-20 18:03:34,932:INFO:Assigning column types.
2024-12-20 18:03:34,938:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-20 18:03:34,938:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-20 18:03:34,938:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 18:03:34,945:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:34,990:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,022:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,022:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,022:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,022:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,075:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,106:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,106:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-12-20 18:03:35,106:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,106:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,153:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,184:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,200:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,200:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,250:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,284:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,285:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,285:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,285:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-12-20 18:03:35,291:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,321:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,368:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,415:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,446:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,446:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-12-20 18:03:35,506:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,541:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,541:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,541:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,631:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,631:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,631:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-20 18:03:35,691:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,778:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:35,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,802:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-12-20 18:03:35,896:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,896:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,971:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:35,987:INFO:Preparing preprocessing pipeline...
2024-12-20 18:03:35,987:INFO:Set up simple imputation.
2024-12-20 18:03:35,987:INFO:Finished creating preprocessing pipeline.
2024-12-20 18:03:36,003:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOKSH\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2024-12-20 18:03:36,003:INFO:Creating final display dataframe.
2024-12-20 18:03:36,056:INFO:Setup _display_container:                     Description             Value
0                    Session id              2586
1                        Target           Target1
2                   Target type        Regression
3           Original data shape        (1000, 16)
4        Transformed data shape        (1000, 16)
5   Transformed train set shape         (700, 16)
6    Transformed test set shape         (300, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator             KFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  reg-default-name
18                          USI              54ce
2024-12-20 18:03:36,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:36,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:36,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:36,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:36,245:INFO:setup() successfully completed in 1.34s...............
2024-12-20 18:03:39,721:INFO:Initializing compare_models()
2024-12-20 18:03:39,721:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-20 18:03:39,721:INFO:Checking exceptions
2024-12-20 18:03:39,723:INFO:Preparing display monitor
2024-12-20 18:03:39,742:INFO:Initializing Linear Regression
2024-12-20 18:03:39,742:INFO:Total runtime is 0.0 minutes
2024-12-20 18:03:39,742:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:39,742:INFO:Initializing create_model()
2024-12-20 18:03:39,742:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:39,742:INFO:Checking exceptions
2024-12-20 18:03:39,742:INFO:Importing libraries
2024-12-20 18:03:39,742:INFO:Copying training dataset
2024-12-20 18:03:39,758:INFO:Defining folds
2024-12-20 18:03:39,758:INFO:Declaring metric variables
2024-12-20 18:03:39,761:INFO:Importing untrained model
2024-12-20 18:03:39,763:INFO:Linear Regression Imported successfully
2024-12-20 18:03:39,769:INFO:Starting cross validation
2024-12-20 18:03:39,770:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:39,813:INFO:Calculating mean and std
2024-12-20 18:03:39,813:INFO:Creating metrics dataframe
2024-12-20 18:03:39,813:INFO:Uploading results into container
2024-12-20 18:03:39,813:INFO:Uploading model into container now
2024-12-20 18:03:39,813:INFO:_master_model_container: 1
2024-12-20 18:03:39,813:INFO:_display_container: 2
2024-12-20 18:03:39,813:INFO:LinearRegression(n_jobs=-1)
2024-12-20 18:03:39,813:INFO:create_model() successfully completed......................................
2024-12-20 18:03:39,923:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:39,923:INFO:Creating metrics dataframe
2024-12-20 18:03:39,923:INFO:Initializing Lasso Regression
2024-12-20 18:03:39,923:INFO:Total runtime is 0.003019563357035319 minutes
2024-12-20 18:03:39,923:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:39,923:INFO:Initializing create_model()
2024-12-20 18:03:39,923:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:39,923:INFO:Checking exceptions
2024-12-20 18:03:39,923:INFO:Importing libraries
2024-12-20 18:03:39,923:INFO:Copying training dataset
2024-12-20 18:03:39,923:INFO:Defining folds
2024-12-20 18:03:39,923:INFO:Declaring metric variables
2024-12-20 18:03:39,938:INFO:Importing untrained model
2024-12-20 18:03:39,938:INFO:Lasso Regression Imported successfully
2024-12-20 18:03:39,945:INFO:Starting cross validation
2024-12-20 18:03:39,945:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:39,987:INFO:Calculating mean and std
2024-12-20 18:03:39,987:INFO:Creating metrics dataframe
2024-12-20 18:03:39,987:INFO:Uploading results into container
2024-12-20 18:03:39,987:INFO:Uploading model into container now
2024-12-20 18:03:39,987:INFO:_master_model_container: 2
2024-12-20 18:03:39,987:INFO:_display_container: 2
2024-12-20 18:03:39,987:INFO:Lasso(random_state=2586)
2024-12-20 18:03:39,987:INFO:create_model() successfully completed......................................
2024-12-20 18:03:40,083:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:40,083:INFO:Creating metrics dataframe
2024-12-20 18:03:40,099:INFO:Initializing Ridge Regression
2024-12-20 18:03:40,099:INFO:Total runtime is 0.005947065353393555 minutes
2024-12-20 18:03:40,103:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:40,103:INFO:Initializing create_model()
2024-12-20 18:03:40,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:40,103:INFO:Checking exceptions
2024-12-20 18:03:40,103:INFO:Importing libraries
2024-12-20 18:03:40,103:INFO:Copying training dataset
2024-12-20 18:03:40,107:INFO:Defining folds
2024-12-20 18:03:40,107:INFO:Declaring metric variables
2024-12-20 18:03:40,109:INFO:Importing untrained model
2024-12-20 18:03:40,112:INFO:Ridge Regression Imported successfully
2024-12-20 18:03:40,112:INFO:Starting cross validation
2024-12-20 18:03:40,117:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:40,160:INFO:Calculating mean and std
2024-12-20 18:03:40,160:INFO:Creating metrics dataframe
2024-12-20 18:03:40,160:INFO:Uploading results into container
2024-12-20 18:03:40,160:INFO:Uploading model into container now
2024-12-20 18:03:40,160:INFO:_master_model_container: 3
2024-12-20 18:03:40,160:INFO:_display_container: 2
2024-12-20 18:03:40,160:INFO:Ridge(random_state=2586)
2024-12-20 18:03:40,160:INFO:create_model() successfully completed......................................
2024-12-20 18:03:40,254:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:40,254:INFO:Creating metrics dataframe
2024-12-20 18:03:40,270:INFO:Initializing Elastic Net
2024-12-20 18:03:40,270:INFO:Total runtime is 0.008800896008809409 minutes
2024-12-20 18:03:40,270:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:40,270:INFO:Initializing create_model()
2024-12-20 18:03:40,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:40,270:INFO:Checking exceptions
2024-12-20 18:03:40,270:INFO:Importing libraries
2024-12-20 18:03:40,270:INFO:Copying training dataset
2024-12-20 18:03:40,277:INFO:Defining folds
2024-12-20 18:03:40,277:INFO:Declaring metric variables
2024-12-20 18:03:40,277:INFO:Importing untrained model
2024-12-20 18:03:40,277:INFO:Elastic Net Imported successfully
2024-12-20 18:03:40,277:INFO:Starting cross validation
2024-12-20 18:03:40,277:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:40,318:INFO:Calculating mean and std
2024-12-20 18:03:40,318:INFO:Creating metrics dataframe
2024-12-20 18:03:40,334:INFO:Uploading results into container
2024-12-20 18:03:40,334:INFO:Uploading model into container now
2024-12-20 18:03:40,334:INFO:_master_model_container: 4
2024-12-20 18:03:40,334:INFO:_display_container: 2
2024-12-20 18:03:40,334:INFO:ElasticNet(random_state=2586)
2024-12-20 18:03:40,334:INFO:create_model() successfully completed......................................
2024-12-20 18:03:40,428:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:40,428:INFO:Creating metrics dataframe
2024-12-20 18:03:40,428:INFO:Initializing Least Angle Regression
2024-12-20 18:03:40,428:INFO:Total runtime is 0.011436116695404053 minutes
2024-12-20 18:03:40,443:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:40,443:INFO:Initializing create_model()
2024-12-20 18:03:40,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:40,443:INFO:Checking exceptions
2024-12-20 18:03:40,443:INFO:Importing libraries
2024-12-20 18:03:40,443:INFO:Copying training dataset
2024-12-20 18:03:40,448:INFO:Defining folds
2024-12-20 18:03:40,448:INFO:Declaring metric variables
2024-12-20 18:03:40,449:INFO:Importing untrained model
2024-12-20 18:03:40,449:INFO:Least Angle Regression Imported successfully
2024-12-20 18:03:40,449:INFO:Starting cross validation
2024-12-20 18:03:40,449:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:40,501:INFO:Calculating mean and std
2024-12-20 18:03:40,501:INFO:Creating metrics dataframe
2024-12-20 18:03:40,501:INFO:Uploading results into container
2024-12-20 18:03:40,501:INFO:Uploading model into container now
2024-12-20 18:03:40,501:INFO:_master_model_container: 5
2024-12-20 18:03:40,501:INFO:_display_container: 2
2024-12-20 18:03:40,501:INFO:Lars(random_state=2586)
2024-12-20 18:03:40,501:INFO:create_model() successfully completed......................................
2024-12-20 18:03:40,594:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:40,594:INFO:Creating metrics dataframe
2024-12-20 18:03:40,610:INFO:Initializing Lasso Least Angle Regression
2024-12-20 18:03:40,610:INFO:Total runtime is 0.01447154680887858 minutes
2024-12-20 18:03:40,610:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:40,610:INFO:Initializing create_model()
2024-12-20 18:03:40,610:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:40,610:INFO:Checking exceptions
2024-12-20 18:03:40,610:INFO:Importing libraries
2024-12-20 18:03:40,610:INFO:Copying training dataset
2024-12-20 18:03:40,618:INFO:Defining folds
2024-12-20 18:03:40,618:INFO:Declaring metric variables
2024-12-20 18:03:40,618:INFO:Importing untrained model
2024-12-20 18:03:40,618:INFO:Lasso Least Angle Regression Imported successfully
2024-12-20 18:03:40,618:INFO:Starting cross validation
2024-12-20 18:03:40,618:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:40,666:INFO:Calculating mean and std
2024-12-20 18:03:40,666:INFO:Creating metrics dataframe
2024-12-20 18:03:40,666:INFO:Uploading results into container
2024-12-20 18:03:40,666:INFO:Uploading model into container now
2024-12-20 18:03:40,666:INFO:_master_model_container: 6
2024-12-20 18:03:40,666:INFO:_display_container: 2
2024-12-20 18:03:40,666:INFO:LassoLars(random_state=2586)
2024-12-20 18:03:40,666:INFO:create_model() successfully completed......................................
2024-12-20 18:03:40,769:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:40,769:INFO:Creating metrics dataframe
2024-12-20 18:03:40,784:INFO:Initializing Orthogonal Matching Pursuit
2024-12-20 18:03:40,784:INFO:Total runtime is 0.0173796812693278 minutes
2024-12-20 18:03:40,784:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:40,784:INFO:Initializing create_model()
2024-12-20 18:03:40,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:40,784:INFO:Checking exceptions
2024-12-20 18:03:40,784:INFO:Importing libraries
2024-12-20 18:03:40,784:INFO:Copying training dataset
2024-12-20 18:03:40,791:INFO:Defining folds
2024-12-20 18:03:40,791:INFO:Declaring metric variables
2024-12-20 18:03:40,793:INFO:Importing untrained model
2024-12-20 18:03:40,798:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-20 18:03:40,803:INFO:Starting cross validation
2024-12-20 18:03:40,804:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:40,848:INFO:Calculating mean and std
2024-12-20 18:03:40,848:INFO:Creating metrics dataframe
2024-12-20 18:03:40,848:INFO:Uploading results into container
2024-12-20 18:03:40,848:INFO:Uploading model into container now
2024-12-20 18:03:40,848:INFO:_master_model_container: 7
2024-12-20 18:03:40,848:INFO:_display_container: 2
2024-12-20 18:03:40,848:INFO:OrthogonalMatchingPursuit()
2024-12-20 18:03:40,848:INFO:create_model() successfully completed......................................
2024-12-20 18:03:40,957:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:40,957:INFO:Creating metrics dataframe
2024-12-20 18:03:40,957:INFO:Initializing Bayesian Ridge
2024-12-20 18:03:40,957:INFO:Total runtime is 0.02025975783665975 minutes
2024-12-20 18:03:40,957:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:40,957:INFO:Initializing create_model()
2024-12-20 18:03:40,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:40,957:INFO:Checking exceptions
2024-12-20 18:03:40,957:INFO:Importing libraries
2024-12-20 18:03:40,957:INFO:Copying training dataset
2024-12-20 18:03:40,971:INFO:Defining folds
2024-12-20 18:03:40,971:INFO:Declaring metric variables
2024-12-20 18:03:40,971:INFO:Importing untrained model
2024-12-20 18:03:40,971:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:03:40,971:INFO:Starting cross validation
2024-12-20 18:03:40,971:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:41,013:INFO:Calculating mean and std
2024-12-20 18:03:41,013:INFO:Creating metrics dataframe
2024-12-20 18:03:41,013:INFO:Uploading results into container
2024-12-20 18:03:41,013:INFO:Uploading model into container now
2024-12-20 18:03:41,013:INFO:_master_model_container: 8
2024-12-20 18:03:41,013:INFO:_display_container: 2
2024-12-20 18:03:41,013:INFO:BayesianRidge()
2024-12-20 18:03:41,013:INFO:create_model() successfully completed......................................
2024-12-20 18:03:41,132:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:41,132:INFO:Creating metrics dataframe
2024-12-20 18:03:41,132:INFO:Initializing Passive Aggressive Regressor
2024-12-20 18:03:41,132:INFO:Total runtime is 0.023166994253794353 minutes
2024-12-20 18:03:41,132:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:41,132:INFO:Initializing create_model()
2024-12-20 18:03:41,132:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:41,132:INFO:Checking exceptions
2024-12-20 18:03:41,132:INFO:Importing libraries
2024-12-20 18:03:41,132:INFO:Copying training dataset
2024-12-20 18:03:41,150:INFO:Defining folds
2024-12-20 18:03:41,150:INFO:Declaring metric variables
2024-12-20 18:03:41,152:INFO:Importing untrained model
2024-12-20 18:03:41,152:INFO:Passive Aggressive Regressor Imported successfully
2024-12-20 18:03:41,152:INFO:Starting cross validation
2024-12-20 18:03:41,152:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:41,207:INFO:Calculating mean and std
2024-12-20 18:03:41,207:INFO:Creating metrics dataframe
2024-12-20 18:03:41,207:INFO:Uploading results into container
2024-12-20 18:03:41,207:INFO:Uploading model into container now
2024-12-20 18:03:41,207:INFO:_master_model_container: 9
2024-12-20 18:03:41,207:INFO:_display_container: 2
2024-12-20 18:03:41,207:INFO:PassiveAggressiveRegressor(random_state=2586)
2024-12-20 18:03:41,207:INFO:create_model() successfully completed......................................
2024-12-20 18:03:41,318:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:41,318:INFO:Creating metrics dataframe
2024-12-20 18:03:41,318:INFO:Initializing Huber Regressor
2024-12-20 18:03:41,318:INFO:Total runtime is 0.02626781463623047 minutes
2024-12-20 18:03:41,318:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:41,318:INFO:Initializing create_model()
2024-12-20 18:03:41,318:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:41,318:INFO:Checking exceptions
2024-12-20 18:03:41,318:INFO:Importing libraries
2024-12-20 18:03:41,318:INFO:Copying training dataset
2024-12-20 18:03:41,335:INFO:Defining folds
2024-12-20 18:03:41,336:INFO:Declaring metric variables
2024-12-20 18:03:41,338:INFO:Importing untrained model
2024-12-20 18:03:41,338:INFO:Huber Regressor Imported successfully
2024-12-20 18:03:41,338:INFO:Starting cross validation
2024-12-20 18:03:41,338:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:41,374:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,374:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,374:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,374:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,389:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,389:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,389:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,389:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,405:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,405:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-12-20 18:03:41,405:INFO:Calculating mean and std
2024-12-20 18:03:41,405:INFO:Creating metrics dataframe
2024-12-20 18:03:41,405:INFO:Uploading results into container
2024-12-20 18:03:41,405:INFO:Uploading model into container now
2024-12-20 18:03:41,405:INFO:_master_model_container: 10
2024-12-20 18:03:41,405:INFO:_display_container: 2
2024-12-20 18:03:41,405:INFO:HuberRegressor()
2024-12-20 18:03:41,405:INFO:create_model() successfully completed......................................
2024-12-20 18:03:41,514:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:41,514:INFO:Creating metrics dataframe
2024-12-20 18:03:41,514:INFO:Initializing K Neighbors Regressor
2024-12-20 18:03:41,514:INFO:Total runtime is 0.02954619328180949 minutes
2024-12-20 18:03:41,514:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:41,514:INFO:Initializing create_model()
2024-12-20 18:03:41,514:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:41,514:INFO:Checking exceptions
2024-12-20 18:03:41,514:INFO:Importing libraries
2024-12-20 18:03:41,514:INFO:Copying training dataset
2024-12-20 18:03:41,532:INFO:Defining folds
2024-12-20 18:03:41,532:INFO:Declaring metric variables
2024-12-20 18:03:41,533:INFO:Importing untrained model
2024-12-20 18:03:41,533:INFO:K Neighbors Regressor Imported successfully
2024-12-20 18:03:41,533:INFO:Starting cross validation
2024-12-20 18:03:41,533:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:41,591:INFO:Calculating mean and std
2024-12-20 18:03:41,591:INFO:Creating metrics dataframe
2024-12-20 18:03:41,591:INFO:Uploading results into container
2024-12-20 18:03:41,591:INFO:Uploading model into container now
2024-12-20 18:03:41,591:INFO:_master_model_container: 11
2024-12-20 18:03:41,591:INFO:_display_container: 2
2024-12-20 18:03:41,591:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-20 18:03:41,591:INFO:create_model() successfully completed......................................
2024-12-20 18:03:41,701:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:41,701:INFO:Creating metrics dataframe
2024-12-20 18:03:41,716:INFO:Initializing Decision Tree Regressor
2024-12-20 18:03:41,716:INFO:Total runtime is 0.03291209936141968 minutes
2024-12-20 18:03:41,716:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:41,716:INFO:Initializing create_model()
2024-12-20 18:03:41,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:41,716:INFO:Checking exceptions
2024-12-20 18:03:41,716:INFO:Importing libraries
2024-12-20 18:03:41,716:INFO:Copying training dataset
2024-12-20 18:03:41,721:INFO:Defining folds
2024-12-20 18:03:41,721:INFO:Declaring metric variables
2024-12-20 18:03:41,721:INFO:Importing untrained model
2024-12-20 18:03:41,721:INFO:Decision Tree Regressor Imported successfully
2024-12-20 18:03:41,721:INFO:Starting cross validation
2024-12-20 18:03:41,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:41,785:INFO:Calculating mean and std
2024-12-20 18:03:41,785:INFO:Creating metrics dataframe
2024-12-20 18:03:41,785:INFO:Uploading results into container
2024-12-20 18:03:41,785:INFO:Uploading model into container now
2024-12-20 18:03:41,785:INFO:_master_model_container: 12
2024-12-20 18:03:41,785:INFO:_display_container: 2
2024-12-20 18:03:41,785:INFO:DecisionTreeRegressor(random_state=2586)
2024-12-20 18:03:41,785:INFO:create_model() successfully completed......................................
2024-12-20 18:03:41,879:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:41,879:INFO:Creating metrics dataframe
2024-12-20 18:03:41,895:INFO:Initializing Random Forest Regressor
2024-12-20 18:03:41,895:INFO:Total runtime is 0.03588490883509318 minutes
2024-12-20 18:03:41,895:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:41,895:INFO:Initializing create_model()
2024-12-20 18:03:41,895:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:41,895:INFO:Checking exceptions
2024-12-20 18:03:41,895:INFO:Importing libraries
2024-12-20 18:03:41,895:INFO:Copying training dataset
2024-12-20 18:03:41,906:INFO:Defining folds
2024-12-20 18:03:41,906:INFO:Declaring metric variables
2024-12-20 18:03:41,908:INFO:Importing untrained model
2024-12-20 18:03:41,908:INFO:Random Forest Regressor Imported successfully
2024-12-20 18:03:41,908:INFO:Starting cross validation
2024-12-20 18:03:41,908:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:42,428:INFO:Calculating mean and std
2024-12-20 18:03:42,428:INFO:Creating metrics dataframe
2024-12-20 18:03:42,428:INFO:Uploading results into container
2024-12-20 18:03:42,428:INFO:Uploading model into container now
2024-12-20 18:03:42,436:INFO:_master_model_container: 13
2024-12-20 18:03:42,436:INFO:_display_container: 2
2024-12-20 18:03:42,436:INFO:RandomForestRegressor(n_jobs=-1, random_state=2586)
2024-12-20 18:03:42,436:INFO:create_model() successfully completed......................................
2024-12-20 18:03:42,547:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:42,547:INFO:Creating metrics dataframe
2024-12-20 18:03:42,554:INFO:Initializing Extra Trees Regressor
2024-12-20 18:03:42,554:INFO:Total runtime is 0.046878190835316975 minutes
2024-12-20 18:03:42,554:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:42,554:INFO:Initializing create_model()
2024-12-20 18:03:42,554:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:42,554:INFO:Checking exceptions
2024-12-20 18:03:42,554:INFO:Importing libraries
2024-12-20 18:03:42,554:INFO:Copying training dataset
2024-12-20 18:03:42,561:INFO:Defining folds
2024-12-20 18:03:42,561:INFO:Declaring metric variables
2024-12-20 18:03:42,563:INFO:Importing untrained model
2024-12-20 18:03:42,564:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:03:42,570:INFO:Starting cross validation
2024-12-20 18:03:42,570:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:42,871:INFO:Calculating mean and std
2024-12-20 18:03:42,871:INFO:Creating metrics dataframe
2024-12-20 18:03:42,871:INFO:Uploading results into container
2024-12-20 18:03:42,871:INFO:Uploading model into container now
2024-12-20 18:03:42,871:INFO:_master_model_container: 14
2024-12-20 18:03:42,871:INFO:_display_container: 2
2024-12-20 18:03:42,871:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2586)
2024-12-20 18:03:42,871:INFO:create_model() successfully completed......................................
2024-12-20 18:03:42,965:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:42,965:INFO:Creating metrics dataframe
2024-12-20 18:03:42,981:INFO:Initializing AdaBoost Regressor
2024-12-20 18:03:42,981:INFO:Total runtime is 0.053982877731323244 minutes
2024-12-20 18:03:42,981:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:42,981:INFO:Initializing create_model()
2024-12-20 18:03:42,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:42,981:INFO:Checking exceptions
2024-12-20 18:03:42,981:INFO:Importing libraries
2024-12-20 18:03:42,981:INFO:Copying training dataset
2024-12-20 18:03:42,992:INFO:Defining folds
2024-12-20 18:03:42,992:INFO:Declaring metric variables
2024-12-20 18:03:42,992:INFO:Importing untrained model
2024-12-20 18:03:42,992:INFO:AdaBoost Regressor Imported successfully
2024-12-20 18:03:42,992:INFO:Starting cross validation
2024-12-20 18:03:42,992:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:43,194:INFO:Calculating mean and std
2024-12-20 18:03:43,194:INFO:Creating metrics dataframe
2024-12-20 18:03:43,210:INFO:Uploading results into container
2024-12-20 18:03:43,210:INFO:Uploading model into container now
2024-12-20 18:03:43,210:INFO:_master_model_container: 15
2024-12-20 18:03:43,210:INFO:_display_container: 2
2024-12-20 18:03:43,210:INFO:AdaBoostRegressor(random_state=2586)
2024-12-20 18:03:43,210:INFO:create_model() successfully completed......................................
2024-12-20 18:03:43,313:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:43,313:INFO:Creating metrics dataframe
2024-12-20 18:03:43,313:INFO:Initializing Gradient Boosting Regressor
2024-12-20 18:03:43,313:INFO:Total runtime is 0.059520355860392254 minutes
2024-12-20 18:03:43,313:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:43,313:INFO:Initializing create_model()
2024-12-20 18:03:43,313:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:43,313:INFO:Checking exceptions
2024-12-20 18:03:43,313:INFO:Importing libraries
2024-12-20 18:03:43,313:INFO:Copying training dataset
2024-12-20 18:03:43,328:INFO:Defining folds
2024-12-20 18:03:43,328:INFO:Declaring metric variables
2024-12-20 18:03:43,330:INFO:Importing untrained model
2024-12-20 18:03:43,331:INFO:Gradient Boosting Regressor Imported successfully
2024-12-20 18:03:43,331:INFO:Starting cross validation
2024-12-20 18:03:43,331:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:43,633:INFO:Calculating mean and std
2024-12-20 18:03:43,633:INFO:Creating metrics dataframe
2024-12-20 18:03:43,633:INFO:Uploading results into container
2024-12-20 18:03:43,633:INFO:Uploading model into container now
2024-12-20 18:03:43,633:INFO:_master_model_container: 16
2024-12-20 18:03:43,633:INFO:_display_container: 2
2024-12-20 18:03:43,633:INFO:GradientBoostingRegressor(random_state=2586)
2024-12-20 18:03:43,633:INFO:create_model() successfully completed......................................
2024-12-20 18:03:43,749:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:43,749:INFO:Creating metrics dataframe
2024-12-20 18:03:43,749:INFO:Initializing Light Gradient Boosting Machine
2024-12-20 18:03:43,749:INFO:Total runtime is 0.06679369211196899 minutes
2024-12-20 18:03:43,763:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:43,764:INFO:Initializing create_model()
2024-12-20 18:03:43,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:43,764:INFO:Checking exceptions
2024-12-20 18:03:43,764:INFO:Importing libraries
2024-12-20 18:03:43,764:INFO:Copying training dataset
2024-12-20 18:03:43,767:INFO:Defining folds
2024-12-20 18:03:43,767:INFO:Declaring metric variables
2024-12-20 18:03:43,770:INFO:Importing untrained model
2024-12-20 18:03:43,770:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-20 18:03:43,777:INFO:Starting cross validation
2024-12-20 18:03:43,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:44,256:INFO:Calculating mean and std
2024-12-20 18:03:44,256:INFO:Creating metrics dataframe
2024-12-20 18:03:44,256:INFO:Uploading results into container
2024-12-20 18:03:44,256:INFO:Uploading model into container now
2024-12-20 18:03:44,256:INFO:_master_model_container: 17
2024-12-20 18:03:44,256:INFO:_display_container: 2
2024-12-20 18:03:44,256:INFO:LGBMRegressor(n_jobs=-1, random_state=2586)
2024-12-20 18:03:44,256:INFO:create_model() successfully completed......................................
2024-12-20 18:03:44,401:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:44,401:INFO:Creating metrics dataframe
2024-12-20 18:03:44,409:INFO:Initializing Dummy Regressor
2024-12-20 18:03:44,409:INFO:Total runtime is 0.0777801235516866 minutes
2024-12-20 18:03:44,409:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:44,409:INFO:Initializing create_model()
2024-12-20 18:03:44,409:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EE917110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:44,409:INFO:Checking exceptions
2024-12-20 18:03:44,409:INFO:Importing libraries
2024-12-20 18:03:44,409:INFO:Copying training dataset
2024-12-20 18:03:44,417:INFO:Defining folds
2024-12-20 18:03:44,417:INFO:Declaring metric variables
2024-12-20 18:03:44,420:INFO:Importing untrained model
2024-12-20 18:03:44,423:INFO:Dummy Regressor Imported successfully
2024-12-20 18:03:44,424:INFO:Starting cross validation
2024-12-20 18:03:44,429:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:44,473:INFO:Calculating mean and std
2024-12-20 18:03:44,473:INFO:Creating metrics dataframe
2024-12-20 18:03:44,473:INFO:Uploading results into container
2024-12-20 18:03:44,473:INFO:Uploading model into container now
2024-12-20 18:03:44,473:INFO:_master_model_container: 18
2024-12-20 18:03:44,473:INFO:_display_container: 2
2024-12-20 18:03:44,473:INFO:DummyRegressor()
2024-12-20 18:03:44,473:INFO:create_model() successfully completed......................................
2024-12-20 18:03:44,567:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:44,567:INFO:Creating metrics dataframe
2024-12-20 18:03:44,567:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-20 18:03:44,585:INFO:Initializing create_model()
2024-12-20 18:03:44,585:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:44,586:INFO:Checking exceptions
2024-12-20 18:03:44,587:INFO:Importing libraries
2024-12-20 18:03:44,587:INFO:Copying training dataset
2024-12-20 18:03:44,589:INFO:Defining folds
2024-12-20 18:03:44,589:INFO:Declaring metric variables
2024-12-20 18:03:44,589:INFO:Importing untrained model
2024-12-20 18:03:44,589:INFO:Declaring custom model
2024-12-20 18:03:44,589:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:03:44,589:INFO:Cross validation set to False
2024-12-20 18:03:44,589:INFO:Fitting Model
2024-12-20 18:03:44,589:INFO:BayesianRidge()
2024-12-20 18:03:44,589:INFO:create_model() successfully completed......................................
2024-12-20 18:03:44,709:INFO:Initializing create_model()
2024-12-20 18:03:44,709:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=Ridge(random_state=2586), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:44,709:INFO:Checking exceptions
2024-12-20 18:03:44,711:INFO:Importing libraries
2024-12-20 18:03:44,711:INFO:Copying training dataset
2024-12-20 18:03:44,714:INFO:Defining folds
2024-12-20 18:03:44,714:INFO:Declaring metric variables
2024-12-20 18:03:44,714:INFO:Importing untrained model
2024-12-20 18:03:44,714:INFO:Declaring custom model
2024-12-20 18:03:44,714:INFO:Ridge Regression Imported successfully
2024-12-20 18:03:44,714:INFO:Cross validation set to False
2024-12-20 18:03:44,714:INFO:Fitting Model
2024-12-20 18:03:44,714:INFO:Ridge(random_state=2586)
2024-12-20 18:03:44,714:INFO:create_model() successfully completed......................................
2024-12-20 18:03:44,833:INFO:Initializing create_model()
2024-12-20 18:03:44,833:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EFEE2B50>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:44,833:INFO:Checking exceptions
2024-12-20 18:03:44,833:INFO:Importing libraries
2024-12-20 18:03:44,833:INFO:Copying training dataset
2024-12-20 18:03:44,838:INFO:Defining folds
2024-12-20 18:03:44,838:INFO:Declaring metric variables
2024-12-20 18:03:44,838:INFO:Importing untrained model
2024-12-20 18:03:44,838:INFO:Declaring custom model
2024-12-20 18:03:44,838:INFO:Linear Regression Imported successfully
2024-12-20 18:03:44,838:INFO:Cross validation set to False
2024-12-20 18:03:44,838:INFO:Fitting Model
2024-12-20 18:03:44,838:INFO:LinearRegression(n_jobs=-1)
2024-12-20 18:03:44,838:INFO:create_model() successfully completed......................................
2024-12-20 18:03:44,956:INFO:_master_model_container: 18
2024-12-20 18:03:44,956:INFO:_display_container: 2
2024-12-20 18:03:44,956:INFO:[BayesianRidge(), Ridge(random_state=2586), LinearRegression(n_jobs=-1)]
2024-12-20 18:03:44,956:INFO:compare_models() successfully completed......................................
2024-12-20 18:03:53,287:INFO:PyCaret RegressionExperiment
2024-12-20 18:03:53,287:INFO:Logging name: reg-default-name
2024-12-20 18:03:53,287:INFO:ML Usecase: MLUsecase.REGRESSION
2024-12-20 18:03:53,287:INFO:version 3.3.2
2024-12-20 18:03:53,287:INFO:Initializing setup()
2024-12-20 18:03:53,287:INFO:self.USI: ef6a
2024-12-20 18:03:53,287:INFO:self._variable_keys: {'_available_plots', 'exp_id', 'seed', '_ml_usecase', 'fold_generator', 'log_plots_param', 'logging_param', 'USI', 'transform_target_param', 'fold_shuffle_param', 'html_param', 'X_train', 'idx', 'exp_name_log', 'gpu_param', 'memory', 'pipeline', 'fold_groups_param', 'target_param', 'data', 'gpu_n_jobs_param', 'X_test', 'X', 'y', 'y_train', 'y_test', 'n_jobs_param'}
2024-12-20 18:03:53,287:INFO:Checking environment
2024-12-20 18:03:53,287:INFO:python_version: 3.11.7
2024-12-20 18:03:53,287:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2024-12-20 18:03:53,287:INFO:machine: AMD64
2024-12-20 18:03:53,287:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-20 18:03:53,287:INFO:Memory: svmem(total=16539455488, available=2396512256, percent=85.5, used=14142943232, free=2396512256)
2024-12-20 18:03:53,287:INFO:Physical Core: 8
2024-12-20 18:03:53,288:INFO:Logical Core: 16
2024-12-20 18:03:53,288:INFO:Checking libraries
2024-12-20 18:03:53,288:INFO:System:
2024-12-20 18:03:53,288:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2024-12-20 18:03:53,288:INFO:executable: C:\Users\MOKSH\anaconda3\python.exe
2024-12-20 18:03:53,288:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-20 18:03:53,288:INFO:PyCaret required dependencies:
2024-12-20 18:03:53,288:INFO:                 pip: 23.3.1
2024-12-20 18:03:53,288:INFO:          setuptools: 68.2.2
2024-12-20 18:03:53,288:INFO:             pycaret: 3.3.2
2024-12-20 18:03:53,288:INFO:             IPython: 8.20.0
2024-12-20 18:03:53,288:INFO:          ipywidgets: 7.6.5
2024-12-20 18:03:53,288:INFO:                tqdm: 4.65.0
2024-12-20 18:03:53,288:INFO:               numpy: 1.26.4
2024-12-20 18:03:53,288:INFO:              pandas: 2.1.4
2024-12-20 18:03:53,288:INFO:              jinja2: 3.1.3
2024-12-20 18:03:53,288:INFO:               scipy: 1.11.4
2024-12-20 18:03:53,288:INFO:              joblib: 1.2.0
2024-12-20 18:03:53,288:INFO:             sklearn: 1.4.2
2024-12-20 18:03:53,288:INFO:                pyod: 2.0.2
2024-12-20 18:03:53,288:INFO:            imblearn: 0.12.4
2024-12-20 18:03:53,288:INFO:   category_encoders: 2.6.4
2024-12-20 18:03:53,288:INFO:            lightgbm: 4.5.0
2024-12-20 18:03:53,288:INFO:               numba: 0.59.0
2024-12-20 18:03:53,288:INFO:            requests: 2.32.3
2024-12-20 18:03:53,288:INFO:          matplotlib: 3.7.5
2024-12-20 18:03:53,288:INFO:          scikitplot: 0.3.7
2024-12-20 18:03:53,288:INFO:         yellowbrick: 1.5
2024-12-20 18:03:53,288:INFO:              plotly: 5.24.1
2024-12-20 18:03:53,289:INFO:    plotly-resampler: Not installed
2024-12-20 18:03:53,289:INFO:             kaleido: 0.2.1
2024-12-20 18:03:53,289:INFO:           schemdraw: 0.15
2024-12-20 18:03:53,289:INFO:         statsmodels: 0.14.0
2024-12-20 18:03:53,289:INFO:              sktime: 0.26.0
2024-12-20 18:03:53,289:INFO:               tbats: 1.1.3
2024-12-20 18:03:53,289:INFO:            pmdarima: 2.0.4
2024-12-20 18:03:53,289:INFO:              psutil: 5.9.0
2024-12-20 18:03:53,289:INFO:          markupsafe: 2.1.3
2024-12-20 18:03:53,289:INFO:             pickle5: Not installed
2024-12-20 18:03:53,289:INFO:         cloudpickle: 2.2.1
2024-12-20 18:03:53,289:INFO:         deprecation: 2.1.0
2024-12-20 18:03:53,289:INFO:              xxhash: 3.5.0
2024-12-20 18:03:53,289:INFO:           wurlitzer: Not installed
2024-12-20 18:03:53,289:INFO:PyCaret optional dependencies:
2024-12-20 18:03:53,289:INFO:                shap: Not installed
2024-12-20 18:03:53,289:INFO:           interpret: Not installed
2024-12-20 18:03:53,289:INFO:                umap: Not installed
2024-12-20 18:03:53,290:INFO:     ydata_profiling: Not installed
2024-12-20 18:03:53,290:INFO:  explainerdashboard: Not installed
2024-12-20 18:03:53,290:INFO:             autoviz: Not installed
2024-12-20 18:03:53,290:INFO:           fairlearn: Not installed
2024-12-20 18:03:53,290:INFO:          deepchecks: Not installed
2024-12-20 18:03:53,290:INFO:             xgboost: Not installed
2024-12-20 18:03:53,290:INFO:            catboost: Not installed
2024-12-20 18:03:53,290:INFO:              kmodes: Not installed
2024-12-20 18:03:53,290:INFO:             mlxtend: Not installed
2024-12-20 18:03:53,290:INFO:       statsforecast: Not installed
2024-12-20 18:03:53,290:INFO:        tune_sklearn: Not installed
2024-12-20 18:03:53,290:INFO:                 ray: Not installed
2024-12-20 18:03:53,290:INFO:            hyperopt: Not installed
2024-12-20 18:03:53,290:INFO:              optuna: Not installed
2024-12-20 18:03:53,290:INFO:               skopt: Not installed
2024-12-20 18:03:53,290:INFO:              mlflow: Not installed
2024-12-20 18:03:53,290:INFO:              gradio: Not installed
2024-12-20 18:03:53,290:INFO:             fastapi: Not installed
2024-12-20 18:03:53,290:INFO:             uvicorn: Not installed
2024-12-20 18:03:53,290:INFO:              m2cgen: Not installed
2024-12-20 18:03:53,290:INFO:           evidently: Not installed
2024-12-20 18:03:53,290:INFO:               fugue: Not installed
2024-12-20 18:03:53,290:INFO:           streamlit: 1.30.0
2024-12-20 18:03:53,290:INFO:             prophet: Not installed
2024-12-20 18:03:53,290:INFO:None
2024-12-20 18:03:53,290:INFO:Set up data.
2024-12-20 18:03:53,294:INFO:Set up folding strategy.
2024-12-20 18:03:53,294:INFO:Set up train/test split.
2024-12-20 18:03:53,298:INFO:Set up index.
2024-12-20 18:03:53,298:INFO:Assigning column types.
2024-12-20 18:03:53,299:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-20 18:03:53,299:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,306:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,309:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,353:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,384:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,384:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,384:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,401:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,432:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,479:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,479:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-12-20 18:03:53,479:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,479:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,526:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,557:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,557:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,573:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,604:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,651:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,651:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-12-20 18:03:53,651:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,698:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,729:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,729:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,729:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,745:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,776:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,807:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,823:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,823:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-12-20 18:03:53,870:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,909:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,909:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,992:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-20 18:03:53,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,999:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:53,999:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-20 18:03:54,047:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:54,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,138:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-12-20 18:03:54,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,173:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-12-20 18:03:54,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,351:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,352:INFO:Preparing preprocessing pipeline...
2024-12-20 18:03:54,352:INFO:Set up simple imputation.
2024-12-20 18:03:54,352:INFO:Set up column transformation.
2024-12-20 18:03:54,352:INFO:Set up feature normalization.
2024-12-20 18:03:54,399:INFO:Finished creating preprocessing pipeline.
2024-12-20 18:03:54,403:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\MOKSH\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-12-20 18:03:54,403:INFO:Creating final display dataframe.
2024-12-20 18:03:54,481:INFO:Setup _display_container:                     Description             Value
0                    Session id              6107
1                        Target           Target1
2                   Target type        Regression
3           Original data shape        (1000, 16)
4        Transformed data shape        (1000, 16)
5   Transformed train set shape         (700, 16)
6    Transformed test set shape         (300, 16)
7              Numeric features                15
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Transformation              True
13        Transformation method       yeo-johnson
14                    Normalize              True
15             Normalize method            zscore
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              ef6a
2024-12-20 18:03:54,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,654:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-20 18:03:54,654:INFO:setup() successfully completed in 1.37s...............
2024-12-20 18:03:56,313:INFO:Initializing finalize_model()
2024-12-20 18:03:56,314:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:03:56,314:INFO:Finalizing BayesianRidge()
2024-12-20 18:03:56,317:INFO:Initializing create_model()
2024-12-20 18:03:56,317:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:56,317:INFO:Checking exceptions
2024-12-20 18:03:56,318:INFO:Importing libraries
2024-12-20 18:03:56,319:INFO:Copying training dataset
2024-12-20 18:03:56,319:INFO:Defining folds
2024-12-20 18:03:56,319:INFO:Declaring metric variables
2024-12-20 18:03:56,319:INFO:Importing untrained model
2024-12-20 18:03:56,319:INFO:Declaring custom model
2024-12-20 18:03:56,320:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:03:56,320:INFO:Cross validation set to False
2024-12-20 18:03:56,320:INFO:Fitting Model
2024-12-20 18:03:56,346:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:03:56,346:INFO:create_model() successfully completed......................................
2024-12-20 18:03:56,503:INFO:_master_model_container: 0
2024-12-20 18:03:56,503:INFO:_display_container: 1
2024-12-20 18:03:56,503:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:03:56,503:INFO:finalize_model() successfully completed......................................
2024-12-20 18:03:56,652:INFO:Initializing finalize_model()
2024-12-20 18:03:56,652:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=2586), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:03:56,652:INFO:Finalizing Ridge(random_state=2586)
2024-12-20 18:03:56,652:INFO:Initializing create_model()
2024-12-20 18:03:56,652:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=2586), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:56,652:INFO:Checking exceptions
2024-12-20 18:03:56,652:INFO:Importing libraries
2024-12-20 18:03:56,652:INFO:Copying training dataset
2024-12-20 18:03:56,652:INFO:Defining folds
2024-12-20 18:03:56,652:INFO:Declaring metric variables
2024-12-20 18:03:56,652:INFO:Importing untrained model
2024-12-20 18:03:56,652:INFO:Declaring custom model
2024-12-20 18:03:56,652:INFO:Ridge Regression Imported successfully
2024-12-20 18:03:56,667:INFO:Cross validation set to False
2024-12-20 18:03:56,667:INFO:Fitting Model
2024-12-20 18:03:56,698:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=2586))])
2024-12-20 18:03:56,698:INFO:create_model() successfully completed......................................
2024-12-20 18:03:56,823:INFO:_master_model_container: 0
2024-12-20 18:03:56,823:INFO:_display_container: 1
2024-12-20 18:03:56,823:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=2586))])
2024-12-20 18:03:56,823:INFO:finalize_model() successfully completed......................................
2024-12-20 18:03:56,950:INFO:Initializing finalize_model()
2024-12-20 18:03:56,950:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:03:56,950:INFO:Finalizing LinearRegression(n_jobs=-1)
2024-12-20 18:03:56,950:INFO:Initializing create_model()
2024-12-20 18:03:56,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:56,950:INFO:Checking exceptions
2024-12-20 18:03:56,950:INFO:Importing libraries
2024-12-20 18:03:56,950:INFO:Copying training dataset
2024-12-20 18:03:56,950:INFO:Defining folds
2024-12-20 18:03:56,950:INFO:Declaring metric variables
2024-12-20 18:03:56,950:INFO:Importing untrained model
2024-12-20 18:03:56,950:INFO:Declaring custom model
2024-12-20 18:03:56,957:INFO:Linear Regression Imported successfully
2024-12-20 18:03:56,957:INFO:Cross validation set to False
2024-12-20 18:03:56,957:INFO:Fitting Model
2024-12-20 18:03:56,992:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:03:56,992:INFO:create_model() successfully completed......................................
2024-12-20 18:03:57,089:INFO:_master_model_container: 0
2024-12-20 18:03:57,089:INFO:_display_container: 1
2024-12-20 18:03:57,104:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:03:57,104:INFO:finalize_model() successfully completed......................................
2024-12-20 18:03:57,208:INFO:Initializing predict_model()
2024-12-20 18:03:57,208:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F18CF6A0>)
2024-12-20 18:03:57,208:INFO:Checking exceptions
2024-12-20 18:03:57,208:INFO:Preloading libraries
2024-12-20 18:03:57,242:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:03:57,367:INFO:Initializing predict_model()
2024-12-20 18:03:57,367:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=2586))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190E55CADE0>)
2024-12-20 18:03:57,367:INFO:Checking exceptions
2024-12-20 18:03:57,367:INFO:Preloading libraries
2024-12-20 18:03:57,416:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:03:57,543:INFO:Initializing predict_model()
2024-12-20 18:03:57,544:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190E55CADE0>)
2024-12-20 18:03:57,544:INFO:Checking exceptions
2024-12-20 18:03:57,544:INFO:Preloading libraries
2024-12-20 18:03:57,591:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:03:58,952:INFO:Initializing compare_models()
2024-12-20 18:03:58,952:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-20 18:03:58,952:INFO:Checking exceptions
2024-12-20 18:03:58,954:INFO:Preparing display monitor
2024-12-20 18:03:58,965:INFO:Initializing Linear Regression
2024-12-20 18:03:58,965:INFO:Total runtime is 0.0 minutes
2024-12-20 18:03:58,978:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:58,978:INFO:Initializing create_model()
2024-12-20 18:03:58,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:58,978:INFO:Checking exceptions
2024-12-20 18:03:58,979:INFO:Importing libraries
2024-12-20 18:03:58,979:INFO:Copying training dataset
2024-12-20 18:03:58,984:INFO:Defining folds
2024-12-20 18:03:58,985:INFO:Declaring metric variables
2024-12-20 18:03:58,987:INFO:Importing untrained model
2024-12-20 18:03:58,990:INFO:Linear Regression Imported successfully
2024-12-20 18:03:58,993:INFO:Starting cross validation
2024-12-20 18:03:58,993:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:59,083:INFO:Calculating mean and std
2024-12-20 18:03:59,083:INFO:Creating metrics dataframe
2024-12-20 18:03:59,083:INFO:Uploading results into container
2024-12-20 18:03:59,083:INFO:Uploading model into container now
2024-12-20 18:03:59,083:INFO:_master_model_container: 1
2024-12-20 18:03:59,083:INFO:_display_container: 5
2024-12-20 18:03:59,083:INFO:LinearRegression(n_jobs=-1)
2024-12-20 18:03:59,083:INFO:create_model() successfully completed......................................
2024-12-20 18:03:59,179:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:59,179:INFO:Creating metrics dataframe
2024-12-20 18:03:59,195:INFO:Initializing Lasso Regression
2024-12-20 18:03:59,195:INFO:Total runtime is 0.0038359800974527994 minutes
2024-12-20 18:03:59,200:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:59,200:INFO:Initializing create_model()
2024-12-20 18:03:59,200:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:59,200:INFO:Checking exceptions
2024-12-20 18:03:59,200:INFO:Importing libraries
2024-12-20 18:03:59,200:INFO:Copying training dataset
2024-12-20 18:03:59,204:INFO:Defining folds
2024-12-20 18:03:59,204:INFO:Declaring metric variables
2024-12-20 18:03:59,207:INFO:Importing untrained model
2024-12-20 18:03:59,209:INFO:Lasso Regression Imported successfully
2024-12-20 18:03:59,209:INFO:Starting cross validation
2024-12-20 18:03:59,216:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:59,304:INFO:Calculating mean and std
2024-12-20 18:03:59,304:INFO:Creating metrics dataframe
2024-12-20 18:03:59,304:INFO:Uploading results into container
2024-12-20 18:03:59,304:INFO:Uploading model into container now
2024-12-20 18:03:59,304:INFO:_master_model_container: 2
2024-12-20 18:03:59,304:INFO:_display_container: 5
2024-12-20 18:03:59,304:INFO:Lasso(random_state=6107)
2024-12-20 18:03:59,304:INFO:create_model() successfully completed......................................
2024-12-20 18:03:59,398:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:59,398:INFO:Creating metrics dataframe
2024-12-20 18:03:59,414:INFO:Initializing Ridge Regression
2024-12-20 18:03:59,414:INFO:Total runtime is 0.007482012112935385 minutes
2024-12-20 18:03:59,414:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:59,414:INFO:Initializing create_model()
2024-12-20 18:03:59,414:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:59,414:INFO:Checking exceptions
2024-12-20 18:03:59,414:INFO:Importing libraries
2024-12-20 18:03:59,414:INFO:Copying training dataset
2024-12-20 18:03:59,420:INFO:Defining folds
2024-12-20 18:03:59,420:INFO:Declaring metric variables
2024-12-20 18:03:59,422:INFO:Importing untrained model
2024-12-20 18:03:59,422:INFO:Ridge Regression Imported successfully
2024-12-20 18:03:59,422:INFO:Starting cross validation
2024-12-20 18:03:59,422:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:59,520:INFO:Calculating mean and std
2024-12-20 18:03:59,520:INFO:Creating metrics dataframe
2024-12-20 18:03:59,520:INFO:Uploading results into container
2024-12-20 18:03:59,520:INFO:Uploading model into container now
2024-12-20 18:03:59,520:INFO:_master_model_container: 3
2024-12-20 18:03:59,520:INFO:_display_container: 5
2024-12-20 18:03:59,520:INFO:Ridge(random_state=6107)
2024-12-20 18:03:59,520:INFO:create_model() successfully completed......................................
2024-12-20 18:03:59,632:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:59,632:INFO:Creating metrics dataframe
2024-12-20 18:03:59,639:INFO:Initializing Elastic Net
2024-12-20 18:03:59,639:INFO:Total runtime is 0.011226248741149903 minutes
2024-12-20 18:03:59,639:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:59,639:INFO:Initializing create_model()
2024-12-20 18:03:59,639:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:59,639:INFO:Checking exceptions
2024-12-20 18:03:59,639:INFO:Importing libraries
2024-12-20 18:03:59,639:INFO:Copying training dataset
2024-12-20 18:03:59,646:INFO:Defining folds
2024-12-20 18:03:59,647:INFO:Declaring metric variables
2024-12-20 18:03:59,649:INFO:Importing untrained model
2024-12-20 18:03:59,651:INFO:Elastic Net Imported successfully
2024-12-20 18:03:59,655:INFO:Starting cross validation
2024-12-20 18:03:59,655:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:59,758:INFO:Calculating mean and std
2024-12-20 18:03:59,758:INFO:Creating metrics dataframe
2024-12-20 18:03:59,759:INFO:Uploading results into container
2024-12-20 18:03:59,760:INFO:Uploading model into container now
2024-12-20 18:03:59,760:INFO:_master_model_container: 4
2024-12-20 18:03:59,760:INFO:_display_container: 5
2024-12-20 18:03:59,760:INFO:ElasticNet(random_state=6107)
2024-12-20 18:03:59,760:INFO:create_model() successfully completed......................................
2024-12-20 18:03:59,864:INFO:SubProcess create_model() end ==================================
2024-12-20 18:03:59,864:INFO:Creating metrics dataframe
2024-12-20 18:03:59,869:INFO:Initializing Least Angle Regression
2024-12-20 18:03:59,870:INFO:Total runtime is 0.015082502365112306 minutes
2024-12-20 18:03:59,872:INFO:SubProcess create_model() called ==================================
2024-12-20 18:03:59,872:INFO:Initializing create_model()
2024-12-20 18:03:59,872:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:03:59,872:INFO:Checking exceptions
2024-12-20 18:03:59,872:INFO:Importing libraries
2024-12-20 18:03:59,872:INFO:Copying training dataset
2024-12-20 18:03:59,875:INFO:Defining folds
2024-12-20 18:03:59,876:INFO:Declaring metric variables
2024-12-20 18:03:59,882:INFO:Importing untrained model
2024-12-20 18:03:59,883:INFO:Least Angle Regression Imported successfully
2024-12-20 18:03:59,888:INFO:Starting cross validation
2024-12-20 18:03:59,888:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:03:59,994:INFO:Calculating mean and std
2024-12-20 18:03:59,995:INFO:Creating metrics dataframe
2024-12-20 18:03:59,996:INFO:Uploading results into container
2024-12-20 18:03:59,997:INFO:Uploading model into container now
2024-12-20 18:03:59,997:INFO:_master_model_container: 5
2024-12-20 18:03:59,997:INFO:_display_container: 5
2024-12-20 18:03:59,997:INFO:Lars(random_state=6107)
2024-12-20 18:03:59,997:INFO:create_model() successfully completed......................................
2024-12-20 18:04:00,105:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:00,105:INFO:Creating metrics dataframe
2024-12-20 18:04:00,110:INFO:Initializing Lasso Least Angle Regression
2024-12-20 18:04:00,110:INFO:Total runtime is 0.019080487887064616 minutes
2024-12-20 18:04:00,113:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:00,113:INFO:Initializing create_model()
2024-12-20 18:04:00,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:00,113:INFO:Checking exceptions
2024-12-20 18:04:00,113:INFO:Importing libraries
2024-12-20 18:04:00,113:INFO:Copying training dataset
2024-12-20 18:04:00,116:INFO:Defining folds
2024-12-20 18:04:00,117:INFO:Declaring metric variables
2024-12-20 18:04:00,119:INFO:Importing untrained model
2024-12-20 18:04:00,121:INFO:Lasso Least Angle Regression Imported successfully
2024-12-20 18:04:00,124:INFO:Starting cross validation
2024-12-20 18:04:00,124:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:00,221:INFO:Calculating mean and std
2024-12-20 18:04:00,221:INFO:Creating metrics dataframe
2024-12-20 18:04:00,221:INFO:Uploading results into container
2024-12-20 18:04:00,221:INFO:Uploading model into container now
2024-12-20 18:04:00,221:INFO:_master_model_container: 6
2024-12-20 18:04:00,221:INFO:_display_container: 5
2024-12-20 18:04:00,221:INFO:LassoLars(random_state=6107)
2024-12-20 18:04:00,221:INFO:create_model() successfully completed......................................
2024-12-20 18:04:00,315:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:00,315:INFO:Creating metrics dataframe
2024-12-20 18:04:00,331:INFO:Initializing Orthogonal Matching Pursuit
2024-12-20 18:04:00,331:INFO:Total runtime is 0.022766506671905516 minutes
2024-12-20 18:04:00,331:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:00,331:INFO:Initializing create_model()
2024-12-20 18:04:00,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:00,331:INFO:Checking exceptions
2024-12-20 18:04:00,331:INFO:Importing libraries
2024-12-20 18:04:00,331:INFO:Copying training dataset
2024-12-20 18:04:00,340:INFO:Defining folds
2024-12-20 18:04:00,340:INFO:Declaring metric variables
2024-12-20 18:04:00,340:INFO:Importing untrained model
2024-12-20 18:04:00,340:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-20 18:04:00,340:INFO:Starting cross validation
2024-12-20 18:04:00,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:00,435:INFO:Calculating mean and std
2024-12-20 18:04:00,435:INFO:Creating metrics dataframe
2024-12-20 18:04:00,435:INFO:Uploading results into container
2024-12-20 18:04:00,435:INFO:Uploading model into container now
2024-12-20 18:04:00,435:INFO:_master_model_container: 7
2024-12-20 18:04:00,435:INFO:_display_container: 5
2024-12-20 18:04:00,435:INFO:OrthogonalMatchingPursuit()
2024-12-20 18:04:00,435:INFO:create_model() successfully completed......................................
2024-12-20 18:04:00,529:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:00,529:INFO:Creating metrics dataframe
2024-12-20 18:04:00,544:INFO:Initializing Bayesian Ridge
2024-12-20 18:04:00,544:INFO:Total runtime is 0.02632153034210205 minutes
2024-12-20 18:04:00,544:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:00,544:INFO:Initializing create_model()
2024-12-20 18:04:00,544:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:00,544:INFO:Checking exceptions
2024-12-20 18:04:00,544:INFO:Importing libraries
2024-12-20 18:04:00,544:INFO:Copying training dataset
2024-12-20 18:04:00,544:INFO:Defining folds
2024-12-20 18:04:00,544:INFO:Declaring metric variables
2024-12-20 18:04:00,544:INFO:Importing untrained model
2024-12-20 18:04:00,560:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:04:00,560:INFO:Starting cross validation
2024-12-20 18:04:00,560:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:00,644:INFO:Calculating mean and std
2024-12-20 18:04:00,644:INFO:Creating metrics dataframe
2024-12-20 18:04:00,644:INFO:Uploading results into container
2024-12-20 18:04:00,644:INFO:Uploading model into container now
2024-12-20 18:04:00,644:INFO:_master_model_container: 8
2024-12-20 18:04:00,644:INFO:_display_container: 5
2024-12-20 18:04:00,644:INFO:BayesianRidge()
2024-12-20 18:04:00,659:INFO:create_model() successfully completed......................................
2024-12-20 18:04:00,753:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:00,753:INFO:Creating metrics dataframe
2024-12-20 18:04:00,753:INFO:Initializing Passive Aggressive Regressor
2024-12-20 18:04:00,753:INFO:Total runtime is 0.029798853397369384 minutes
2024-12-20 18:04:00,753:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:00,753:INFO:Initializing create_model()
2024-12-20 18:04:00,753:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:00,753:INFO:Checking exceptions
2024-12-20 18:04:00,753:INFO:Importing libraries
2024-12-20 18:04:00,753:INFO:Copying training dataset
2024-12-20 18:04:00,771:INFO:Defining folds
2024-12-20 18:04:00,771:INFO:Declaring metric variables
2024-12-20 18:04:00,771:INFO:Importing untrained model
2024-12-20 18:04:00,771:INFO:Passive Aggressive Regressor Imported successfully
2024-12-20 18:04:00,771:INFO:Starting cross validation
2024-12-20 18:04:00,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:00,865:INFO:Calculating mean and std
2024-12-20 18:04:00,865:INFO:Creating metrics dataframe
2024-12-20 18:04:00,865:INFO:Uploading results into container
2024-12-20 18:04:00,865:INFO:Uploading model into container now
2024-12-20 18:04:00,865:INFO:_master_model_container: 9
2024-12-20 18:04:00,865:INFO:_display_container: 5
2024-12-20 18:04:00,865:INFO:PassiveAggressiveRegressor(random_state=6107)
2024-12-20 18:04:00,865:INFO:create_model() successfully completed......................................
2024-12-20 18:04:00,979:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:00,979:INFO:Creating metrics dataframe
2024-12-20 18:04:00,979:INFO:Initializing Huber Regressor
2024-12-20 18:04:00,979:INFO:Total runtime is 0.033562831083933514 minutes
2024-12-20 18:04:00,979:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:00,979:INFO:Initializing create_model()
2024-12-20 18:04:00,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:00,979:INFO:Checking exceptions
2024-12-20 18:04:00,979:INFO:Importing libraries
2024-12-20 18:04:00,979:INFO:Copying training dataset
2024-12-20 18:04:00,993:INFO:Defining folds
2024-12-20 18:04:00,993:INFO:Declaring metric variables
2024-12-20 18:04:00,994:INFO:Importing untrained model
2024-12-20 18:04:00,994:INFO:Huber Regressor Imported successfully
2024-12-20 18:04:01,002:INFO:Starting cross validation
2024-12-20 18:04:01,002:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:01,096:INFO:Calculating mean and std
2024-12-20 18:04:01,096:INFO:Creating metrics dataframe
2024-12-20 18:04:01,096:INFO:Uploading results into container
2024-12-20 18:04:01,096:INFO:Uploading model into container now
2024-12-20 18:04:01,096:INFO:_master_model_container: 10
2024-12-20 18:04:01,096:INFO:_display_container: 5
2024-12-20 18:04:01,096:INFO:HuberRegressor()
2024-12-20 18:04:01,096:INFO:create_model() successfully completed......................................
2024-12-20 18:04:01,193:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:01,193:INFO:Creating metrics dataframe
2024-12-20 18:04:01,212:INFO:Initializing K Neighbors Regressor
2024-12-20 18:04:01,212:INFO:Total runtime is 0.03745834032694499 minutes
2024-12-20 18:04:01,214:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:01,214:INFO:Initializing create_model()
2024-12-20 18:04:01,214:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:01,214:INFO:Checking exceptions
2024-12-20 18:04:01,214:INFO:Importing libraries
2024-12-20 18:04:01,214:INFO:Copying training dataset
2024-12-20 18:04:01,214:INFO:Defining folds
2024-12-20 18:04:01,214:INFO:Declaring metric variables
2024-12-20 18:04:01,222:INFO:Importing untrained model
2024-12-20 18:04:01,223:INFO:K Neighbors Regressor Imported successfully
2024-12-20 18:04:01,229:INFO:Starting cross validation
2024-12-20 18:04:01,230:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:01,318:INFO:Calculating mean and std
2024-12-20 18:04:01,318:INFO:Creating metrics dataframe
2024-12-20 18:04:01,334:INFO:Uploading results into container
2024-12-20 18:04:01,334:INFO:Uploading model into container now
2024-12-20 18:04:01,334:INFO:_master_model_container: 11
2024-12-20 18:04:01,334:INFO:_display_container: 5
2024-12-20 18:04:01,334:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-20 18:04:01,334:INFO:create_model() successfully completed......................................
2024-12-20 18:04:01,436:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:01,436:INFO:Creating metrics dataframe
2024-12-20 18:04:01,443:INFO:Initializing Decision Tree Regressor
2024-12-20 18:04:01,443:INFO:Total runtime is 0.04130653142929078 minutes
2024-12-20 18:04:01,450:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:01,450:INFO:Initializing create_model()
2024-12-20 18:04:01,450:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:01,450:INFO:Checking exceptions
2024-12-20 18:04:01,450:INFO:Importing libraries
2024-12-20 18:04:01,450:INFO:Copying training dataset
2024-12-20 18:04:01,450:INFO:Defining folds
2024-12-20 18:04:01,450:INFO:Declaring metric variables
2024-12-20 18:04:01,457:INFO:Importing untrained model
2024-12-20 18:04:01,457:INFO:Decision Tree Regressor Imported successfully
2024-12-20 18:04:01,464:INFO:Starting cross validation
2024-12-20 18:04:01,464:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:01,576:INFO:Calculating mean and std
2024-12-20 18:04:01,576:INFO:Creating metrics dataframe
2024-12-20 18:04:01,576:INFO:Uploading results into container
2024-12-20 18:04:01,582:INFO:Uploading model into container now
2024-12-20 18:04:01,582:INFO:_master_model_container: 12
2024-12-20 18:04:01,582:INFO:_display_container: 5
2024-12-20 18:04:01,582:INFO:DecisionTreeRegressor(random_state=6107)
2024-12-20 18:04:01,582:INFO:create_model() successfully completed......................................
2024-12-20 18:04:01,697:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:01,697:INFO:Creating metrics dataframe
2024-12-20 18:04:01,704:INFO:Initializing Random Forest Regressor
2024-12-20 18:04:01,704:INFO:Total runtime is 0.045652850468953454 minutes
2024-12-20 18:04:01,706:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:01,707:INFO:Initializing create_model()
2024-12-20 18:04:01,707:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:01,707:INFO:Checking exceptions
2024-12-20 18:04:01,707:INFO:Importing libraries
2024-12-20 18:04:01,707:INFO:Copying training dataset
2024-12-20 18:04:01,711:INFO:Defining folds
2024-12-20 18:04:01,711:INFO:Declaring metric variables
2024-12-20 18:04:01,713:INFO:Importing untrained model
2024-12-20 18:04:01,716:INFO:Random Forest Regressor Imported successfully
2024-12-20 18:04:01,721:INFO:Starting cross validation
2024-12-20 18:04:01,722:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:02,277:INFO:Calculating mean and std
2024-12-20 18:04:02,277:INFO:Creating metrics dataframe
2024-12-20 18:04:02,277:INFO:Uploading results into container
2024-12-20 18:04:02,277:INFO:Uploading model into container now
2024-12-20 18:04:02,277:INFO:_master_model_container: 13
2024-12-20 18:04:02,277:INFO:_display_container: 5
2024-12-20 18:04:02,277:INFO:RandomForestRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:02,277:INFO:create_model() successfully completed......................................
2024-12-20 18:04:02,402:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:02,402:INFO:Creating metrics dataframe
2024-12-20 18:04:02,409:INFO:Initializing Extra Trees Regressor
2024-12-20 18:04:02,409:INFO:Total runtime is 0.057394444942474365 minutes
2024-12-20 18:04:02,415:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:02,415:INFO:Initializing create_model()
2024-12-20 18:04:02,415:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:02,415:INFO:Checking exceptions
2024-12-20 18:04:02,415:INFO:Importing libraries
2024-12-20 18:04:02,415:INFO:Copying training dataset
2024-12-20 18:04:02,415:INFO:Defining folds
2024-12-20 18:04:02,415:INFO:Declaring metric variables
2024-12-20 18:04:02,422:INFO:Importing untrained model
2024-12-20 18:04:02,425:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:04:02,430:INFO:Starting cross validation
2024-12-20 18:04:02,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:02,762:INFO:Calculating mean and std
2024-12-20 18:04:02,762:INFO:Creating metrics dataframe
2024-12-20 18:04:02,762:INFO:Uploading results into container
2024-12-20 18:04:02,762:INFO:Uploading model into container now
2024-12-20 18:04:02,762:INFO:_master_model_container: 14
2024-12-20 18:04:02,762:INFO:_display_container: 5
2024-12-20 18:04:02,762:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:02,762:INFO:create_model() successfully completed......................................
2024-12-20 18:04:02,871:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:02,871:INFO:Creating metrics dataframe
2024-12-20 18:04:02,871:INFO:Initializing AdaBoost Regressor
2024-12-20 18:04:02,871:INFO:Total runtime is 0.065106733640035 minutes
2024-12-20 18:04:02,871:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:02,871:INFO:Initializing create_model()
2024-12-20 18:04:02,871:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:02,871:INFO:Checking exceptions
2024-12-20 18:04:02,871:INFO:Importing libraries
2024-12-20 18:04:02,871:INFO:Copying training dataset
2024-12-20 18:04:02,887:INFO:Defining folds
2024-12-20 18:04:02,887:INFO:Declaring metric variables
2024-12-20 18:04:02,888:INFO:Importing untrained model
2024-12-20 18:04:02,888:INFO:AdaBoost Regressor Imported successfully
2024-12-20 18:04:02,888:INFO:Starting cross validation
2024-12-20 18:04:02,888:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:03,118:INFO:Calculating mean and std
2024-12-20 18:04:03,118:INFO:Creating metrics dataframe
2024-12-20 18:04:03,118:INFO:Uploading results into container
2024-12-20 18:04:03,118:INFO:Uploading model into container now
2024-12-20 18:04:03,118:INFO:_master_model_container: 15
2024-12-20 18:04:03,118:INFO:_display_container: 5
2024-12-20 18:04:03,118:INFO:AdaBoostRegressor(random_state=6107)
2024-12-20 18:04:03,118:INFO:create_model() successfully completed......................................
2024-12-20 18:04:03,221:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:03,221:INFO:Creating metrics dataframe
2024-12-20 18:04:03,221:INFO:Initializing Gradient Boosting Regressor
2024-12-20 18:04:03,221:INFO:Total runtime is 0.0709398627281189 minutes
2024-12-20 18:04:03,236:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:03,236:INFO:Initializing create_model()
2024-12-20 18:04:03,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:03,236:INFO:Checking exceptions
2024-12-20 18:04:03,236:INFO:Importing libraries
2024-12-20 18:04:03,236:INFO:Copying training dataset
2024-12-20 18:04:03,242:INFO:Defining folds
2024-12-20 18:04:03,242:INFO:Declaring metric variables
2024-12-20 18:04:03,244:INFO:Importing untrained model
2024-12-20 18:04:03,246:INFO:Gradient Boosting Regressor Imported successfully
2024-12-20 18:04:03,251:INFO:Starting cross validation
2024-12-20 18:04:03,253:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:03,602:INFO:Calculating mean and std
2024-12-20 18:04:03,602:INFO:Creating metrics dataframe
2024-12-20 18:04:03,602:INFO:Uploading results into container
2024-12-20 18:04:03,602:INFO:Uploading model into container now
2024-12-20 18:04:03,602:INFO:_master_model_container: 16
2024-12-20 18:04:03,602:INFO:_display_container: 5
2024-12-20 18:04:03,602:INFO:GradientBoostingRegressor(random_state=6107)
2024-12-20 18:04:03,602:INFO:create_model() successfully completed......................................
2024-12-20 18:04:03,707:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:03,707:INFO:Creating metrics dataframe
2024-12-20 18:04:03,707:INFO:Initializing Light Gradient Boosting Machine
2024-12-20 18:04:03,707:INFO:Total runtime is 0.07903145949045817 minutes
2024-12-20 18:04:03,707:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:03,707:INFO:Initializing create_model()
2024-12-20 18:04:03,707:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:03,707:INFO:Checking exceptions
2024-12-20 18:04:03,707:INFO:Importing libraries
2024-12-20 18:04:03,707:INFO:Copying training dataset
2024-12-20 18:04:03,721:INFO:Defining folds
2024-12-20 18:04:03,721:INFO:Declaring metric variables
2024-12-20 18:04:03,721:INFO:Importing untrained model
2024-12-20 18:04:03,721:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-20 18:04:03,721:INFO:Starting cross validation
2024-12-20 18:04:03,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:04,263:INFO:Calculating mean and std
2024-12-20 18:04:04,263:INFO:Creating metrics dataframe
2024-12-20 18:04:04,270:INFO:Uploading results into container
2024-12-20 18:04:04,270:INFO:Uploading model into container now
2024-12-20 18:04:04,270:INFO:_master_model_container: 17
2024-12-20 18:04:04,270:INFO:_display_container: 5
2024-12-20 18:04:04,270:INFO:LGBMRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:04,270:INFO:create_model() successfully completed......................................
2024-12-20 18:04:04,410:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:04,410:INFO:Creating metrics dataframe
2024-12-20 18:04:04,424:INFO:Initializing Dummy Regressor
2024-12-20 18:04:04,424:INFO:Total runtime is 0.09097706079483033 minutes
2024-12-20 18:04:04,424:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:04,424:INFO:Initializing create_model()
2024-12-20 18:04:04,424:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190EC064F90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:04,424:INFO:Checking exceptions
2024-12-20 18:04:04,429:INFO:Importing libraries
2024-12-20 18:04:04,429:INFO:Copying training dataset
2024-12-20 18:04:04,436:INFO:Defining folds
2024-12-20 18:04:04,436:INFO:Declaring metric variables
2024-12-20 18:04:04,440:INFO:Importing untrained model
2024-12-20 18:04:04,445:INFO:Dummy Regressor Imported successfully
2024-12-20 18:04:04,452:INFO:Starting cross validation
2024-12-20 18:04:04,453:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:04,558:INFO:Calculating mean and std
2024-12-20 18:04:04,559:INFO:Creating metrics dataframe
2024-12-20 18:04:04,561:INFO:Uploading results into container
2024-12-20 18:04:04,561:INFO:Uploading model into container now
2024-12-20 18:04:04,562:INFO:_master_model_container: 18
2024-12-20 18:04:04,562:INFO:_display_container: 5
2024-12-20 18:04:04,562:INFO:DummyRegressor()
2024-12-20 18:04:04,562:INFO:create_model() successfully completed......................................
2024-12-20 18:04:04,666:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:04,666:INFO:Creating metrics dataframe
2024-12-20 18:04:04,674:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-20 18:04:04,680:INFO:Initializing create_model()
2024-12-20 18:04:04,680:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:04,680:INFO:Checking exceptions
2024-12-20 18:04:04,681:INFO:Importing libraries
2024-12-20 18:04:04,681:INFO:Copying training dataset
2024-12-20 18:04:04,685:INFO:Defining folds
2024-12-20 18:04:04,685:INFO:Declaring metric variables
2024-12-20 18:04:04,685:INFO:Importing untrained model
2024-12-20 18:04:04,685:INFO:Declaring custom model
2024-12-20 18:04:04,686:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:04:04,686:INFO:Cross validation set to False
2024-12-20 18:04:04,686:INFO:Fitting Model
2024-12-20 18:04:04,781:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:04,782:INFO:create_model() successfully completed......................................
2024-12-20 18:04:04,888:INFO:Initializing create_model()
2024-12-20 18:04:04,888:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:04,888:INFO:Checking exceptions
2024-12-20 18:04:04,889:INFO:Importing libraries
2024-12-20 18:04:04,889:INFO:Copying training dataset
2024-12-20 18:04:04,893:INFO:Defining folds
2024-12-20 18:04:04,893:INFO:Declaring metric variables
2024-12-20 18:04:04,893:INFO:Importing untrained model
2024-12-20 18:04:04,893:INFO:Declaring custom model
2024-12-20 18:04:04,893:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:04:04,894:INFO:Cross validation set to False
2024-12-20 18:04:04,894:INFO:Fitting Model
2024-12-20 18:04:04,925:INFO:BayesianRidge()
2024-12-20 18:04:04,925:INFO:create_model() successfully completed......................................
2024-12-20 18:04:05,033:INFO:Initializing create_model()
2024-12-20 18:04:05,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:05,033:INFO:Checking exceptions
2024-12-20 18:04:05,034:INFO:Importing libraries
2024-12-20 18:04:05,034:INFO:Copying training dataset
2024-12-20 18:04:05,038:INFO:Defining folds
2024-12-20 18:04:05,038:INFO:Declaring metric variables
2024-12-20 18:04:05,039:INFO:Importing untrained model
2024-12-20 18:04:05,039:INFO:Declaring custom model
2024-12-20 18:04:05,039:INFO:Ridge Regression Imported successfully
2024-12-20 18:04:05,039:INFO:Cross validation set to False
2024-12-20 18:04:05,039:INFO:Fitting Model
2024-12-20 18:04:05,070:INFO:Ridge(random_state=6107)
2024-12-20 18:04:05,070:INFO:create_model() successfully completed......................................
2024-12-20 18:04:05,195:INFO:_master_model_container: 18
2024-12-20 18:04:05,195:INFO:_display_container: 5
2024-12-20 18:04:05,195:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=6107), BayesianRidge(), Ridge(random_state=6107)]
2024-12-20 18:04:05,196:INFO:compare_models() successfully completed......................................
2024-12-20 18:04:16,607:INFO:Initializing compare_models()
2024-12-20 18:04:16,607:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-20 18:04:16,607:INFO:Checking exceptions
2024-12-20 18:04:16,609:INFO:Preparing display monitor
2024-12-20 18:04:16,631:INFO:Initializing Linear Regression
2024-12-20 18:04:16,631:INFO:Total runtime is 0.0 minutes
2024-12-20 18:04:16,635:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:16,635:INFO:Initializing create_model()
2024-12-20 18:04:16,635:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:16,635:INFO:Checking exceptions
2024-12-20 18:04:16,635:INFO:Importing libraries
2024-12-20 18:04:16,635:INFO:Copying training dataset
2024-12-20 18:04:16,640:INFO:Defining folds
2024-12-20 18:04:16,641:INFO:Declaring metric variables
2024-12-20 18:04:16,643:INFO:Importing untrained model
2024-12-20 18:04:16,646:INFO:Linear Regression Imported successfully
2024-12-20 18:04:16,652:INFO:Starting cross validation
2024-12-20 18:04:16,653:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:16,749:INFO:Calculating mean and std
2024-12-20 18:04:16,749:INFO:Creating metrics dataframe
2024-12-20 18:04:16,749:INFO:Uploading results into container
2024-12-20 18:04:16,749:INFO:Uploading model into container now
2024-12-20 18:04:16,749:INFO:_master_model_container: 19
2024-12-20 18:04:16,749:INFO:_display_container: 6
2024-12-20 18:04:16,749:INFO:LinearRegression(n_jobs=-1)
2024-12-20 18:04:16,749:INFO:create_model() successfully completed......................................
2024-12-20 18:04:16,843:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:16,843:INFO:Creating metrics dataframe
2024-12-20 18:04:16,843:INFO:Initializing Lasso Regression
2024-12-20 18:04:16,843:INFO:Total runtime is 0.00353625218073527 minutes
2024-12-20 18:04:16,859:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:16,859:INFO:Initializing create_model()
2024-12-20 18:04:16,859:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:16,859:INFO:Checking exceptions
2024-12-20 18:04:16,859:INFO:Importing libraries
2024-12-20 18:04:16,859:INFO:Copying training dataset
2024-12-20 18:04:16,863:INFO:Defining folds
2024-12-20 18:04:16,863:INFO:Declaring metric variables
2024-12-20 18:04:16,863:INFO:Importing untrained model
2024-12-20 18:04:16,863:INFO:Lasso Regression Imported successfully
2024-12-20 18:04:16,863:INFO:Starting cross validation
2024-12-20 18:04:16,863:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:16,964:INFO:Calculating mean and std
2024-12-20 18:04:16,964:INFO:Creating metrics dataframe
2024-12-20 18:04:16,964:INFO:Uploading results into container
2024-12-20 18:04:16,964:INFO:Uploading model into container now
2024-12-20 18:04:16,964:INFO:_master_model_container: 20
2024-12-20 18:04:16,964:INFO:_display_container: 6
2024-12-20 18:04:16,964:INFO:Lasso(random_state=6107)
2024-12-20 18:04:16,964:INFO:create_model() successfully completed......................................
2024-12-20 18:04:17,066:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:17,066:INFO:Creating metrics dataframe
2024-12-20 18:04:17,066:INFO:Initializing Ridge Regression
2024-12-20 18:04:17,066:INFO:Total runtime is 0.007256694634755452 minutes
2024-12-20 18:04:17,066:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:17,066:INFO:Initializing create_model()
2024-12-20 18:04:17,066:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:17,066:INFO:Checking exceptions
2024-12-20 18:04:17,066:INFO:Importing libraries
2024-12-20 18:04:17,066:INFO:Copying training dataset
2024-12-20 18:04:17,080:INFO:Defining folds
2024-12-20 18:04:17,081:INFO:Declaring metric variables
2024-12-20 18:04:17,081:INFO:Importing untrained model
2024-12-20 18:04:17,081:INFO:Ridge Regression Imported successfully
2024-12-20 18:04:17,081:INFO:Starting cross validation
2024-12-20 18:04:17,081:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:17,164:INFO:Calculating mean and std
2024-12-20 18:04:17,164:INFO:Creating metrics dataframe
2024-12-20 18:04:17,180:INFO:Uploading results into container
2024-12-20 18:04:17,180:INFO:Uploading model into container now
2024-12-20 18:04:17,180:INFO:_master_model_container: 21
2024-12-20 18:04:17,180:INFO:_display_container: 6
2024-12-20 18:04:17,180:INFO:Ridge(random_state=6107)
2024-12-20 18:04:17,180:INFO:create_model() successfully completed......................................
2024-12-20 18:04:17,280:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:17,280:INFO:Creating metrics dataframe
2024-12-20 18:04:17,291:INFO:Initializing Elastic Net
2024-12-20 18:04:17,291:INFO:Total runtime is 0.01099569002787272 minutes
2024-12-20 18:04:17,294:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:17,294:INFO:Initializing create_model()
2024-12-20 18:04:17,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:17,294:INFO:Checking exceptions
2024-12-20 18:04:17,294:INFO:Importing libraries
2024-12-20 18:04:17,294:INFO:Copying training dataset
2024-12-20 18:04:17,297:INFO:Defining folds
2024-12-20 18:04:17,298:INFO:Declaring metric variables
2024-12-20 18:04:17,298:INFO:Importing untrained model
2024-12-20 18:04:17,298:INFO:Elastic Net Imported successfully
2024-12-20 18:04:17,307:INFO:Starting cross validation
2024-12-20 18:04:17,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:17,395:INFO:Calculating mean and std
2024-12-20 18:04:17,395:INFO:Creating metrics dataframe
2024-12-20 18:04:17,395:INFO:Uploading results into container
2024-12-20 18:04:17,395:INFO:Uploading model into container now
2024-12-20 18:04:17,395:INFO:_master_model_container: 22
2024-12-20 18:04:17,395:INFO:_display_container: 6
2024-12-20 18:04:17,395:INFO:ElasticNet(random_state=6107)
2024-12-20 18:04:17,395:INFO:create_model() successfully completed......................................
2024-12-20 18:04:17,489:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:17,489:INFO:Creating metrics dataframe
2024-12-20 18:04:17,505:INFO:Initializing Least Angle Regression
2024-12-20 18:04:17,505:INFO:Total runtime is 0.014561986923217772 minutes
2024-12-20 18:04:17,505:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:17,505:INFO:Initializing create_model()
2024-12-20 18:04:17,505:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:17,505:INFO:Checking exceptions
2024-12-20 18:04:17,505:INFO:Importing libraries
2024-12-20 18:04:17,505:INFO:Copying training dataset
2024-12-20 18:04:17,513:INFO:Defining folds
2024-12-20 18:04:17,513:INFO:Declaring metric variables
2024-12-20 18:04:17,513:INFO:Importing untrained model
2024-12-20 18:04:17,513:INFO:Least Angle Regression Imported successfully
2024-12-20 18:04:17,513:INFO:Starting cross validation
2024-12-20 18:04:17,513:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:17,620:INFO:Calculating mean and std
2024-12-20 18:04:17,621:INFO:Creating metrics dataframe
2024-12-20 18:04:17,624:INFO:Uploading results into container
2024-12-20 18:04:17,624:INFO:Uploading model into container now
2024-12-20 18:04:17,624:INFO:_master_model_container: 23
2024-12-20 18:04:17,625:INFO:_display_container: 6
2024-12-20 18:04:17,625:INFO:Lars(random_state=6107)
2024-12-20 18:04:17,625:INFO:create_model() successfully completed......................................
2024-12-20 18:04:17,728:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:17,728:INFO:Creating metrics dataframe
2024-12-20 18:04:17,737:INFO:Initializing Lasso Least Angle Regression
2024-12-20 18:04:17,737:INFO:Total runtime is 0.018441120783487953 minutes
2024-12-20 18:04:17,739:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:17,739:INFO:Initializing create_model()
2024-12-20 18:04:17,739:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:17,739:INFO:Checking exceptions
2024-12-20 18:04:17,739:INFO:Importing libraries
2024-12-20 18:04:17,739:INFO:Copying training dataset
2024-12-20 18:04:17,743:INFO:Defining folds
2024-12-20 18:04:17,743:INFO:Declaring metric variables
2024-12-20 18:04:17,744:INFO:Importing untrained model
2024-12-20 18:04:17,744:INFO:Lasso Least Angle Regression Imported successfully
2024-12-20 18:04:17,752:INFO:Starting cross validation
2024-12-20 18:04:17,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:17,831:INFO:Calculating mean and std
2024-12-20 18:04:17,831:INFO:Creating metrics dataframe
2024-12-20 18:04:17,846:INFO:Uploading results into container
2024-12-20 18:04:17,846:INFO:Uploading model into container now
2024-12-20 18:04:17,846:INFO:_master_model_container: 24
2024-12-20 18:04:17,846:INFO:_display_container: 6
2024-12-20 18:04:17,846:INFO:LassoLars(random_state=6107)
2024-12-20 18:04:17,846:INFO:create_model() successfully completed......................................
2024-12-20 18:04:17,953:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:17,953:INFO:Creating metrics dataframe
2024-12-20 18:04:17,960:INFO:Initializing Orthogonal Matching Pursuit
2024-12-20 18:04:17,961:INFO:Total runtime is 0.022163585821787513 minutes
2024-12-20 18:04:17,963:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:17,963:INFO:Initializing create_model()
2024-12-20 18:04:17,964:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:17,964:INFO:Checking exceptions
2024-12-20 18:04:17,964:INFO:Importing libraries
2024-12-20 18:04:17,964:INFO:Copying training dataset
2024-12-20 18:04:17,967:INFO:Defining folds
2024-12-20 18:04:17,968:INFO:Declaring metric variables
2024-12-20 18:04:17,972:INFO:Importing untrained model
2024-12-20 18:04:17,973:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-20 18:04:17,980:INFO:Starting cross validation
2024-12-20 18:04:17,980:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:18,064:INFO:Calculating mean and std
2024-12-20 18:04:18,064:INFO:Creating metrics dataframe
2024-12-20 18:04:18,064:INFO:Uploading results into container
2024-12-20 18:04:18,064:INFO:Uploading model into container now
2024-12-20 18:04:18,064:INFO:_master_model_container: 25
2024-12-20 18:04:18,064:INFO:_display_container: 6
2024-12-20 18:04:18,064:INFO:OrthogonalMatchingPursuit()
2024-12-20 18:04:18,064:INFO:create_model() successfully completed......................................
2024-12-20 18:04:18,174:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:18,174:INFO:Creating metrics dataframe
2024-12-20 18:04:18,174:INFO:Initializing Bayesian Ridge
2024-12-20 18:04:18,174:INFO:Total runtime is 0.025712970892588293 minutes
2024-12-20 18:04:18,174:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:18,174:INFO:Initializing create_model()
2024-12-20 18:04:18,174:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:18,174:INFO:Checking exceptions
2024-12-20 18:04:18,174:INFO:Importing libraries
2024-12-20 18:04:18,174:INFO:Copying training dataset
2024-12-20 18:04:18,191:INFO:Defining folds
2024-12-20 18:04:18,191:INFO:Declaring metric variables
2024-12-20 18:04:18,193:INFO:Importing untrained model
2024-12-20 18:04:18,193:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:04:18,193:INFO:Starting cross validation
2024-12-20 18:04:18,193:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:18,292:INFO:Calculating mean and std
2024-12-20 18:04:18,292:INFO:Creating metrics dataframe
2024-12-20 18:04:18,292:INFO:Uploading results into container
2024-12-20 18:04:18,292:INFO:Uploading model into container now
2024-12-20 18:04:18,292:INFO:_master_model_container: 26
2024-12-20 18:04:18,292:INFO:_display_container: 6
2024-12-20 18:04:18,292:INFO:BayesianRidge()
2024-12-20 18:04:18,292:INFO:create_model() successfully completed......................................
2024-12-20 18:04:18,401:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:18,401:INFO:Creating metrics dataframe
2024-12-20 18:04:18,401:INFO:Initializing Passive Aggressive Regressor
2024-12-20 18:04:18,401:INFO:Total runtime is 0.029504732290903724 minutes
2024-12-20 18:04:18,417:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:18,417:INFO:Initializing create_model()
2024-12-20 18:04:18,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:18,417:INFO:Checking exceptions
2024-12-20 18:04:18,417:INFO:Importing libraries
2024-12-20 18:04:18,417:INFO:Copying training dataset
2024-12-20 18:04:18,423:INFO:Defining folds
2024-12-20 18:04:18,423:INFO:Declaring metric variables
2024-12-20 18:04:18,425:INFO:Importing untrained model
2024-12-20 18:04:18,425:INFO:Passive Aggressive Regressor Imported successfully
2024-12-20 18:04:18,431:INFO:Starting cross validation
2024-12-20 18:04:18,431:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:18,526:INFO:Calculating mean and std
2024-12-20 18:04:18,526:INFO:Creating metrics dataframe
2024-12-20 18:04:18,526:INFO:Uploading results into container
2024-12-20 18:04:18,526:INFO:Uploading model into container now
2024-12-20 18:04:18,526:INFO:_master_model_container: 27
2024-12-20 18:04:18,526:INFO:_display_container: 6
2024-12-20 18:04:18,526:INFO:PassiveAggressiveRegressor(random_state=6107)
2024-12-20 18:04:18,526:INFO:create_model() successfully completed......................................
2024-12-20 18:04:18,641:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:18,641:INFO:Creating metrics dataframe
2024-12-20 18:04:18,641:INFO:Initializing Huber Regressor
2024-12-20 18:04:18,641:INFO:Total runtime is 0.03349534273147583 minutes
2024-12-20 18:04:18,641:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:18,641:INFO:Initializing create_model()
2024-12-20 18:04:18,641:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:18,641:INFO:Checking exceptions
2024-12-20 18:04:18,641:INFO:Importing libraries
2024-12-20 18:04:18,641:INFO:Copying training dataset
2024-12-20 18:04:18,654:INFO:Defining folds
2024-12-20 18:04:18,655:INFO:Declaring metric variables
2024-12-20 18:04:18,656:INFO:Importing untrained model
2024-12-20 18:04:18,660:INFO:Huber Regressor Imported successfully
2024-12-20 18:04:18,660:INFO:Starting cross validation
2024-12-20 18:04:18,665:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:18,755:INFO:Calculating mean and std
2024-12-20 18:04:18,755:INFO:Creating metrics dataframe
2024-12-20 18:04:18,755:INFO:Uploading results into container
2024-12-20 18:04:18,755:INFO:Uploading model into container now
2024-12-20 18:04:18,755:INFO:_master_model_container: 28
2024-12-20 18:04:18,755:INFO:_display_container: 6
2024-12-20 18:04:18,755:INFO:HuberRegressor()
2024-12-20 18:04:18,755:INFO:create_model() successfully completed......................................
2024-12-20 18:04:18,857:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:18,857:INFO:Creating metrics dataframe
2024-12-20 18:04:18,873:INFO:Initializing K Neighbors Regressor
2024-12-20 18:04:18,874:INFO:Total runtime is 0.03738185167312622 minutes
2024-12-20 18:04:18,876:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:18,876:INFO:Initializing create_model()
2024-12-20 18:04:18,876:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:18,876:INFO:Checking exceptions
2024-12-20 18:04:18,876:INFO:Importing libraries
2024-12-20 18:04:18,876:INFO:Copying training dataset
2024-12-20 18:04:18,880:INFO:Defining folds
2024-12-20 18:04:18,880:INFO:Declaring metric variables
2024-12-20 18:04:18,882:INFO:Importing untrained model
2024-12-20 18:04:18,884:INFO:K Neighbors Regressor Imported successfully
2024-12-20 18:04:18,889:INFO:Starting cross validation
2024-12-20 18:04:18,889:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:18,977:INFO:Calculating mean and std
2024-12-20 18:04:18,977:INFO:Creating metrics dataframe
2024-12-20 18:04:18,977:INFO:Uploading results into container
2024-12-20 18:04:18,977:INFO:Uploading model into container now
2024-12-20 18:04:18,977:INFO:_master_model_container: 29
2024-12-20 18:04:18,977:INFO:_display_container: 6
2024-12-20 18:04:18,977:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-20 18:04:18,977:INFO:create_model() successfully completed......................................
2024-12-20 18:04:19,087:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:19,087:INFO:Creating metrics dataframe
2024-12-20 18:04:19,087:INFO:Initializing Decision Tree Regressor
2024-12-20 18:04:19,087:INFO:Total runtime is 0.0409306804339091 minutes
2024-12-20 18:04:19,087:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:19,087:INFO:Initializing create_model()
2024-12-20 18:04:19,087:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:19,087:INFO:Checking exceptions
2024-12-20 18:04:19,087:INFO:Importing libraries
2024-12-20 18:04:19,087:INFO:Copying training dataset
2024-12-20 18:04:19,087:INFO:Defining folds
2024-12-20 18:04:19,087:INFO:Declaring metric variables
2024-12-20 18:04:19,104:INFO:Importing untrained model
2024-12-20 18:04:19,107:INFO:Decision Tree Regressor Imported successfully
2024-12-20 18:04:19,111:INFO:Starting cross validation
2024-12-20 18:04:19,111:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:19,200:INFO:Calculating mean and std
2024-12-20 18:04:19,200:INFO:Creating metrics dataframe
2024-12-20 18:04:19,200:INFO:Uploading results into container
2024-12-20 18:04:19,200:INFO:Uploading model into container now
2024-12-20 18:04:19,200:INFO:_master_model_container: 30
2024-12-20 18:04:19,200:INFO:_display_container: 6
2024-12-20 18:04:19,200:INFO:DecisionTreeRegressor(random_state=6107)
2024-12-20 18:04:19,200:INFO:create_model() successfully completed......................................
2024-12-20 18:04:19,315:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:19,315:INFO:Creating metrics dataframe
2024-12-20 18:04:19,315:INFO:Initializing Random Forest Regressor
2024-12-20 18:04:19,315:INFO:Total runtime is 0.04473719994227092 minutes
2024-12-20 18:04:19,315:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:19,315:INFO:Initializing create_model()
2024-12-20 18:04:19,315:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:19,315:INFO:Checking exceptions
2024-12-20 18:04:19,315:INFO:Importing libraries
2024-12-20 18:04:19,315:INFO:Copying training dataset
2024-12-20 18:04:19,315:INFO:Defining folds
2024-12-20 18:04:19,315:INFO:Declaring metric variables
2024-12-20 18:04:19,333:INFO:Importing untrained model
2024-12-20 18:04:19,334:INFO:Random Forest Regressor Imported successfully
2024-12-20 18:04:19,340:INFO:Starting cross validation
2024-12-20 18:04:19,342:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:19,915:INFO:Calculating mean and std
2024-12-20 18:04:19,922:INFO:Creating metrics dataframe
2024-12-20 18:04:19,922:INFO:Uploading results into container
2024-12-20 18:04:19,922:INFO:Uploading model into container now
2024-12-20 18:04:19,922:INFO:_master_model_container: 31
2024-12-20 18:04:19,922:INFO:_display_container: 6
2024-12-20 18:04:19,922:INFO:RandomForestRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:19,922:INFO:create_model() successfully completed......................................
2024-12-20 18:04:20,034:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:20,034:INFO:Creating metrics dataframe
2024-12-20 18:04:20,041:INFO:Initializing Extra Trees Regressor
2024-12-20 18:04:20,041:INFO:Total runtime is 0.05683610041936239 minutes
2024-12-20 18:04:20,048:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:20,048:INFO:Initializing create_model()
2024-12-20 18:04:20,048:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:20,048:INFO:Checking exceptions
2024-12-20 18:04:20,048:INFO:Importing libraries
2024-12-20 18:04:20,048:INFO:Copying training dataset
2024-12-20 18:04:20,048:INFO:Defining folds
2024-12-20 18:04:20,048:INFO:Declaring metric variables
2024-12-20 18:04:20,056:INFO:Importing untrained model
2024-12-20 18:04:20,059:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:04:20,063:INFO:Starting cross validation
2024-12-20 18:04:20,063:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:20,423:INFO:Calculating mean and std
2024-12-20 18:04:20,423:INFO:Creating metrics dataframe
2024-12-20 18:04:20,423:INFO:Uploading results into container
2024-12-20 18:04:20,423:INFO:Uploading model into container now
2024-12-20 18:04:20,423:INFO:_master_model_container: 32
2024-12-20 18:04:20,423:INFO:_display_container: 6
2024-12-20 18:04:20,423:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:20,423:INFO:create_model() successfully completed......................................
2024-12-20 18:04:20,539:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:20,539:INFO:Creating metrics dataframe
2024-12-20 18:04:20,541:INFO:Initializing AdaBoost Regressor
2024-12-20 18:04:20,541:INFO:Total runtime is 0.06517537434895834 minutes
2024-12-20 18:04:20,541:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:20,541:INFO:Initializing create_model()
2024-12-20 18:04:20,541:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:20,541:INFO:Checking exceptions
2024-12-20 18:04:20,541:INFO:Importing libraries
2024-12-20 18:04:20,541:INFO:Copying training dataset
2024-12-20 18:04:20,541:INFO:Defining folds
2024-12-20 18:04:20,541:INFO:Declaring metric variables
2024-12-20 18:04:20,556:INFO:Importing untrained model
2024-12-20 18:04:20,557:INFO:AdaBoost Regressor Imported successfully
2024-12-20 18:04:20,563:INFO:Starting cross validation
2024-12-20 18:04:20,563:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:20,795:INFO:Calculating mean and std
2024-12-20 18:04:20,795:INFO:Creating metrics dataframe
2024-12-20 18:04:20,795:INFO:Uploading results into container
2024-12-20 18:04:20,795:INFO:Uploading model into container now
2024-12-20 18:04:20,795:INFO:_master_model_container: 33
2024-12-20 18:04:20,795:INFO:_display_container: 6
2024-12-20 18:04:20,795:INFO:AdaBoostRegressor(random_state=6107)
2024-12-20 18:04:20,795:INFO:create_model() successfully completed......................................
2024-12-20 18:04:20,904:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:20,904:INFO:Creating metrics dataframe
2024-12-20 18:04:20,904:INFO:Initializing Gradient Boosting Regressor
2024-12-20 18:04:20,904:INFO:Total runtime is 0.07122553984324138 minutes
2024-12-20 18:04:20,904:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:20,904:INFO:Initializing create_model()
2024-12-20 18:04:20,920:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:20,920:INFO:Checking exceptions
2024-12-20 18:04:20,920:INFO:Importing libraries
2024-12-20 18:04:20,920:INFO:Copying training dataset
2024-12-20 18:04:20,923:INFO:Defining folds
2024-12-20 18:04:20,923:INFO:Declaring metric variables
2024-12-20 18:04:20,926:INFO:Importing untrained model
2024-12-20 18:04:20,927:INFO:Gradient Boosting Regressor Imported successfully
2024-12-20 18:04:20,935:INFO:Starting cross validation
2024-12-20 18:04:20,937:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:21,290:INFO:Calculating mean and std
2024-12-20 18:04:21,290:INFO:Creating metrics dataframe
2024-12-20 18:04:21,290:INFO:Uploading results into container
2024-12-20 18:04:21,290:INFO:Uploading model into container now
2024-12-20 18:04:21,290:INFO:_master_model_container: 34
2024-12-20 18:04:21,290:INFO:_display_container: 6
2024-12-20 18:04:21,290:INFO:GradientBoostingRegressor(random_state=6107)
2024-12-20 18:04:21,290:INFO:create_model() successfully completed......................................
2024-12-20 18:04:21,383:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:21,399:INFO:Creating metrics dataframe
2024-12-20 18:04:21,399:INFO:Initializing Light Gradient Boosting Machine
2024-12-20 18:04:21,399:INFO:Total runtime is 0.07947172721227011 minutes
2024-12-20 18:04:21,399:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:21,399:INFO:Initializing create_model()
2024-12-20 18:04:21,399:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:21,399:INFO:Checking exceptions
2024-12-20 18:04:21,399:INFO:Importing libraries
2024-12-20 18:04:21,399:INFO:Copying training dataset
2024-12-20 18:04:21,415:INFO:Defining folds
2024-12-20 18:04:21,415:INFO:Declaring metric variables
2024-12-20 18:04:21,417:INFO:Importing untrained model
2024-12-20 18:04:21,418:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-20 18:04:21,424:INFO:Starting cross validation
2024-12-20 18:04:21,424:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:21,971:INFO:Calculating mean and std
2024-12-20 18:04:21,971:INFO:Creating metrics dataframe
2024-12-20 18:04:21,978:INFO:Uploading results into container
2024-12-20 18:04:21,978:INFO:Uploading model into container now
2024-12-20 18:04:21,978:INFO:_master_model_container: 35
2024-12-20 18:04:21,978:INFO:_display_container: 6
2024-12-20 18:04:21,978:INFO:LGBMRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:21,978:INFO:create_model() successfully completed......................................
2024-12-20 18:04:22,110:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:22,110:INFO:Creating metrics dataframe
2024-12-20 18:04:22,124:INFO:Initializing Dummy Regressor
2024-12-20 18:04:22,124:INFO:Total runtime is 0.09154775937398275 minutes
2024-12-20 18:04:22,125:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:22,125:INFO:Initializing create_model()
2024-12-20 18:04:22,125:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F1812F50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:22,125:INFO:Checking exceptions
2024-12-20 18:04:22,125:INFO:Importing libraries
2024-12-20 18:04:22,125:INFO:Copying training dataset
2024-12-20 18:04:22,131:INFO:Defining folds
2024-12-20 18:04:22,131:INFO:Declaring metric variables
2024-12-20 18:04:22,134:INFO:Importing untrained model
2024-12-20 18:04:22,136:INFO:Dummy Regressor Imported successfully
2024-12-20 18:04:22,140:INFO:Starting cross validation
2024-12-20 18:04:22,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:22,227:INFO:Calculating mean and std
2024-12-20 18:04:22,227:INFO:Creating metrics dataframe
2024-12-20 18:04:22,227:INFO:Uploading results into container
2024-12-20 18:04:22,227:INFO:Uploading model into container now
2024-12-20 18:04:22,227:INFO:_master_model_container: 36
2024-12-20 18:04:22,227:INFO:_display_container: 6
2024-12-20 18:04:22,227:INFO:DummyRegressor()
2024-12-20 18:04:22,227:INFO:create_model() successfully completed......................................
2024-12-20 18:04:22,337:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:22,337:INFO:Creating metrics dataframe
2024-12-20 18:04:22,337:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-20 18:04:22,352:INFO:Initializing create_model()
2024-12-20 18:04:22,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:22,352:INFO:Checking exceptions
2024-12-20 18:04:22,352:INFO:Importing libraries
2024-12-20 18:04:22,352:INFO:Copying training dataset
2024-12-20 18:04:22,352:INFO:Defining folds
2024-12-20 18:04:22,360:INFO:Declaring metric variables
2024-12-20 18:04:22,360:INFO:Importing untrained model
2024-12-20 18:04:22,360:INFO:Declaring custom model
2024-12-20 18:04:22,360:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:04:22,361:INFO:Cross validation set to False
2024-12-20 18:04:22,361:INFO:Fitting Model
2024-12-20 18:04:22,442:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:22,442:INFO:create_model() successfully completed......................................
2024-12-20 18:04:22,563:INFO:Initializing create_model()
2024-12-20 18:04:22,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:22,563:INFO:Checking exceptions
2024-12-20 18:04:22,563:INFO:Importing libraries
2024-12-20 18:04:22,563:INFO:Copying training dataset
2024-12-20 18:04:22,563:INFO:Defining folds
2024-12-20 18:04:22,563:INFO:Declaring metric variables
2024-12-20 18:04:22,563:INFO:Importing untrained model
2024-12-20 18:04:22,563:INFO:Declaring custom model
2024-12-20 18:04:22,563:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:04:22,563:INFO:Cross validation set to False
2024-12-20 18:04:22,563:INFO:Fitting Model
2024-12-20 18:04:22,596:INFO:BayesianRidge()
2024-12-20 18:04:22,596:INFO:create_model() successfully completed......................................
2024-12-20 18:04:22,693:INFO:Initializing create_model()
2024-12-20 18:04:22,693:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:22,693:INFO:Checking exceptions
2024-12-20 18:04:22,709:INFO:Importing libraries
2024-12-20 18:04:22,709:INFO:Copying training dataset
2024-12-20 18:04:22,709:INFO:Defining folds
2024-12-20 18:04:22,709:INFO:Declaring metric variables
2024-12-20 18:04:22,709:INFO:Importing untrained model
2024-12-20 18:04:22,709:INFO:Declaring custom model
2024-12-20 18:04:22,709:INFO:Ridge Regression Imported successfully
2024-12-20 18:04:22,714:INFO:Cross validation set to False
2024-12-20 18:04:22,714:INFO:Fitting Model
2024-12-20 18:04:22,735:INFO:Ridge(random_state=6107)
2024-12-20 18:04:22,735:INFO:create_model() successfully completed......................................
2024-12-20 18:04:22,871:INFO:_master_model_container: 36
2024-12-20 18:04:22,871:INFO:_display_container: 6
2024-12-20 18:04:22,872:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=6107), BayesianRidge(), Ridge(random_state=6107)]
2024-12-20 18:04:22,872:INFO:compare_models() successfully completed......................................
2024-12-20 18:04:27,559:INFO:Initializing compare_models()
2024-12-20 18:04:27,560:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=4, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 4, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2024-12-20 18:04:27,560:INFO:Checking exceptions
2024-12-20 18:04:27,561:INFO:Preparing display monitor
2024-12-20 18:04:27,575:INFO:Initializing Linear Regression
2024-12-20 18:04:27,575:INFO:Total runtime is 0.0 minutes
2024-12-20 18:04:27,584:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:27,584:INFO:Initializing create_model()
2024-12-20 18:04:27,584:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:27,584:INFO:Checking exceptions
2024-12-20 18:04:27,584:INFO:Importing libraries
2024-12-20 18:04:27,584:INFO:Copying training dataset
2024-12-20 18:04:27,588:INFO:Defining folds
2024-12-20 18:04:27,588:INFO:Declaring metric variables
2024-12-20 18:04:27,590:INFO:Importing untrained model
2024-12-20 18:04:27,593:INFO:Linear Regression Imported successfully
2024-12-20 18:04:27,599:INFO:Starting cross validation
2024-12-20 18:04:27,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:27,694:INFO:Calculating mean and std
2024-12-20 18:04:27,694:INFO:Creating metrics dataframe
2024-12-20 18:04:27,694:INFO:Uploading results into container
2024-12-20 18:04:27,694:INFO:Uploading model into container now
2024-12-20 18:04:27,694:INFO:_master_model_container: 37
2024-12-20 18:04:27,694:INFO:_display_container: 7
2024-12-20 18:04:27,694:INFO:LinearRegression(n_jobs=-1)
2024-12-20 18:04:27,694:INFO:create_model() successfully completed......................................
2024-12-20 18:04:27,805:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:27,805:INFO:Creating metrics dataframe
2024-12-20 18:04:27,805:INFO:Initializing Lasso Regression
2024-12-20 18:04:27,805:INFO:Total runtime is 0.0038194934527079265 minutes
2024-12-20 18:04:27,820:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:27,820:INFO:Initializing create_model()
2024-12-20 18:04:27,820:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:27,820:INFO:Checking exceptions
2024-12-20 18:04:27,820:INFO:Importing libraries
2024-12-20 18:04:27,820:INFO:Copying training dataset
2024-12-20 18:04:27,823:INFO:Defining folds
2024-12-20 18:04:27,823:INFO:Declaring metric variables
2024-12-20 18:04:27,826:INFO:Importing untrained model
2024-12-20 18:04:27,826:INFO:Lasso Regression Imported successfully
2024-12-20 18:04:27,833:INFO:Starting cross validation
2024-12-20 18:04:27,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:27,930:INFO:Calculating mean and std
2024-12-20 18:04:27,930:INFO:Creating metrics dataframe
2024-12-20 18:04:27,930:INFO:Uploading results into container
2024-12-20 18:04:27,930:INFO:Uploading model into container now
2024-12-20 18:04:27,930:INFO:_master_model_container: 38
2024-12-20 18:04:27,930:INFO:_display_container: 7
2024-12-20 18:04:27,930:INFO:Lasso(random_state=6107)
2024-12-20 18:04:27,930:INFO:create_model() successfully completed......................................
2024-12-20 18:04:28,023:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:28,023:INFO:Creating metrics dataframe
2024-12-20 18:04:28,023:INFO:Initializing Ridge Regression
2024-12-20 18:04:28,023:INFO:Total runtime is 0.007467361291249593 minutes
2024-12-20 18:04:28,039:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:28,039:INFO:Initializing create_model()
2024-12-20 18:04:28,039:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:28,039:INFO:Checking exceptions
2024-12-20 18:04:28,039:INFO:Importing libraries
2024-12-20 18:04:28,039:INFO:Copying training dataset
2024-12-20 18:04:28,044:INFO:Defining folds
2024-12-20 18:04:28,044:INFO:Declaring metric variables
2024-12-20 18:04:28,046:INFO:Importing untrained model
2024-12-20 18:04:28,046:INFO:Ridge Regression Imported successfully
2024-12-20 18:04:28,046:INFO:Starting cross validation
2024-12-20 18:04:28,046:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:28,145:INFO:Calculating mean and std
2024-12-20 18:04:28,145:INFO:Creating metrics dataframe
2024-12-20 18:04:28,145:INFO:Uploading results into container
2024-12-20 18:04:28,145:INFO:Uploading model into container now
2024-12-20 18:04:28,145:INFO:_master_model_container: 39
2024-12-20 18:04:28,145:INFO:_display_container: 7
2024-12-20 18:04:28,145:INFO:Ridge(random_state=6107)
2024-12-20 18:04:28,145:INFO:create_model() successfully completed......................................
2024-12-20 18:04:28,239:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:28,239:INFO:Creating metrics dataframe
2024-12-20 18:04:28,254:INFO:Initializing Elastic Net
2024-12-20 18:04:28,254:INFO:Total runtime is 0.01131281057993571 minutes
2024-12-20 18:04:28,254:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:28,254:INFO:Initializing create_model()
2024-12-20 18:04:28,254:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:28,254:INFO:Checking exceptions
2024-12-20 18:04:28,254:INFO:Importing libraries
2024-12-20 18:04:28,254:INFO:Copying training dataset
2024-12-20 18:04:28,260:INFO:Defining folds
2024-12-20 18:04:28,260:INFO:Declaring metric variables
2024-12-20 18:04:28,262:INFO:Importing untrained model
2024-12-20 18:04:28,262:INFO:Elastic Net Imported successfully
2024-12-20 18:04:28,262:INFO:Starting cross validation
2024-12-20 18:04:28,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:28,360:INFO:Calculating mean and std
2024-12-20 18:04:28,360:INFO:Creating metrics dataframe
2024-12-20 18:04:28,360:INFO:Uploading results into container
2024-12-20 18:04:28,360:INFO:Uploading model into container now
2024-12-20 18:04:28,360:INFO:_master_model_container: 40
2024-12-20 18:04:28,360:INFO:_display_container: 7
2024-12-20 18:04:28,360:INFO:ElasticNet(random_state=6107)
2024-12-20 18:04:28,360:INFO:create_model() successfully completed......................................
2024-12-20 18:04:28,454:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:28,454:INFO:Creating metrics dataframe
2024-12-20 18:04:28,469:INFO:Initializing Least Angle Regression
2024-12-20 18:04:28,469:INFO:Total runtime is 0.01490019162495931 minutes
2024-12-20 18:04:28,469:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:28,469:INFO:Initializing create_model()
2024-12-20 18:04:28,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:28,469:INFO:Checking exceptions
2024-12-20 18:04:28,469:INFO:Importing libraries
2024-12-20 18:04:28,469:INFO:Copying training dataset
2024-12-20 18:04:28,481:INFO:Defining folds
2024-12-20 18:04:28,481:INFO:Declaring metric variables
2024-12-20 18:04:28,482:INFO:Importing untrained model
2024-12-20 18:04:28,482:INFO:Least Angle Regression Imported successfully
2024-12-20 18:04:28,482:INFO:Starting cross validation
2024-12-20 18:04:28,482:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:28,590:INFO:Calculating mean and std
2024-12-20 18:04:28,590:INFO:Creating metrics dataframe
2024-12-20 18:04:28,590:INFO:Uploading results into container
2024-12-20 18:04:28,590:INFO:Uploading model into container now
2024-12-20 18:04:28,590:INFO:_master_model_container: 41
2024-12-20 18:04:28,590:INFO:_display_container: 7
2024-12-20 18:04:28,590:INFO:Lars(random_state=6107)
2024-12-20 18:04:28,590:INFO:create_model() successfully completed......................................
2024-12-20 18:04:28,694:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:28,694:INFO:Creating metrics dataframe
2024-12-20 18:04:28,694:INFO:Initializing Lasso Least Angle Regression
2024-12-20 18:04:28,694:INFO:Total runtime is 0.01864912509918213 minutes
2024-12-20 18:04:28,694:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:28,694:INFO:Initializing create_model()
2024-12-20 18:04:28,694:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:28,694:INFO:Checking exceptions
2024-12-20 18:04:28,694:INFO:Importing libraries
2024-12-20 18:04:28,694:INFO:Copying training dataset
2024-12-20 18:04:28,711:INFO:Defining folds
2024-12-20 18:04:28,711:INFO:Declaring metric variables
2024-12-20 18:04:28,712:INFO:Importing untrained model
2024-12-20 18:04:28,712:INFO:Lasso Least Angle Regression Imported successfully
2024-12-20 18:04:28,712:INFO:Starting cross validation
2024-12-20 18:04:28,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:28,812:INFO:Calculating mean and std
2024-12-20 18:04:28,812:INFO:Creating metrics dataframe
2024-12-20 18:04:28,812:INFO:Uploading results into container
2024-12-20 18:04:28,812:INFO:Uploading model into container now
2024-12-20 18:04:28,812:INFO:_master_model_container: 42
2024-12-20 18:04:28,812:INFO:_display_container: 7
2024-12-20 18:04:28,812:INFO:LassoLars(random_state=6107)
2024-12-20 18:04:28,812:INFO:create_model() successfully completed......................................
2024-12-20 18:04:28,921:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:28,921:INFO:Creating metrics dataframe
2024-12-20 18:04:28,921:INFO:Initializing Orthogonal Matching Pursuit
2024-12-20 18:04:28,921:INFO:Total runtime is 0.022424177328745527 minutes
2024-12-20 18:04:28,921:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:28,921:INFO:Initializing create_model()
2024-12-20 18:04:28,921:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:28,921:INFO:Checking exceptions
2024-12-20 18:04:28,921:INFO:Importing libraries
2024-12-20 18:04:28,921:INFO:Copying training dataset
2024-12-20 18:04:28,936:INFO:Defining folds
2024-12-20 18:04:28,936:INFO:Declaring metric variables
2024-12-20 18:04:28,936:INFO:Importing untrained model
2024-12-20 18:04:28,936:INFO:Orthogonal Matching Pursuit Imported successfully
2024-12-20 18:04:28,936:INFO:Starting cross validation
2024-12-20 18:04:28,936:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:29,025:INFO:Calculating mean and std
2024-12-20 18:04:29,025:INFO:Creating metrics dataframe
2024-12-20 18:04:29,025:INFO:Uploading results into container
2024-12-20 18:04:29,041:INFO:Uploading model into container now
2024-12-20 18:04:29,041:INFO:_master_model_container: 43
2024-12-20 18:04:29,041:INFO:_display_container: 7
2024-12-20 18:04:29,041:INFO:OrthogonalMatchingPursuit()
2024-12-20 18:04:29,041:INFO:create_model() successfully completed......................................
2024-12-20 18:04:29,135:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:29,135:INFO:Creating metrics dataframe
2024-12-20 18:04:29,135:INFO:Initializing Bayesian Ridge
2024-12-20 18:04:29,135:INFO:Total runtime is 0.025984712441762293 minutes
2024-12-20 18:04:29,150:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:29,150:INFO:Initializing create_model()
2024-12-20 18:04:29,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:29,150:INFO:Checking exceptions
2024-12-20 18:04:29,150:INFO:Importing libraries
2024-12-20 18:04:29,150:INFO:Copying training dataset
2024-12-20 18:04:29,155:INFO:Defining folds
2024-12-20 18:04:29,155:INFO:Declaring metric variables
2024-12-20 18:04:29,157:INFO:Importing untrained model
2024-12-20 18:04:29,157:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:04:29,157:INFO:Starting cross validation
2024-12-20 18:04:29,157:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:29,240:INFO:Calculating mean and std
2024-12-20 18:04:29,240:INFO:Creating metrics dataframe
2024-12-20 18:04:29,256:INFO:Uploading results into container
2024-12-20 18:04:29,256:INFO:Uploading model into container now
2024-12-20 18:04:29,256:INFO:_master_model_container: 44
2024-12-20 18:04:29,256:INFO:_display_container: 7
2024-12-20 18:04:29,256:INFO:BayesianRidge()
2024-12-20 18:04:29,256:INFO:create_model() successfully completed......................................
2024-12-20 18:04:29,361:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:29,362:INFO:Creating metrics dataframe
2024-12-20 18:04:29,368:INFO:Initializing Passive Aggressive Regressor
2024-12-20 18:04:29,368:INFO:Total runtime is 0.029874928792317713 minutes
2024-12-20 18:04:29,370:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:29,370:INFO:Initializing create_model()
2024-12-20 18:04:29,370:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:29,371:INFO:Checking exceptions
2024-12-20 18:04:29,371:INFO:Importing libraries
2024-12-20 18:04:29,371:INFO:Copying training dataset
2024-12-20 18:04:29,374:INFO:Defining folds
2024-12-20 18:04:29,374:INFO:Declaring metric variables
2024-12-20 18:04:29,376:INFO:Importing untrained model
2024-12-20 18:04:29,376:INFO:Passive Aggressive Regressor Imported successfully
2024-12-20 18:04:29,383:INFO:Starting cross validation
2024-12-20 18:04:29,383:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:29,471:INFO:Calculating mean and std
2024-12-20 18:04:29,471:INFO:Creating metrics dataframe
2024-12-20 18:04:29,471:INFO:Uploading results into container
2024-12-20 18:04:29,471:INFO:Uploading model into container now
2024-12-20 18:04:29,471:INFO:_master_model_container: 45
2024-12-20 18:04:29,471:INFO:_display_container: 7
2024-12-20 18:04:29,487:INFO:PassiveAggressiveRegressor(random_state=6107)
2024-12-20 18:04:29,487:INFO:create_model() successfully completed......................................
2024-12-20 18:04:29,582:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:29,582:INFO:Creating metrics dataframe
2024-12-20 18:04:29,582:INFO:Initializing Huber Regressor
2024-12-20 18:04:29,582:INFO:Total runtime is 0.033443454901377366 minutes
2024-12-20 18:04:29,582:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:29,582:INFO:Initializing create_model()
2024-12-20 18:04:29,582:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:29,582:INFO:Checking exceptions
2024-12-20 18:04:29,598:INFO:Importing libraries
2024-12-20 18:04:29,598:INFO:Copying training dataset
2024-12-20 18:04:29,598:INFO:Defining folds
2024-12-20 18:04:29,598:INFO:Declaring metric variables
2024-12-20 18:04:29,604:INFO:Importing untrained model
2024-12-20 18:04:29,605:INFO:Huber Regressor Imported successfully
2024-12-20 18:04:29,611:INFO:Starting cross validation
2024-12-20 18:04:29,612:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:29,700:INFO:Calculating mean and std
2024-12-20 18:04:29,700:INFO:Creating metrics dataframe
2024-12-20 18:04:29,700:INFO:Uploading results into container
2024-12-20 18:04:29,700:INFO:Uploading model into container now
2024-12-20 18:04:29,700:INFO:_master_model_container: 46
2024-12-20 18:04:29,700:INFO:_display_container: 7
2024-12-20 18:04:29,700:INFO:HuberRegressor()
2024-12-20 18:04:29,700:INFO:create_model() successfully completed......................................
2024-12-20 18:04:29,795:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:29,795:INFO:Creating metrics dataframe
2024-12-20 18:04:29,810:INFO:Initializing K Neighbors Regressor
2024-12-20 18:04:29,810:INFO:Total runtime is 0.037239241600036624 minutes
2024-12-20 18:04:29,810:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:29,810:INFO:Initializing create_model()
2024-12-20 18:04:29,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:29,810:INFO:Checking exceptions
2024-12-20 18:04:29,810:INFO:Importing libraries
2024-12-20 18:04:29,810:INFO:Copying training dataset
2024-12-20 18:04:29,818:INFO:Defining folds
2024-12-20 18:04:29,818:INFO:Declaring metric variables
2024-12-20 18:04:29,818:INFO:Importing untrained model
2024-12-20 18:04:29,818:INFO:K Neighbors Regressor Imported successfully
2024-12-20 18:04:29,818:INFO:Starting cross validation
2024-12-20 18:04:29,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:29,923:INFO:Calculating mean and std
2024-12-20 18:04:29,923:INFO:Creating metrics dataframe
2024-12-20 18:04:29,923:INFO:Uploading results into container
2024-12-20 18:04:29,923:INFO:Uploading model into container now
2024-12-20 18:04:29,923:INFO:_master_model_container: 47
2024-12-20 18:04:29,923:INFO:_display_container: 7
2024-12-20 18:04:29,923:INFO:KNeighborsRegressor(n_jobs=-1)
2024-12-20 18:04:29,923:INFO:create_model() successfully completed......................................
2024-12-20 18:04:30,016:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:30,016:INFO:Creating metrics dataframe
2024-12-20 18:04:30,032:INFO:Initializing Decision Tree Regressor
2024-12-20 18:04:30,032:INFO:Total runtime is 0.0409429669380188 minutes
2024-12-20 18:04:30,032:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:30,032:INFO:Initializing create_model()
2024-12-20 18:04:30,032:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:30,032:INFO:Checking exceptions
2024-12-20 18:04:30,032:INFO:Importing libraries
2024-12-20 18:04:30,032:INFO:Copying training dataset
2024-12-20 18:04:30,044:INFO:Defining folds
2024-12-20 18:04:30,044:INFO:Declaring metric variables
2024-12-20 18:04:30,047:INFO:Importing untrained model
2024-12-20 18:04:30,047:INFO:Decision Tree Regressor Imported successfully
2024-12-20 18:04:30,047:INFO:Starting cross validation
2024-12-20 18:04:30,047:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:30,159:INFO:Calculating mean and std
2024-12-20 18:04:30,159:INFO:Creating metrics dataframe
2024-12-20 18:04:30,159:INFO:Uploading results into container
2024-12-20 18:04:30,159:INFO:Uploading model into container now
2024-12-20 18:04:30,159:INFO:_master_model_container: 48
2024-12-20 18:04:30,159:INFO:_display_container: 7
2024-12-20 18:04:30,159:INFO:DecisionTreeRegressor(random_state=6107)
2024-12-20 18:04:30,159:INFO:create_model() successfully completed......................................
2024-12-20 18:04:30,268:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:30,268:INFO:Creating metrics dataframe
2024-12-20 18:04:30,268:INFO:Initializing Random Forest Regressor
2024-12-20 18:04:30,268:INFO:Total runtime is 0.04487872123718262 minutes
2024-12-20 18:04:30,284:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:30,284:INFO:Initializing create_model()
2024-12-20 18:04:30,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:30,284:INFO:Checking exceptions
2024-12-20 18:04:30,284:INFO:Importing libraries
2024-12-20 18:04:30,284:INFO:Copying training dataset
2024-12-20 18:04:30,287:INFO:Defining folds
2024-12-20 18:04:30,287:INFO:Declaring metric variables
2024-12-20 18:04:30,291:INFO:Importing untrained model
2024-12-20 18:04:30,291:INFO:Random Forest Regressor Imported successfully
2024-12-20 18:04:30,291:INFO:Starting cross validation
2024-12-20 18:04:30,291:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:30,888:INFO:Calculating mean and std
2024-12-20 18:04:30,888:INFO:Creating metrics dataframe
2024-12-20 18:04:30,888:INFO:Uploading results into container
2024-12-20 18:04:30,888:INFO:Uploading model into container now
2024-12-20 18:04:30,888:INFO:_master_model_container: 49
2024-12-20 18:04:30,888:INFO:_display_container: 7
2024-12-20 18:04:30,888:INFO:RandomForestRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:30,888:INFO:create_model() successfully completed......................................
2024-12-20 18:04:31,006:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:31,006:INFO:Creating metrics dataframe
2024-12-20 18:04:31,013:INFO:Initializing Extra Trees Regressor
2024-12-20 18:04:31,013:INFO:Total runtime is 0.05728681882222494 minutes
2024-12-20 18:04:31,013:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:31,013:INFO:Initializing create_model()
2024-12-20 18:04:31,013:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:31,013:INFO:Checking exceptions
2024-12-20 18:04:31,013:INFO:Importing libraries
2024-12-20 18:04:31,013:INFO:Copying training dataset
2024-12-20 18:04:31,021:INFO:Defining folds
2024-12-20 18:04:31,021:INFO:Declaring metric variables
2024-12-20 18:04:31,023:INFO:Importing untrained model
2024-12-20 18:04:31,023:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:04:31,030:INFO:Starting cross validation
2024-12-20 18:04:31,030:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:31,367:INFO:Calculating mean and std
2024-12-20 18:04:31,367:INFO:Creating metrics dataframe
2024-12-20 18:04:31,367:INFO:Uploading results into container
2024-12-20 18:04:31,367:INFO:Uploading model into container now
2024-12-20 18:04:31,382:INFO:_master_model_container: 50
2024-12-20 18:04:31,382:INFO:_display_container: 7
2024-12-20 18:04:31,382:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:31,382:INFO:create_model() successfully completed......................................
2024-12-20 18:04:31,476:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:31,476:INFO:Creating metrics dataframe
2024-12-20 18:04:31,491:INFO:Initializing AdaBoost Regressor
2024-12-20 18:04:31,491:INFO:Total runtime is 0.06526242097218832 minutes
2024-12-20 18:04:31,491:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:31,491:INFO:Initializing create_model()
2024-12-20 18:04:31,491:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:31,491:INFO:Checking exceptions
2024-12-20 18:04:31,491:INFO:Importing libraries
2024-12-20 18:04:31,491:INFO:Copying training dataset
2024-12-20 18:04:31,498:INFO:Defining folds
2024-12-20 18:04:31,498:INFO:Declaring metric variables
2024-12-20 18:04:31,499:INFO:Importing untrained model
2024-12-20 18:04:31,499:INFO:AdaBoost Regressor Imported successfully
2024-12-20 18:04:31,499:INFO:Starting cross validation
2024-12-20 18:04:31,499:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:31,738:INFO:Calculating mean and std
2024-12-20 18:04:31,738:INFO:Creating metrics dataframe
2024-12-20 18:04:31,738:INFO:Uploading results into container
2024-12-20 18:04:31,738:INFO:Uploading model into container now
2024-12-20 18:04:31,738:INFO:_master_model_container: 51
2024-12-20 18:04:31,738:INFO:_display_container: 7
2024-12-20 18:04:31,738:INFO:AdaBoostRegressor(random_state=6107)
2024-12-20 18:04:31,738:INFO:create_model() successfully completed......................................
2024-12-20 18:04:31,831:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:31,831:INFO:Creating metrics dataframe
2024-12-20 18:04:31,847:INFO:Initializing Gradient Boosting Regressor
2024-12-20 18:04:31,847:INFO:Total runtime is 0.07119417587916056 minutes
2024-12-20 18:04:31,847:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:31,847:INFO:Initializing create_model()
2024-12-20 18:04:31,847:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:31,847:INFO:Checking exceptions
2024-12-20 18:04:31,847:INFO:Importing libraries
2024-12-20 18:04:31,847:INFO:Copying training dataset
2024-12-20 18:04:31,859:INFO:Defining folds
2024-12-20 18:04:31,859:INFO:Declaring metric variables
2024-12-20 18:04:31,860:INFO:Importing untrained model
2024-12-20 18:04:31,860:INFO:Gradient Boosting Regressor Imported successfully
2024-12-20 18:04:31,860:INFO:Starting cross validation
2024-12-20 18:04:31,860:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:32,230:INFO:Calculating mean and std
2024-12-20 18:04:32,230:INFO:Creating metrics dataframe
2024-12-20 18:04:32,230:INFO:Uploading results into container
2024-12-20 18:04:32,230:INFO:Uploading model into container now
2024-12-20 18:04:32,230:INFO:_master_model_container: 52
2024-12-20 18:04:32,230:INFO:_display_container: 7
2024-12-20 18:04:32,230:INFO:GradientBoostingRegressor(random_state=6107)
2024-12-20 18:04:32,230:INFO:create_model() successfully completed......................................
2024-12-20 18:04:32,340:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:32,340:INFO:Creating metrics dataframe
2024-12-20 18:04:32,340:INFO:Initializing Light Gradient Boosting Machine
2024-12-20 18:04:32,340:INFO:Total runtime is 0.07941534121831258 minutes
2024-12-20 18:04:32,340:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:32,340:INFO:Initializing create_model()
2024-12-20 18:04:32,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:32,340:INFO:Checking exceptions
2024-12-20 18:04:32,340:INFO:Importing libraries
2024-12-20 18:04:32,340:INFO:Copying training dataset
2024-12-20 18:04:32,357:INFO:Defining folds
2024-12-20 18:04:32,357:INFO:Declaring metric variables
2024-12-20 18:04:32,360:INFO:Importing untrained model
2024-12-20 18:04:32,360:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-20 18:04:32,360:INFO:Starting cross validation
2024-12-20 18:04:32,360:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:32,957:INFO:Calculating mean and std
2024-12-20 18:04:32,966:INFO:Creating metrics dataframe
2024-12-20 18:04:32,966:INFO:Uploading results into container
2024-12-20 18:04:32,966:INFO:Uploading model into container now
2024-12-20 18:04:32,966:INFO:_master_model_container: 53
2024-12-20 18:04:32,966:INFO:_display_container: 7
2024-12-20 18:04:32,966:INFO:LGBMRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:32,971:INFO:create_model() successfully completed......................................
2024-12-20 18:04:33,104:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:33,104:INFO:Creating metrics dataframe
2024-12-20 18:04:33,104:INFO:Initializing Dummy Regressor
2024-12-20 18:04:33,104:INFO:Total runtime is 0.09214278856913248 minutes
2024-12-20 18:04:33,104:INFO:SubProcess create_model() called ==================================
2024-12-20 18:04:33,104:INFO:Initializing create_model()
2024-12-20 18:04:33,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190F108B510>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:33,104:INFO:Checking exceptions
2024-12-20 18:04:33,104:INFO:Importing libraries
2024-12-20 18:04:33,104:INFO:Copying training dataset
2024-12-20 18:04:33,122:INFO:Defining folds
2024-12-20 18:04:33,123:INFO:Declaring metric variables
2024-12-20 18:04:33,126:INFO:Importing untrained model
2024-12-20 18:04:33,129:INFO:Dummy Regressor Imported successfully
2024-12-20 18:04:33,132:INFO:Starting cross validation
2024-12-20 18:04:33,138:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-20 18:04:33,235:INFO:Calculating mean and std
2024-12-20 18:04:33,251:INFO:Creating metrics dataframe
2024-12-20 18:04:33,251:INFO:Uploading results into container
2024-12-20 18:04:33,251:INFO:Uploading model into container now
2024-12-20 18:04:33,251:INFO:_master_model_container: 54
2024-12-20 18:04:33,251:INFO:_display_container: 7
2024-12-20 18:04:33,251:INFO:DummyRegressor()
2024-12-20 18:04:33,251:INFO:create_model() successfully completed......................................
2024-12-20 18:04:33,345:INFO:SubProcess create_model() end ==================================
2024-12-20 18:04:33,345:INFO:Creating metrics dataframe
2024-12-20 18:04:33,367:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-20 18:04:33,367:INFO:Initializing create_model()
2024-12-20 18:04:33,367:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:33,367:INFO:Checking exceptions
2024-12-20 18:04:33,367:INFO:Importing libraries
2024-12-20 18:04:33,367:INFO:Copying training dataset
2024-12-20 18:04:33,367:INFO:Defining folds
2024-12-20 18:04:33,367:INFO:Declaring metric variables
2024-12-20 18:04:33,367:INFO:Importing untrained model
2024-12-20 18:04:33,367:INFO:Declaring custom model
2024-12-20 18:04:33,367:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:04:33,367:INFO:Cross validation set to False
2024-12-20 18:04:33,367:INFO:Fitting Model
2024-12-20 18:04:33,465:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:33,465:INFO:create_model() successfully completed......................................
2024-12-20 18:04:33,575:INFO:Initializing create_model()
2024-12-20 18:04:33,575:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:33,575:INFO:Checking exceptions
2024-12-20 18:04:33,575:INFO:Importing libraries
2024-12-20 18:04:33,575:INFO:Copying training dataset
2024-12-20 18:04:33,575:INFO:Defining folds
2024-12-20 18:04:33,575:INFO:Declaring metric variables
2024-12-20 18:04:33,575:INFO:Importing untrained model
2024-12-20 18:04:33,575:INFO:Declaring custom model
2024-12-20 18:04:33,575:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:04:33,575:INFO:Cross validation set to False
2024-12-20 18:04:33,575:INFO:Fitting Model
2024-12-20 18:04:33,617:INFO:BayesianRidge()
2024-12-20 18:04:33,617:INFO:create_model() successfully completed......................................
2024-12-20 18:04:33,726:INFO:Initializing create_model()
2024-12-20 18:04:33,726:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:33,726:INFO:Checking exceptions
2024-12-20 18:04:33,726:INFO:Importing libraries
2024-12-20 18:04:33,726:INFO:Copying training dataset
2024-12-20 18:04:33,737:INFO:Defining folds
2024-12-20 18:04:33,737:INFO:Declaring metric variables
2024-12-20 18:04:33,737:INFO:Importing untrained model
2024-12-20 18:04:33,737:INFO:Declaring custom model
2024-12-20 18:04:33,738:INFO:Ridge Regression Imported successfully
2024-12-20 18:04:33,739:INFO:Cross validation set to False
2024-12-20 18:04:33,739:INFO:Fitting Model
2024-12-20 18:04:33,770:INFO:Ridge(random_state=6107)
2024-12-20 18:04:33,770:INFO:create_model() successfully completed......................................
2024-12-20 18:04:33,879:INFO:Initializing create_model()
2024-12-20 18:04:33,879:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:33,879:INFO:Checking exceptions
2024-12-20 18:04:33,879:INFO:Importing libraries
2024-12-20 18:04:33,886:INFO:Copying training dataset
2024-12-20 18:04:33,887:INFO:Defining folds
2024-12-20 18:04:33,887:INFO:Declaring metric variables
2024-12-20 18:04:33,887:INFO:Importing untrained model
2024-12-20 18:04:33,887:INFO:Declaring custom model
2024-12-20 18:04:33,887:INFO:Linear Regression Imported successfully
2024-12-20 18:04:33,887:INFO:Cross validation set to False
2024-12-20 18:04:33,887:INFO:Fitting Model
2024-12-20 18:04:33,922:INFO:LinearRegression(n_jobs=-1)
2024-12-20 18:04:33,922:INFO:create_model() successfully completed......................................
2024-12-20 18:04:34,059:INFO:_master_model_container: 54
2024-12-20 18:04:34,059:INFO:_display_container: 7
2024-12-20 18:04:34,060:INFO:[ExtraTreesRegressor(n_jobs=-1, random_state=6107), BayesianRidge(), Ridge(random_state=6107), LinearRegression(n_jobs=-1)]
2024-12-20 18:04:34,060:INFO:compare_models() successfully completed......................................
2024-12-20 18:04:38,612:INFO:Initializing finalize_model()
2024-12-20 18:04:38,612:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:04:38,612:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:04:38,615:INFO:Initializing create_model()
2024-12-20 18:04:38,615:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:38,615:INFO:Checking exceptions
2024-12-20 18:04:38,617:INFO:Importing libraries
2024-12-20 18:04:38,617:INFO:Copying training dataset
2024-12-20 18:04:38,617:INFO:Defining folds
2024-12-20 18:04:38,617:INFO:Declaring metric variables
2024-12-20 18:04:38,617:INFO:Importing untrained model
2024-12-20 18:04:38,617:INFO:Declaring custom model
2024-12-20 18:04:38,618:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:04:38,618:INFO:Cross validation set to False
2024-12-20 18:04:38,619:INFO:Fitting Model
2024-12-20 18:04:38,728:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:04:38,728:INFO:create_model() successfully completed......................................
2024-12-20 18:04:38,830:INFO:_master_model_container: 54
2024-12-20 18:04:38,830:INFO:_display_container: 7
2024-12-20 18:04:38,845:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:04:38,845:INFO:finalize_model() successfully completed......................................
2024-12-20 18:04:38,965:INFO:Initializing finalize_model()
2024-12-20 18:04:38,965:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:04:38,965:INFO:Finalizing BayesianRidge()
2024-12-20 18:04:38,969:INFO:Initializing create_model()
2024-12-20 18:04:38,969:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:38,969:INFO:Checking exceptions
2024-12-20 18:04:38,970:INFO:Importing libraries
2024-12-20 18:04:38,970:INFO:Copying training dataset
2024-12-20 18:04:38,971:INFO:Defining folds
2024-12-20 18:04:38,971:INFO:Declaring metric variables
2024-12-20 18:04:38,971:INFO:Importing untrained model
2024-12-20 18:04:38,971:INFO:Declaring custom model
2024-12-20 18:04:38,972:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:04:38,972:INFO:Cross validation set to False
2024-12-20 18:04:38,973:INFO:Fitting Model
2024-12-20 18:04:39,023:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:04:39,023:INFO:create_model() successfully completed......................................
2024-12-20 18:04:39,132:INFO:_master_model_container: 54
2024-12-20 18:04:39,132:INFO:_display_container: 7
2024-12-20 18:04:39,132:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:04:39,132:INFO:finalize_model() successfully completed......................................
2024-12-20 18:04:39,256:INFO:Initializing finalize_model()
2024-12-20 18:04:39,256:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:04:39,256:INFO:Finalizing Ridge(random_state=6107)
2024-12-20 18:04:39,263:INFO:Initializing create_model()
2024-12-20 18:04:39,263:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:39,263:INFO:Checking exceptions
2024-12-20 18:04:39,263:INFO:Importing libraries
2024-12-20 18:04:39,263:INFO:Copying training dataset
2024-12-20 18:04:39,263:INFO:Defining folds
2024-12-20 18:04:39,263:INFO:Declaring metric variables
2024-12-20 18:04:39,263:INFO:Importing untrained model
2024-12-20 18:04:39,263:INFO:Declaring custom model
2024-12-20 18:04:39,263:INFO:Ridge Regression Imported successfully
2024-12-20 18:04:39,263:INFO:Cross validation set to False
2024-12-20 18:04:39,263:INFO:Fitting Model
2024-12-20 18:04:39,304:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:04:39,311:INFO:create_model() successfully completed......................................
2024-12-20 18:04:39,410:INFO:_master_model_container: 54
2024-12-20 18:04:39,410:INFO:_display_container: 7
2024-12-20 18:04:39,425:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:04:39,425:INFO:finalize_model() successfully completed......................................
2024-12-20 18:04:39,535:INFO:Initializing finalize_model()
2024-12-20 18:04:39,535:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:04:39,535:INFO:Finalizing LinearRegression(n_jobs=-1)
2024-12-20 18:04:39,535:INFO:Initializing create_model()
2024-12-20 18:04:39,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:04:39,535:INFO:Checking exceptions
2024-12-20 18:04:39,535:INFO:Importing libraries
2024-12-20 18:04:39,535:INFO:Copying training dataset
2024-12-20 18:04:39,535:INFO:Defining folds
2024-12-20 18:04:39,535:INFO:Declaring metric variables
2024-12-20 18:04:39,535:INFO:Importing untrained model
2024-12-20 18:04:39,535:INFO:Declaring custom model
2024-12-20 18:04:39,535:INFO:Linear Regression Imported successfully
2024-12-20 18:04:39,535:INFO:Cross validation set to False
2024-12-20 18:04:39,535:INFO:Fitting Model
2024-12-20 18:04:39,581:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:04:39,581:INFO:create_model() successfully completed......................................
2024-12-20 18:04:39,682:INFO:_master_model_container: 54
2024-12-20 18:04:39,682:INFO:_display_container: 7
2024-12-20 18:04:39,698:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:04:39,698:INFO:finalize_model() successfully completed......................................
2024-12-20 18:04:39,807:INFO:Initializing predict_model()
2024-12-20 18:04:39,807:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEC6F380>)
2024-12-20 18:04:39,807:INFO:Checking exceptions
2024-12-20 18:04:39,807:INFO:Preloading libraries
2024-12-20 18:04:39,874:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:04:39,983:INFO:Initializing predict_model()
2024-12-20 18:04:39,983:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEC6F380>)
2024-12-20 18:04:39,983:INFO:Checking exceptions
2024-12-20 18:04:39,983:INFO:Preloading libraries
2024-12-20 18:04:40,034:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:04:40,143:INFO:Initializing predict_model()
2024-12-20 18:04:40,143:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEC6F380>)
2024-12-20 18:04:40,143:INFO:Checking exceptions
2024-12-20 18:04:40,143:INFO:Preloading libraries
2024-12-20 18:04:40,186:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:04:40,295:INFO:Initializing predict_model()
2024-12-20 18:04:40,295:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEC6F380>)
2024-12-20 18:04:40,295:INFO:Checking exceptions
2024-12-20 18:04:40,295:INFO:Preloading libraries
2024-12-20 18:04:40,354:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:05:48,677:INFO:Initializing finalize_model()
2024-12-20 18:05:48,678:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:05:48,678:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:05:48,681:INFO:Initializing create_model()
2024-12-20 18:05:48,681:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:05:48,682:INFO:Checking exceptions
2024-12-20 18:05:48,684:INFO:Importing libraries
2024-12-20 18:05:48,684:INFO:Copying training dataset
2024-12-20 18:05:48,686:INFO:Defining folds
2024-12-20 18:05:48,686:INFO:Declaring metric variables
2024-12-20 18:05:48,686:INFO:Importing untrained model
2024-12-20 18:05:48,686:INFO:Declaring custom model
2024-12-20 18:05:48,686:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:05:48,687:INFO:Cross validation set to False
2024-12-20 18:05:48,687:INFO:Fitting Model
2024-12-20 18:05:48,797:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:05:48,797:INFO:create_model() successfully completed......................................
2024-12-20 18:05:48,892:INFO:_master_model_container: 54
2024-12-20 18:05:48,892:INFO:_display_container: 11
2024-12-20 18:05:48,892:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:05:48,892:INFO:finalize_model() successfully completed......................................
2024-12-20 18:05:49,002:INFO:Initializing finalize_model()
2024-12-20 18:05:49,002:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:05:49,002:INFO:Finalizing BayesianRidge()
2024-12-20 18:05:49,002:INFO:Initializing create_model()
2024-12-20 18:05:49,002:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:05:49,002:INFO:Checking exceptions
2024-12-20 18:05:49,002:INFO:Importing libraries
2024-12-20 18:05:49,002:INFO:Copying training dataset
2024-12-20 18:05:49,002:INFO:Defining folds
2024-12-20 18:05:49,002:INFO:Declaring metric variables
2024-12-20 18:05:49,002:INFO:Importing untrained model
2024-12-20 18:05:49,002:INFO:Declaring custom model
2024-12-20 18:05:49,002:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:05:49,002:INFO:Cross validation set to False
2024-12-20 18:05:49,002:INFO:Fitting Model
2024-12-20 18:05:49,049:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:05:49,049:INFO:create_model() successfully completed......................................
2024-12-20 18:05:49,152:INFO:_master_model_container: 54
2024-12-20 18:05:49,152:INFO:_display_container: 11
2024-12-20 18:05:49,152:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:05:49,152:INFO:finalize_model() successfully completed......................................
2024-12-20 18:05:49,277:INFO:Initializing finalize_model()
2024-12-20 18:05:49,277:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:05:49,277:INFO:Finalizing Ridge(random_state=6107)
2024-12-20 18:05:49,284:INFO:Initializing create_model()
2024-12-20 18:05:49,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:05:49,284:INFO:Checking exceptions
2024-12-20 18:05:49,284:INFO:Importing libraries
2024-12-20 18:05:49,284:INFO:Copying training dataset
2024-12-20 18:05:49,284:INFO:Defining folds
2024-12-20 18:05:49,284:INFO:Declaring metric variables
2024-12-20 18:05:49,284:INFO:Importing untrained model
2024-12-20 18:05:49,284:INFO:Declaring custom model
2024-12-20 18:05:49,284:INFO:Ridge Regression Imported successfully
2024-12-20 18:05:49,284:INFO:Cross validation set to False
2024-12-20 18:05:49,284:INFO:Fitting Model
2024-12-20 18:05:49,332:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:05:49,332:INFO:create_model() successfully completed......................................
2024-12-20 18:05:49,450:INFO:_master_model_container: 54
2024-12-20 18:05:49,450:INFO:_display_container: 11
2024-12-20 18:05:49,455:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:05:49,455:INFO:finalize_model() successfully completed......................................
2024-12-20 18:05:49,562:INFO:Initializing finalize_model()
2024-12-20 18:05:49,562:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:05:49,562:INFO:Finalizing LinearRegression(n_jobs=-1)
2024-12-20 18:05:49,562:INFO:Initializing create_model()
2024-12-20 18:05:49,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:05:49,562:INFO:Checking exceptions
2024-12-20 18:05:49,562:INFO:Importing libraries
2024-12-20 18:05:49,562:INFO:Copying training dataset
2024-12-20 18:05:49,562:INFO:Defining folds
2024-12-20 18:05:49,562:INFO:Declaring metric variables
2024-12-20 18:05:49,562:INFO:Importing untrained model
2024-12-20 18:05:49,562:INFO:Declaring custom model
2024-12-20 18:05:49,562:INFO:Linear Regression Imported successfully
2024-12-20 18:05:49,562:INFO:Cross validation set to False
2024-12-20 18:05:49,562:INFO:Fitting Model
2024-12-20 18:05:49,597:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:05:49,597:INFO:create_model() successfully completed......................................
2024-12-20 18:05:49,711:INFO:_master_model_container: 54
2024-12-20 18:05:49,711:INFO:_display_container: 11
2024-12-20 18:05:49,714:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:05:49,714:INFO:finalize_model() successfully completed......................................
2024-12-20 18:05:49,823:INFO:Initializing predict_model()
2024-12-20 18:05:49,823:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEBEA700>)
2024-12-20 18:05:49,823:INFO:Checking exceptions
2024-12-20 18:05:49,823:INFO:Preloading libraries
2024-12-20 18:05:49,881:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:05:49,990:INFO:Initializing predict_model()
2024-12-20 18:05:49,990:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEBEA700>)
2024-12-20 18:05:49,990:INFO:Checking exceptions
2024-12-20 18:05:49,990:INFO:Preloading libraries
2024-12-20 18:05:50,041:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:05:50,150:INFO:Initializing predict_model()
2024-12-20 18:05:50,150:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEBEA700>)
2024-12-20 18:05:50,150:INFO:Checking exceptions
2024-12-20 18:05:50,150:INFO:Preloading libraries
2024-12-20 18:05:50,201:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:05:50,310:INFO:Initializing predict_model()
2024-12-20 18:05:50,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEBEA700>)
2024-12-20 18:05:50,310:INFO:Checking exceptions
2024-12-20 18:05:50,310:INFO:Preloading libraries
2024-12-20 18:05:50,354:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:06:13,605:INFO:Initializing finalize_model()
2024-12-20 18:06:13,606:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:06:13,606:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:06:13,609:INFO:Initializing create_model()
2024-12-20 18:06:13,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:06:13,609:INFO:Checking exceptions
2024-12-20 18:06:13,610:INFO:Importing libraries
2024-12-20 18:06:13,610:INFO:Copying training dataset
2024-12-20 18:06:13,610:INFO:Defining folds
2024-12-20 18:06:13,610:INFO:Declaring metric variables
2024-12-20 18:06:13,610:INFO:Importing untrained model
2024-12-20 18:06:13,611:INFO:Declaring custom model
2024-12-20 18:06:13,611:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:06:13,612:INFO:Cross validation set to False
2024-12-20 18:06:13,612:INFO:Fitting Model
2024-12-20 18:06:13,721:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:06:13,721:INFO:create_model() successfully completed......................................
2024-12-20 18:06:13,814:INFO:_master_model_container: 54
2024-12-20 18:06:13,814:INFO:_display_container: 15
2024-12-20 18:06:13,814:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:06:13,814:INFO:finalize_model() successfully completed......................................
2024-12-20 18:06:13,924:INFO:Initializing finalize_model()
2024-12-20 18:06:13,924:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:06:13,924:INFO:Finalizing BayesianRidge()
2024-12-20 18:06:13,924:INFO:Initializing create_model()
2024-12-20 18:06:13,924:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:06:13,924:INFO:Checking exceptions
2024-12-20 18:06:13,924:INFO:Importing libraries
2024-12-20 18:06:13,924:INFO:Copying training dataset
2024-12-20 18:06:13,924:INFO:Defining folds
2024-12-20 18:06:13,924:INFO:Declaring metric variables
2024-12-20 18:06:13,924:INFO:Importing untrained model
2024-12-20 18:06:13,924:INFO:Declaring custom model
2024-12-20 18:06:13,924:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:06:13,924:INFO:Cross validation set to False
2024-12-20 18:06:13,924:INFO:Fitting Model
2024-12-20 18:06:13,955:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:06:13,955:INFO:create_model() successfully completed......................................
2024-12-20 18:06:14,064:INFO:_master_model_container: 54
2024-12-20 18:06:14,064:INFO:_display_container: 15
2024-12-20 18:06:14,064:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:06:14,064:INFO:finalize_model() successfully completed......................................
2024-12-20 18:06:14,180:INFO:Initializing finalize_model()
2024-12-20 18:06:14,180:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:06:14,180:INFO:Finalizing Ridge(random_state=6107)
2024-12-20 18:06:14,180:INFO:Initializing create_model()
2024-12-20 18:06:14,180:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:06:14,180:INFO:Checking exceptions
2024-12-20 18:06:14,180:INFO:Importing libraries
2024-12-20 18:06:14,180:INFO:Copying training dataset
2024-12-20 18:06:14,180:INFO:Defining folds
2024-12-20 18:06:14,180:INFO:Declaring metric variables
2024-12-20 18:06:14,186:INFO:Importing untrained model
2024-12-20 18:06:14,187:INFO:Declaring custom model
2024-12-20 18:06:14,187:INFO:Ridge Regression Imported successfully
2024-12-20 18:06:14,187:INFO:Cross validation set to False
2024-12-20 18:06:14,187:INFO:Fitting Model
2024-12-20 18:06:14,221:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:06:14,221:INFO:create_model() successfully completed......................................
2024-12-20 18:06:14,339:INFO:_master_model_container: 54
2024-12-20 18:06:14,339:INFO:_display_container: 15
2024-12-20 18:06:14,346:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:06:14,346:INFO:finalize_model() successfully completed......................................
2024-12-20 18:06:14,457:INFO:Initializing finalize_model()
2024-12-20 18:06:14,457:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:06:14,457:INFO:Finalizing LinearRegression(n_jobs=-1)
2024-12-20 18:06:14,459:INFO:Initializing create_model()
2024-12-20 18:06:14,459:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:06:14,459:INFO:Checking exceptions
2024-12-20 18:06:14,460:INFO:Importing libraries
2024-12-20 18:06:14,460:INFO:Copying training dataset
2024-12-20 18:06:14,461:INFO:Defining folds
2024-12-20 18:06:14,461:INFO:Declaring metric variables
2024-12-20 18:06:14,461:INFO:Importing untrained model
2024-12-20 18:06:14,461:INFO:Declaring custom model
2024-12-20 18:06:14,461:INFO:Linear Regression Imported successfully
2024-12-20 18:06:14,462:INFO:Cross validation set to False
2024-12-20 18:06:14,462:INFO:Fitting Model
2024-12-20 18:06:14,503:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:06:14,503:INFO:create_model() successfully completed......................................
2024-12-20 18:06:14,629:INFO:_master_model_container: 54
2024-12-20 18:06:14,630:INFO:_display_container: 15
2024-12-20 18:06:14,636:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:06:14,636:INFO:finalize_model() successfully completed......................................
2024-12-20 18:06:14,757:INFO:Initializing predict_model()
2024-12-20 18:06:14,757:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F03E3420>)
2024-12-20 18:06:14,757:INFO:Checking exceptions
2024-12-20 18:06:14,757:INFO:Preloading libraries
2024-12-20 18:06:14,820:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:06:14,936:INFO:Initializing predict_model()
2024-12-20 18:06:14,936:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F03E3420>)
2024-12-20 18:06:14,936:INFO:Checking exceptions
2024-12-20 18:06:14,936:INFO:Preloading libraries
2024-12-20 18:06:14,983:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:06:15,102:INFO:Initializing predict_model()
2024-12-20 18:06:15,102:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F03E3420>)
2024-12-20 18:06:15,102:INFO:Checking exceptions
2024-12-20 18:06:15,102:INFO:Preloading libraries
2024-12-20 18:06:15,149:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:06:15,264:INFO:Initializing predict_model()
2024-12-20 18:06:15,264:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F03E3420>)
2024-12-20 18:06:15,264:INFO:Checking exceptions
2024-12-20 18:06:15,264:INFO:Preloading libraries
2024-12-20 18:06:15,311:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:06:23,909:INFO:Initializing finalize_model()
2024-12-20 18:06:23,909:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:06:23,910:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:06:23,912:INFO:Initializing create_model()
2024-12-20 18:06:23,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:06:23,912:INFO:Checking exceptions
2024-12-20 18:06:23,913:INFO:Importing libraries
2024-12-20 18:06:23,913:INFO:Copying training dataset
2024-12-20 18:06:23,913:INFO:Defining folds
2024-12-20 18:06:23,914:INFO:Declaring metric variables
2024-12-20 18:06:23,914:INFO:Importing untrained model
2024-12-20 18:06:23,914:INFO:Declaring custom model
2024-12-20 18:06:23,915:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:06:23,915:INFO:Cross validation set to False
2024-12-20 18:06:23,915:INFO:Fitting Model
2024-12-20 18:06:24,027:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:06:24,027:INFO:create_model() successfully completed......................................
2024-12-20 18:06:24,129:INFO:_master_model_container: 54
2024-12-20 18:06:24,129:INFO:_display_container: 19
2024-12-20 18:06:24,129:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:06:24,129:INFO:finalize_model() successfully completed......................................
2024-12-20 18:06:24,223:INFO:Initializing finalize_model()
2024-12-20 18:06:24,223:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:06:24,223:INFO:Finalizing BayesianRidge()
2024-12-20 18:06:24,223:INFO:Initializing create_model()
2024-12-20 18:06:24,223:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:06:24,223:INFO:Checking exceptions
2024-12-20 18:06:24,223:INFO:Importing libraries
2024-12-20 18:06:24,223:INFO:Copying training dataset
2024-12-20 18:06:24,239:INFO:Defining folds
2024-12-20 18:06:24,239:INFO:Declaring metric variables
2024-12-20 18:06:24,239:INFO:Importing untrained model
2024-12-20 18:06:24,239:INFO:Declaring custom model
2024-12-20 18:06:24,239:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:06:24,239:INFO:Cross validation set to False
2024-12-20 18:06:24,239:INFO:Fitting Model
2024-12-20 18:06:24,270:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:06:24,270:INFO:create_model() successfully completed......................................
2024-12-20 18:06:24,379:INFO:_master_model_container: 54
2024-12-20 18:06:24,379:INFO:_display_container: 19
2024-12-20 18:06:24,379:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:06:24,379:INFO:finalize_model() successfully completed......................................
2024-12-20 18:06:24,500:INFO:Initializing finalize_model()
2024-12-20 18:06:24,500:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:06:24,500:INFO:Finalizing Ridge(random_state=6107)
2024-12-20 18:06:24,506:INFO:Initializing create_model()
2024-12-20 18:06:24,506:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:06:24,506:INFO:Checking exceptions
2024-12-20 18:06:24,506:INFO:Importing libraries
2024-12-20 18:06:24,506:INFO:Copying training dataset
2024-12-20 18:06:24,506:INFO:Defining folds
2024-12-20 18:06:24,506:INFO:Declaring metric variables
2024-12-20 18:06:24,506:INFO:Importing untrained model
2024-12-20 18:06:24,506:INFO:Declaring custom model
2024-12-20 18:06:24,506:INFO:Ridge Regression Imported successfully
2024-12-20 18:06:24,506:INFO:Cross validation set to False
2024-12-20 18:06:24,506:INFO:Fitting Model
2024-12-20 18:06:24,542:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:06:24,542:INFO:create_model() successfully completed......................................
2024-12-20 18:06:24,653:INFO:_master_model_container: 54
2024-12-20 18:06:24,653:INFO:_display_container: 19
2024-12-20 18:06:24,660:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:06:24,660:INFO:finalize_model() successfully completed......................................
2024-12-20 18:06:24,755:INFO:Initializing finalize_model()
2024-12-20 18:06:24,755:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:06:24,755:INFO:Finalizing LinearRegression(n_jobs=-1)
2024-12-20 18:06:24,755:INFO:Initializing create_model()
2024-12-20 18:06:24,755:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:06:24,755:INFO:Checking exceptions
2024-12-20 18:06:24,771:INFO:Importing libraries
2024-12-20 18:06:24,771:INFO:Copying training dataset
2024-12-20 18:06:24,771:INFO:Defining folds
2024-12-20 18:06:24,771:INFO:Declaring metric variables
2024-12-20 18:06:24,771:INFO:Importing untrained model
2024-12-20 18:06:24,771:INFO:Declaring custom model
2024-12-20 18:06:24,771:INFO:Linear Regression Imported successfully
2024-12-20 18:06:24,771:INFO:Cross validation set to False
2024-12-20 18:06:24,771:INFO:Fitting Model
2024-12-20 18:06:24,802:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:06:24,802:INFO:create_model() successfully completed......................................
2024-12-20 18:06:24,912:INFO:_master_model_container: 54
2024-12-20 18:06:24,912:INFO:_display_container: 19
2024-12-20 18:06:24,912:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:06:24,912:INFO:finalize_model() successfully completed......................................
2024-12-20 18:06:25,030:INFO:Initializing predict_model()
2024-12-20 18:06:25,030:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190E55CADE0>)
2024-12-20 18:06:25,030:INFO:Checking exceptions
2024-12-20 18:06:25,030:INFO:Preloading libraries
2024-12-20 18:06:25,093:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:06:25,209:INFO:Initializing predict_model()
2024-12-20 18:06:25,210:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F18CE5C0>)
2024-12-20 18:06:25,210:INFO:Checking exceptions
2024-12-20 18:06:25,210:INFO:Preloading libraries
2024-12-20 18:06:25,256:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:06:25,357:INFO:Initializing predict_model()
2024-12-20 18:06:25,357:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F18CE5C0>)
2024-12-20 18:06:25,357:INFO:Checking exceptions
2024-12-20 18:06:25,357:INFO:Preloading libraries
2024-12-20 18:06:25,416:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:06:25,532:INFO:Initializing predict_model()
2024-12-20 18:06:25,532:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F18CE5C0>)
2024-12-20 18:06:25,532:INFO:Checking exceptions
2024-12-20 18:06:25,532:INFO:Preloading libraries
2024-12-20 18:06:25,577:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:07:55,930:INFO:Initializing finalize_model()
2024-12-20 18:07:55,930:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:07:55,931:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:07:55,933:INFO:Initializing create_model()
2024-12-20 18:07:55,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:07:55,934:INFO:Checking exceptions
2024-12-20 18:07:55,935:INFO:Importing libraries
2024-12-20 18:07:55,935:INFO:Copying training dataset
2024-12-20 18:07:55,935:INFO:Defining folds
2024-12-20 18:07:55,935:INFO:Declaring metric variables
2024-12-20 18:07:55,936:INFO:Importing untrained model
2024-12-20 18:07:55,936:INFO:Declaring custom model
2024-12-20 18:07:55,936:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:07:55,937:INFO:Cross validation set to False
2024-12-20 18:07:55,937:INFO:Fitting Model
2024-12-20 18:07:56,045:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:07:56,045:INFO:create_model() successfully completed......................................
2024-12-20 18:07:56,143:INFO:_master_model_container: 54
2024-12-20 18:07:56,143:INFO:_display_container: 23
2024-12-20 18:07:56,143:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:07:56,143:INFO:finalize_model() successfully completed......................................
2024-12-20 18:07:56,237:INFO:Initializing finalize_model()
2024-12-20 18:07:56,237:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:07:56,237:INFO:Finalizing BayesianRidge()
2024-12-20 18:07:56,253:INFO:Initializing create_model()
2024-12-20 18:07:56,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=BayesianRidge(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:07:56,253:INFO:Checking exceptions
2024-12-20 18:07:56,253:INFO:Importing libraries
2024-12-20 18:07:56,253:INFO:Copying training dataset
2024-12-20 18:07:56,253:INFO:Defining folds
2024-12-20 18:07:56,253:INFO:Declaring metric variables
2024-12-20 18:07:56,253:INFO:Importing untrained model
2024-12-20 18:07:56,253:INFO:Declaring custom model
2024-12-20 18:07:56,253:INFO:Bayesian Ridge Imported successfully
2024-12-20 18:07:56,253:INFO:Cross validation set to False
2024-12-20 18:07:56,253:INFO:Fitting Model
2024-12-20 18:07:56,284:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:07:56,284:INFO:create_model() successfully completed......................................
2024-12-20 18:07:56,389:INFO:_master_model_container: 54
2024-12-20 18:07:56,389:INFO:_display_container: 23
2024-12-20 18:07:56,405:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())])
2024-12-20 18:07:56,405:INFO:finalize_model() successfully completed......................................
2024-12-20 18:07:56,507:INFO:Initializing finalize_model()
2024-12-20 18:07:56,507:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:07:56,507:INFO:Finalizing Ridge(random_state=6107)
2024-12-20 18:07:56,507:INFO:Initializing create_model()
2024-12-20 18:07:56,507:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Ridge(random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:07:56,507:INFO:Checking exceptions
2024-12-20 18:07:56,507:INFO:Importing libraries
2024-12-20 18:07:56,507:INFO:Copying training dataset
2024-12-20 18:07:56,513:INFO:Defining folds
2024-12-20 18:07:56,513:INFO:Declaring metric variables
2024-12-20 18:07:56,513:INFO:Importing untrained model
2024-12-20 18:07:56,513:INFO:Declaring custom model
2024-12-20 18:07:56,513:INFO:Ridge Regression Imported successfully
2024-12-20 18:07:56,513:INFO:Cross validation set to False
2024-12-20 18:07:56,513:INFO:Fitting Model
2024-12-20 18:07:56,548:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:07:56,555:INFO:create_model() successfully completed......................................
2024-12-20 18:07:56,659:INFO:_master_model_container: 54
2024-12-20 18:07:56,659:INFO:_display_container: 23
2024-12-20 18:07:56,666:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))])
2024-12-20 18:07:56,666:INFO:finalize_model() successfully completed......................................
2024-12-20 18:07:56,776:INFO:Initializing finalize_model()
2024-12-20 18:07:56,776:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:07:56,776:INFO:Finalizing LinearRegression(n_jobs=-1)
2024-12-20 18:07:56,776:INFO:Initializing create_model()
2024-12-20 18:07:56,776:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=LinearRegression(n_jobs=-1), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:07:56,776:INFO:Checking exceptions
2024-12-20 18:07:56,776:INFO:Importing libraries
2024-12-20 18:07:56,776:INFO:Copying training dataset
2024-12-20 18:07:56,776:INFO:Defining folds
2024-12-20 18:07:56,776:INFO:Declaring metric variables
2024-12-20 18:07:56,776:INFO:Importing untrained model
2024-12-20 18:07:56,776:INFO:Declaring custom model
2024-12-20 18:07:56,776:INFO:Linear Regression Imported successfully
2024-12-20 18:07:56,792:INFO:Cross validation set to False
2024-12-20 18:07:56,792:INFO:Fitting Model
2024-12-20 18:07:56,831:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:07:56,831:INFO:create_model() successfully completed......................................
2024-12-20 18:07:56,940:INFO:_master_model_container: 54
2024-12-20 18:07:56,941:INFO:_display_container: 23
2024-12-20 18:07:56,946:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))])
2024-12-20 18:07:56,947:INFO:finalize_model() successfully completed......................................
2024-12-20 18:07:57,064:INFO:Initializing predict_model()
2024-12-20 18:07:57,064:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F18CCAE0>)
2024-12-20 18:07:57,064:INFO:Checking exceptions
2024-12-20 18:07:57,064:INFO:Preloading libraries
2024-12-20 18:07:57,124:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:07:57,239:INFO:Initializing predict_model()
2024-12-20 18:07:57,239:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', BayesianRidge())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190F18CCAE0>)
2024-12-20 18:07:57,239:INFO:Checking exceptions
2024-12-20 18:07:57,239:INFO:Preloading libraries
2024-12-20 18:07:57,285:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:07:57,394:INFO:Initializing predict_model()
2024-12-20 18:07:57,394:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', Ridge(random_state=6107))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEBEA700>)
2024-12-20 18:07:57,394:INFO:Checking exceptions
2024-12-20 18:07:57,394:INFO:Preloading libraries
2024-12-20 18:07:57,444:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:07:57,546:INFO:Initializing predict_model()
2024-12-20 18:07:57,546:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator', LinearRegression(n_jobs=-1))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000190EEBEA700>)
2024-12-20 18:07:57,546:INFO:Checking exceptions
2024-12-20 18:07:57,546:INFO:Preloading libraries
2024-12-20 18:07:57,604:WARNING:C:\Users\MOKSH\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2024-12-20 18:11:12,140:INFO:Initializing finalize_model()
2024-12-20 18:11:12,140:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:11:12,140:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:11:12,143:INFO:Initializing create_model()
2024-12-20 18:11:12,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:11:12,143:INFO:Checking exceptions
2024-12-20 18:11:12,144:INFO:Importing libraries
2024-12-20 18:11:12,144:INFO:Copying training dataset
2024-12-20 18:11:12,145:INFO:Defining folds
2024-12-20 18:11:12,145:INFO:Declaring metric variables
2024-12-20 18:11:12,145:INFO:Importing untrained model
2024-12-20 18:11:12,145:INFO:Declaring custom model
2024-12-20 18:11:12,146:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:11:12,146:INFO:Cross validation set to False
2024-12-20 18:11:12,146:INFO:Fitting Model
2024-12-20 18:11:12,256:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:11:12,256:INFO:create_model() successfully completed......................................
2024-12-20 18:11:12,365:INFO:_master_model_container: 54
2024-12-20 18:11:12,365:INFO:_display_container: 27
2024-12-20 18:11:12,365:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:11:12,365:INFO:finalize_model() successfully completed......................................
2024-12-20 18:11:18,527:INFO:Initializing finalize_model()
2024-12-20 18:11:18,527:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-12-20 18:11:18,527:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6107)
2024-12-20 18:11:18,530:INFO:Initializing create_model()
2024-12-20 18:11:18,530:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000190EE305350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6107), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-12-20 18:11:18,530:INFO:Checking exceptions
2024-12-20 18:11:18,532:INFO:Importing libraries
2024-12-20 18:11:18,532:INFO:Copying training dataset
2024-12-20 18:11:18,532:INFO:Defining folds
2024-12-20 18:11:18,532:INFO:Declaring metric variables
2024-12-20 18:11:18,532:INFO:Importing untrained model
2024-12-20 18:11:18,532:INFO:Declaring custom model
2024-12-20 18:11:18,533:INFO:Extra Trees Regressor Imported successfully
2024-12-20 18:11:18,533:INFO:Cross validation set to False
2024-12-20 18:11:18,533:INFO:Fitting Model
2024-12-20 18:11:18,641:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:11:18,641:INFO:create_model() successfully completed......................................
2024-12-20 18:11:18,730:INFO:_master_model_container: 54
2024-12-20 18:11:18,730:INFO:_display_container: 27
2024-12-20 18:11:18,749:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:11:18,749:INFO:finalize_model() successfully completed......................................
2024-12-20 18:11:34,125:INFO:Initializing save_model()
2024-12-20 18:11:34,125:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))]), model_name=best_regression_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\MOKSH\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-12-20 18:11:34,125:INFO:Adding model into prep_pipe
2024-12-20 18:11:34,125:WARNING:Only Model saved as it was a pipeline.
2024-12-20 18:11:34,165:INFO:best_regression_model.pkl saved in current working directory
2024-12-20 18:11:34,166:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['F1', 'F2', 'F3', 'F4', 'F5', 'F6',
                                             'F7', 'F8', 'F9', 'F10', 'F11',
                                             'F12', 'F13', 'F14', 'F15'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6107))])
2024-12-20 18:11:34,166:INFO:save_model() successfully completed......................................
